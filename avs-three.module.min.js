// @license Licensed by Advanced Visual Systems Inc. to You under the Apache License, Version 2.0.
import{Vector3,Group as Group$1,Matrix4,Points as Points$1,LineSegments as LineSegments$1,Mesh as Mesh$1,PointLight as PointLight$1,DirectionalLight as DirectionalLight$1,AmbientLight as AmbientLight$1,OrthographicCamera as OrthographicCamera$1,PerspectiveCamera as PerspectiveCamera$1,Scene as Scene$1,Matrix3,Vector2,Color,UniformsUtils,UniformsLib as UniformsLib$1,ShaderMaterial,LessEqualDepth,AlwaysStencilFunc,KeepStencilOp,Loader,FileLoader,Vector4,Plane,Float32BufferAttribute,Box3,InstancedBufferGeometry,InstancedInterleavedBuffer,InterleavedBufferAttribute,Sphere,Ray,Object3D,MathUtils,LoaderUtils,BufferGeometryLoader,LoadingManager,ImageLoader,CubeTexture,Texture,Fog,FogExp2,UVMapping,CubeReflectionMapping,CubeRefractionMapping,EquirectangularReflectionMapping,EquirectangularRefractionMapping,CubeUVReflectionMapping,CubeUVRefractionMapping,RepeatWrapping,ClampToEdgeWrapping,MirroredRepeatWrapping,NearestFilter,NearestMipmapNearestFilter,NearestMipmapLinearFilter,LinearFilter,LinearMipmapNearestFilter,LinearMipmapLinearFilter,Raycaster,WebGLRenderTarget,InstancedBufferAttribute,BufferGeometry,EventDispatcher,TOUCH,Quaternion,MOUSE,Spherical,Clock,NumberKeyframeTrack,BooleanKeyframeTrack,AnimationClip,AnimationObjectGroup,AnimationMixer}from"three";var REVISION="1",DEFAULT_VIEWER_WIDTH=400,DEFAULT_VIEWER_HEIGHT=400,RAYCASTER_LINE_PRECISION=.03,PickDepthEnum={All:0,Closest:1},PickTypeEnum={Ray:0,Rectangle:1},PickLevelEnum={Cell:0,CellSet:1,SceneNode:2},CellTypeEnum={Points:1,Lines:2,Triangles:3,Quads:4};const _finalScale$3=new Vector3;class Group extends Group$1{constructor(){super(),this.scaleFactorX=1,this.scaleFactorY=1,this.scaleFactorZ=1}updateMatrix(){_finalScale$3.set(this.scale.x*this.scaleFactorX,this.scale.y*this.scaleFactorY,this.scale.z*this.scaleFactorZ),this.matrix.compose(this.position,this.quaternion,_finalScale$3),this.matrixWorldNeedsUpdate=!0}toJSON(e){const t=super.toJSON(e);return t.metadata=void 0,1===this.layers.mask&&(t.object.layers=void 0),this.matrix.equals(new Matrix4)&&(t.object.matrix=void 0),t}}const _position=new Vector3,_finalScale$2=new Vector3;class Points extends Points$1{constructor(e,t){super(e,t),this.scaleFactorX=1,this.scaleFactorY=1,this.scaleFactorZ=1}updateMatrix(){_finalScale$2.set(this.scale.x*this.scaleFactorX,this.scale.y*this.scaleFactorY,this.scale.z*this.scaleFactorZ),this.matrix.compose(this.position,this.quaternion,_finalScale$2),this.matrixWorldNeedsUpdate=!0}toJSON(e){const t=super.toJSON(e);return t.metadata=void 0,1===this.layers.mask&&(t.object.layers=void 0),this.matrix.equals(new Matrix4)&&(t.object.matrix=void 0),t}raycast(e,t){const i=this.geometry.attributes,n=i.position.array;let a,r,o,s,l,c,h=.5;void 0===this.material.vertexSizes&&(h=this.material.size/2);for(let d=0,p=n.length/3;d<p;d++)_position.fromArray(n,3*d),_position.applyMatrix4(this.matrixWorld),_position.project(e.camera),a=(_position.x+1)/2*e.scene.width,r=(1-(_position.y+1)/2)*e.scene.height,this.material.vertexSizes&&(h=i.vsize.array[d]/2),o=a-h,s=a+h,l=r-h,c=r+h,e.x>=o&&e.x<=s&&e.y>=l&&e.y<=c&&t.push({distance:null,distanceToRay:null,point:null,index:d,face:null,object:this})}}const _finalScale$1=new Vector3;class LineSegments extends LineSegments$1{constructor(e,t){super(e,t),this.scaleFactorX=1,this.scaleFactorY=1,this.scaleFactorZ=1}updateMatrix(){_finalScale$1.set(this.scale.x*this.scaleFactorX,this.scale.y*this.scaleFactorY,this.scale.z*this.scaleFactorZ),this.matrix.compose(this.position,this.quaternion,_finalScale$1),this.matrixWorldNeedsUpdate=!0}toJSON(e){const t=super.toJSON(this,e);return t.metadata=void 0,1===this.layers.mask&&(t.object.layers=void 0),this.matrix.equals(new Matrix4)&&(t.object.matrix=void 0),t}}const _instanceLocalMatrix=new Matrix4,_instanceWorldMatrix=new Matrix4,_instanceOrientationMatrix=new Matrix4,_instanceIntersects=[],_mesh=new Mesh$1,_finalScale=new Vector3;class Mesh extends Mesh$1{constructor(e,t){super(e,t),this.scaleFactorX=1,this.scaleFactorY=1,this.scaleFactorZ=1}updateMatrix(){_finalScale.set(this.scale.x*this.scaleFactorX,this.scale.y*this.scaleFactorY,this.scale.z*this.scaleFactorZ),this.matrix.compose(this.position,this.quaternion,_finalScale),this.matrixWorldNeedsUpdate=!0}raycast(e,t){if(_mesh.geometry=this.geometry,_mesh.material=this.material,void 0===_mesh.material||void 0===_mesh.geometry)return;if(!_mesh.material.glyphs)return super.raycast(e,t);const i=this.matrixWorld,n=_mesh.geometry.attributes.offset.array,a=n.length/3;let r,o,s;for(let l=0;l<a;l++){if(r=3*l,_mesh.material.vertexScales?(o=_mesh.geometry.attributes.scale.array,_instanceLocalMatrix.makeScale(o[r],o[r+1],o[r+2])):_instanceLocalMatrix.makeScale(_mesh.material.scale.x,_mesh.material.scale.y,_mesh.material.scale.z),_mesh.material.vertexOrientations&&(s=_mesh.geometry.attributes.orientation.array,_instanceOrientationMatrix.set(s[r],s[r+3],s[r+6],0,s[r+1],s[r+4],s[r+7],0,s[r+2],s[r+5],s[r+8],0,0,0,0,1),_instanceLocalMatrix.multiply(_instanceOrientationMatrix)),_instanceLocalMatrix.setPosition(n[r],n[r+1],n[r+2]),_instanceWorldMatrix.multiplyMatrices(i,_instanceLocalMatrix),_mesh.matrixWorld=_instanceWorldMatrix,_mesh.raycast(e,_instanceIntersects),_instanceIntersects.length>0){const e=_instanceIntersects[0];e.faceIndex=l,e.object=this,t.push(e)}_instanceIntersects.length=0}}toJSON(e){const t=super.toJSON(e);return t.metadata=void 0,1===this.layers.mask&&(t.object.layers=void 0),this.matrix.equals(new Matrix4)&&(t.object.matrix=void 0),t}}class PointLight extends PointLight$1{toJSON(e){const t=super.toJSON(e);return t.metadata=void 0,1===this.layers.mask&&(t.object.layers=void 0),this.matrix.equals(new Matrix4)&&(t.object.matrix=void 0),16777215===this.color.getHex()&&(t.object.color=void 0),1===this.intensity&&(t.object.intensity=void 0),t.object.shadow=void 0,t}}class DirectionalLight extends DirectionalLight$1{toJSON(e){const t=super.toJSON(e);return t.metadata=void 0,1===this.layers.mask&&(t.object.layers=void 0),this.matrix.equals(new Matrix4)&&(t.object.matrix=void 0),16777215===this.color.getHex()&&(t.object.color=void 0),1===this.intensity&&(t.object.intensity=void 0),t.object.shadow=void 0,t}}class AmbientLight extends AmbientLight$1{toJSON(e){const t=super.toJSON(e);return t.metadata=void 0,1===this.layers.mask&&(t.object.layers=void 0),this.matrix.equals(new Matrix4)&&(t.object.matrix=void 0),16777215===this.color.getHex()&&(t.object.color=void 0),1===this.intensity&&(t.object.intensity=void 0),t}}class OrthographicCamera extends OrthographicCamera$1{constructor(e,t,i,n,a,r){super(e,t,i,n,a,r),this.keepAspectRatio=!1,this.origLeft=e,this.origRight=t,this.origTop=i,this.origBottom=n}toJSON(e){const t=super.toJSON(e);return t.metadata=void 0,1===this.layers.mask&&(t.object.layers=void 0),this.matrix.equals(new Matrix4)&&(t.object.matrix=void 0),1===this.zoom&&(t.object.zoom=void 0),-1===this.left&&(t.object.left=void 0),1===this.right&&(t.object.right=void 0),1===this.top&&(t.object.top=void 0),-1===this.bottom&&(t.object.bottom=void 0),.1===this.near&&(t.object.near=void 0),2e3===this.far&&(t.object.far=void 0),this.keepAspectRatio&&(t.object.keepAspectRatio=!0),t}}class PerspectiveCamera extends PerspectiveCamera$1{toJSON(e){const t=super.toJSON(e);return t.metadata=void 0,1===this.layers.mask&&(t.object.layers=void 0),this.matrix.equals(new Matrix4)&&(t.object.matrix=void 0),50===this.fov&&(t.object.fov=void 0),1===this.zoom&&(t.object.zoom=void 0),.1===this.near&&(t.object.near=void 0),2e3===this.far&&(t.object.far=void 0),10===this.focus&&(t.object.focus=void 0),1===this.aspect&&(t.object.aspect=void 0),35===this.filmGauge&&(t.object.filmGauge=void 0),0===this.filmOffset&&(t.object.filmOffset=void 0),t}}class Scene extends Scene$1{toJSON(e){const t=super.toJSON(e);return t.metadata=void 0,1===this.layers.mask&&(t.object.layers=void 0),this.matrix.equals(new Matrix4)&&(t.object.matrix=void 0),t}}const UniformsLib={base:{pickState:{value:new Float32Array(1)},startCell:{value:0},uscale:{value:new Vector3(1,1,1)},scaleFactorX:{value:1},scaleFactorY:{value:1},scaleFactorZ:{value:1},uorientation:{value:new Matrix3},opacityFactor:{value:1}},line:{linePattern:{value:65535},resolution:{value:new Vector2(1,1)}},mesh:{stipple:{value:0},stippleColor:{value:new Color(0)},stipplePattern:{value:new Float32Array(64)}}};var points_frag="uniform vec3 diffuse;\nuniform float opacity;\nuniform float opacityFactor;\nuniform float pickState[ 1 ];\nvarying vec3 vPickColor;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( pickState[ 0 ] > 0.5 ) {\n\t\tgl_FragColor = vec4( vPickColor, 1.0 );\n\t} else {\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity * opacityFactor );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t}\n}",points_vert="attribute float vsize;\nattribute float cellCount;\nattribute vec3 offset;\nattribute vec3 scale;\nuniform vec3 uscale;\nuniform float scaleFactorX;\nuniform float scaleFactorY;\nuniform float scaleFactorZ;\nattribute mat3 orientation;\nuniform mat3 uorientation;\nuniform float size;\nuniform float pickState[ 1 ];\nuniform float startCell;\nvarying vec3 vPickColor;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tif ( pickState[ 0 ] > 0.5 ) {\n\t\tfloat cellNum = startCell + cellCount;\n\t\t\n\t\tfloat red = fract( cellNum / (255.0*255.0*255.0) );\n\t\tif ( pickState[ 0 ] > 1.5 ) {\n\t\n\t\t\tfloat red2 = fract( cellNum / (255.0*255.0*255.0*255.0*255.0*255.0) );\n\t\t\tfloat green2 = fract( cellNum / (255.0*255.0*255.0*255.0*255.0) );\n\t\t\tfloat blue2 = fract( cellNum / (255.0*255.0*255.0*255.0) );\n\t\n\t\t\tred2 -= green2 / 255.0;\n\t\t\tgreen2 -= blue2 / 255.0;\n\t\t\tblue2 -= red / 255.0;\n\t\t\tvPickColor = vec3( red2, green2, blue2 );\n\t\t} else {\n\t\t\tfloat green = fract( cellNum / (255.0*255.0) );\n\t\t\tfloat blue = fract( cellNum / 255.0 );\n\t\t\tred -= green / 255.0;\n\t\t\tgreen -= blue / 255.0;\n\t\t\tvPickColor = vec3( red, green, blue );\n\t\t}\n\t}\n\t#include <color_vertex>\n\t#include <begin_vertex>\n#ifdef GLYPH\n#ifdef USE_SCALE\n\ttransformed *= scale;\n#else\n\ttransformed *= uscale;\n#endif\n\tvec3 scaleFactor = vec3( scaleFactorX, scaleFactorY, scaleFactorZ );\n\ttransformed *= scaleFactor;\n#ifdef USE_ORIENTATION\n\ttransformed = orientation * transformed;\n#else\n\ttransformed = uorientation * transformed;\n#endif\n\ttransformed += offset;\n#endif\n\t#include <project_vertex>\n#ifdef USE_SIZE\n\tgl_PointSize = vsize;\n#else\n\tgl_PointSize = size;\n#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",line_frag="uniform vec3 diffuse;\nuniform float opacity;\nuniform float opacityFactor;\nuniform float linePattern;\nuniform float pickState[ 1 ];\nvarying vec3 vPickColor;\n#ifdef USE_PATTERN\nvarying float vPattern;\n#endif\nvarying float vDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( pickState[ 0 ] > 0.5 ) {\n\t\tgl_FragColor = vec4( vPickColor, 1.0 );\n\t} else {\n\tfloat pattern;\n#ifdef USE_PATTERN\n\tpattern = floor( vPattern );\n#else\n\tpattern = linePattern;\n#endif\n\tfloat shift = pow( 2.0, floor( mod( vDistance, 16.0 ) ) );\n\tif( mod( floor( pattern / shift ), 2.0 ) < 0.5 ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity * opacityFactor );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t}\n}",line_vert="attribute vec3 otherPosition;\nattribute float pattern;\nattribute float cellCount;\nattribute vec3 offset;\nattribute vec3 scale;\nuniform vec3 uscale;\nuniform float scaleFactorX;\nuniform float scaleFactorY;\nuniform float scaleFactorZ;\nattribute mat3 orientation;\nuniform mat3 uorientation;\nuniform float pickState[ 1 ];\nuniform float startCell;\nuniform vec2 resolution;\n#ifdef USE_PATTERN\nvarying float vPattern;\n#endif\nvarying float vDistance;\nvarying vec3 vPickColor;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tif ( pickState[ 0 ] > 0.5 ) {\n\t\tfloat cellNum = startCell + cellCount;\n\t\t\n\t\tfloat red = fract( cellNum / (255.0*255.0*255.0) );\n\t\tif ( pickState[ 0 ] > 1.5 ) {\n\t\n\t\t\tfloat red2 = fract( cellNum / (255.0*255.0*255.0*255.0*255.0*255.0) );\n\t\t\tfloat green2 = fract( cellNum / (255.0*255.0*255.0*255.0*255.0) );\n\t\t\tfloat blue2 = fract( cellNum / (255.0*255.0*255.0*255.0) );\n\t\n\t\t\tred2 -= green2 / 255.0;\n\t\t\tgreen2 -= blue2 / 255.0;\n\t\t\tblue2 -= red / 255.0;\n\t\t\tvPickColor = vec3( red2, green2, blue2 );\n\t\t} else {\n\t\t\tfloat green = fract( cellNum / (255.0*255.0) );\n\t\t\tfloat blue = fract( cellNum / 255.0 );\n\t\t\tred -= green / 255.0;\n\t\t\tgreen -= blue / 255.0;\n\t\t\tvPickColor = vec3( red, green, blue );\n\t\t}\n\t}\n\t#include <color_vertex>\n\tvec3 transformed = vec3( position );\n\tvec3 otherTransformed = vec3( otherPosition );\n#ifdef GLYPH\n#ifdef USE_SCALE\n\ttransformed *= scale;\n\totherTransformed *= scale;\n#else\n\ttransformed *= uscale;\n\totherTransformed *= uscale;\n#endif\n\tvec3 scaleFactor = vec3( scaleFactorX, scaleFactorY, scaleFactorZ );\n\ttransformed *= scaleFactor;\n\totherTransformed *= scaleFactor;\n#ifdef USE_ORIENTATION\n\ttransformed = orientation * transformed;\n\totherTransformed = orientation * otherTransformed;\n#else\n\ttransformed = uorientation * transformed;\n\totherTransformed = uorientation * otherTransformed;\n#endif\n\ttransformed += offset;\n\totherTransformed += offset;\n#endif\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\tvec2 ndcPos1 = gl_Position.xy / gl_Position.w;\n\tvec4 other_Position = projectionMatrix * modelViewMatrix * vec4( otherTransformed, 1.0 );\n\tvec2 ndcPos2 = other_Position.xy / other_Position.w;\n\tfloat aspect = resolution.x / resolution.y;\n\tvec2 dir = ndcPos2 - ndcPos1;\n\tdir.x *= aspect;\n\tbool end = false;\n\tif ( dir.y < -EPSILON ) {\n\t\tend = true;\n\t}\n\telse if ( dir.y > EPSILON ) {\n\t\tend = false;\n\t}\n\telse if ( dir.x < -EPSILON ) {\n\t\tend = true;\n\t}\n\tvDistance = end ? 0.0 : length( dir * resolution ) / 2.0;\n#ifdef USE_PATTERN\n\tvPattern = pattern + 0.5;\n#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",thickline_vert="attribute vec3 instanceStart;\nattribute vec3 instanceEnd;\nattribute vec3 instanceColorStart;\nattribute vec3 instanceColorEnd;\nattribute float instancePattern;\nattribute float instanceLinewidthStart;\nattribute float instanceLinewidthEnd;\nattribute float cellCount;\nuniform float pickState[ 1 ];\nuniform float startCell;\nuniform float linewidth;\nuniform vec2 resolution;\n#ifdef USE_PATTERN\nvarying float vPattern;\n#endif\nvarying float vDistance;\nvarying vec3 vPickColor;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tif ( pickState[ 0 ] > 0.5 ) {\n\t\tfloat cellNum = startCell + cellCount;\n\t\t\n\t\tfloat red = fract( cellNum / (255.0*255.0*255.0) );\n\t\tif ( pickState[ 0 ] > 1.5 ) {\n\t\n\t\t\tfloat red2 = fract( cellNum / (255.0*255.0*255.0*255.0*255.0*255.0) );\n\t\t\tfloat green2 = fract( cellNum / (255.0*255.0*255.0*255.0*255.0) );\n\t\t\tfloat blue2 = fract( cellNum / (255.0*255.0*255.0*255.0) );\n\t\n\t\t\tred2 -= green2 / 255.0;\n\t\t\tgreen2 -= blue2 / 255.0;\n\t\t\tblue2 -= red / 255.0;\n\t\t\tvPickColor = vec3( red2, green2, blue2 );\n\t\t} else {\n\t\t\tfloat green = fract( cellNum / (255.0*255.0) );\n\t\t\tfloat blue = fract( cellNum / 255.0 );\n\t\t\tred -= green / 255.0;\n\t\t\tgreen -= blue / 255.0;\n\t\t\tvPickColor = vec3( red, green, blue );\n\t\t}\n\t}\n#ifdef USE_COLOR\n\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart.xyz : instanceColorEnd.xyz;\n#endif\n#ifdef USE_PATTERN\n\tvPattern = instancePattern + 0.5;\n#endif\n\tfloat widthFactor, avgWidthFactor;\n#ifdef USE_LINEWIDTH\n\twidthFactor = ( position.y < 0.5 ) ? instanceLinewidthStart : instanceLinewidthEnd;\n\tavgWidthFactor = ( instanceLinewidthStart + instanceLinewidthEnd ) / 2.0;\n#else\n\twidthFactor = avgWidthFactor = linewidth;\n#endif\n\tfloat aspect = resolution.x / resolution.y;\n\tvec4 start = vec4( instanceStart, 1.0 );\n\tvec4 end = vec4( instanceEnd, 1.0 );\n#ifdef LINEWIDTH_SCALE\n\tvec2 xyStart = start.xy;\n\tvec2 xyEnd = end.xy;\n\tvec2 scaleDir = xyEnd - xyStart;\n\tscaleDir = normalize( scaleDir );\n\tvec2 scaleOffset = vec2( scaleDir.y, -scaleDir.x );\n\tscaleOffset.y /= aspect;\n\tif ( position.x < 0.5 ) scaleOffset *= -1.0;\n\tscaleOffset *= ( widthFactor * 0.5 );\n\tvec4 startEnd = ( position.y < 0.5 ) ? start : end;\n\tvec4 scaleClip = vec4( startEnd );\n\tscaleClip.xy += scaleOffset;\n\tvec4 scalePosition = projectionMatrix * modelViewMatrix * scaleClip;\n\tvec4 scalePosition2 = projectionMatrix * modelViewMatrix * startEnd;\n\twidthFactor = length( scalePosition2.xy - scalePosition.xy ) * resolution.y * 2.0;\n#endif\n\tif ( widthFactor < 1.0 ) {\n\t\twidthFactor = 1.0;\n\t}\n\tif ( avgWidthFactor < 1.0 ) {\n\t\tavgWidthFactor = 1.0;\n\t}\n\tvec4 mvStart = modelViewMatrix * start;\n\tvec4 mvEnd = modelViewMatrix * end;\n\tvec4 clipStart = projectionMatrix * mvStart;\n\tvec4 clipEnd = projectionMatrix * mvEnd;\n\tvec2 ndcStart = clipStart.xy / clipStart.w;\n\tvec2 ndcEnd = clipEnd.xy / clipEnd.w;\n\tvec2 dir = ndcEnd - ndcStart;\n\tvec2 dirOrig = dir;\n\tdir.x *= aspect;\n\tdir = normalize( dir );\n\tvec2 offset = vec2( dir.y, -dir.x );\n\tdir.x /= aspect;\n\toffset.x /= aspect;\n\tif ( position.x < 0.5 ) offset *= -1.0;\n\toffset += ( position.y < 0.5 ) ? -dir * 0.3 : dir * 0.3;\n\toffset *= widthFactor;\n\tdir *= widthFactor;\n\toffset /= resolution.y;\n\tdir /= resolution.y;\n\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\toffset *= clip.w;\n\tclip.xy += offset;\n\tif ( clip.z > -1.0 ) {\n\t\tclip.z -= 5.0e-4;\n\t\tif ( clip.z < -1.0 ) clip.z = -1.0;\n\t}\n\tgl_Position = clip;\n\tvDistance = ( position.y < 0.5 ) ? 0.0 : ( length( dirOrig * resolution ) + 2.0 * length( dir * resolution ) ) / avgWidthFactor / 2.0;\n\tvec4 mvPosition = ( position.y < 0.5 ) ? mvStart : mvEnd;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag="uniform float stipple;\nuniform vec3 stippleColor;\nuniform vec4 stipplePattern[ 16 ];\nuniform vec3 diffuse;\nuniform float opacity;\nuniform float opacityFactor;\nuniform float pickState[ 1 ];\nvarying vec3 vPickColor;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( pickState[ 0 ] > 0.5 ) {\n\t\tgl_FragColor = vec4( vPickColor, 1.0 );\n\t} else {\n\tvec4 diffuseColor = vec4( diffuse, opacity * opacityFactor );\n\tif ( stipple > 0.5 ) {\n\t\tvec2 coord = floor( mod( gl_FragCoord.xy, 32.0 ) );\n\t\tint index = int( floor( coord.x / 64.0 ) + ( coord.y / 2.0 ) );\n\t\tint comp = int( floor( coord.x / 16.0 ) + mod( coord.y , 2.0 ) * 2.0 );\n\t\tfor ( int i = 0; i < 16; i ++ ) {\n\t\t\tif ( i == index ) {\n\t\t\t\tfloat shift = pow( 2.0, floor( mod( gl_FragCoord.x, 16.0 ) ) );\n\t\t\t\tfloat shortPattern;\n\t\t\t\tif ( comp == 0 ) {\n\t\t\t\t\tshortPattern = stipplePattern[ i ].x;\n\t\t\t\t} else if ( comp == 1 ) {\n\t\t\t\t\tshortPattern = stipplePattern[ i ].y;\n\t\t\t\t} else if ( comp == 2 ) {\n\t\t\t\t\tshortPattern = stipplePattern[ i ].z;\n\t\t\t\t} else {\n\t\t\t\t\tshortPattern = stipplePattern[ i ].w;\n\t\t\t\t}\n\t\t\t\tif ( mod( floor( shortPattern / shift ), 2.0 ) > 0.5 ) {\n\t\t\t\t\tdiffuseColor = vec4( stippleColor, opacity );\n\t\t\t\t} else if ( stipple < 1.5 ) {\n\t\t\t\t\tdiscard;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\t}\n}",meshbasic_vert="attribute float cellCount;\nattribute vec3 offset;\nattribute vec3 scale;\nuniform vec3 uscale;\nuniform float scaleFactorX;\nuniform float scaleFactorY;\nuniform float scaleFactorZ;\nattribute mat3 orientation;\nuniform mat3 uorientation;\nuniform float pickState[ 1 ];\nuniform float startCell;\nvarying vec3 vPickColor;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tif ( pickState[ 0 ] > 0.5 ) {\n\t\tfloat cellNum = startCell + cellCount;\n\t\t\n\t\tfloat red = fract( cellNum / (255.0*255.0*255.0) );\n\t\tif ( pickState[ 0 ] > 1.5 ) {\n\t\n\t\t\tfloat red2 = fract( cellNum / (255.0*255.0*255.0*255.0*255.0*255.0) );\n\t\t\tfloat green2 = fract( cellNum / (255.0*255.0*255.0*255.0*255.0) );\n\t\t\tfloat blue2 = fract( cellNum / (255.0*255.0*255.0*255.0) );\n\t\n\t\t\tred2 -= green2 / 255.0;\n\t\t\tgreen2 -= blue2 / 255.0;\n\t\t\tblue2 -= red / 255.0;\n\t\t\tvPickColor = vec3( red2, green2, blue2 );\n\t\t} else {\n\t\t\tfloat green = fract( cellNum / (255.0*255.0) );\n\t\t\tfloat blue = fract( cellNum / 255.0 );\n\t\t\tred -= green / 255.0;\n\t\t\tgreen -= blue / 255.0;\n\t\t\tvPickColor = vec3( red, green, blue );\n\t\t}\n\t}\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n#ifdef GLYPH\n#ifdef USE_SCALE\n\ttransformed *= scale;\n#else\n\ttransformed *= uscale;\n#endif\n\tvec3 scaleFactor = vec3( scaleFactorX, scaleFactorY, scaleFactorZ );\n\ttransformed *= scaleFactor;\n#ifdef USE_ORIENTATION\n\ttransformed = orientation * transformed;\n#else\n\ttransformed = uorientation * transformed;\n#endif\n\ttransformed += offset;\n#endif\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag="uniform float ambientIntensity;\nuniform float diffuseIntensity;\nuniform float stipple;\nuniform vec3 stippleColor;\nuniform vec4 stipplePattern[ 16 ];\nuniform float pickState[ 1 ];\nvarying vec3 vPickColor;\n#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\nuniform float opacityFactor;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( pickState[ 0 ] > 0.5 ) {\n\t\tgl_FragColor = vec4( vPickColor, 1.0 );\n\t} else {\n\tvec4 diffuseColor = vec4( diffuse, opacity * opacityFactor );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\tif ( stipple > 0.5 ) {\n\t\tvec2 coord = floor( mod( gl_FragCoord.xy, 32.0 ) );\n\t\tint index = int( floor( coord.x / 64.0 ) + ( coord.y / 2.0 ) );\n\t\tint comp = int( floor( coord.x / 16.0 ) + mod( coord.y , 2.0 ) * 2.0 );\n\t\tfor ( int i = 0; i < 16; i ++ ) {\n\t\t\tif ( i == index ) {\n\t\t\t\tfloat shift = pow( 2.0, floor( mod( gl_FragCoord.x, 16.0 ) ) );\n\t\t\t\tfloat shortPattern;\n\t\t\t\tif ( comp == 0 ) {\n\t\t\t\t\tshortPattern = stipplePattern[ i ].x;\n\t\t\t\t} else if ( comp == 1 ) {\n\t\t\t\t\tshortPattern = stipplePattern[ i ].y;\n\t\t\t\t} else if ( comp == 2 ) {\n\t\t\t\t\tshortPattern = stipplePattern[ i ].z;\n\t\t\t\t} else {\n\t\t\t\t\tshortPattern = stipplePattern[ i ].w;\n\t\t\t\t}\n\t\t\t\tif ( mod( floor( shortPattern / shift ), 2.0 ) > 0.5 ) {\n\t\t\t\t\tdiffuseColor = vec4( stippleColor, opacity );\n\t\t\t\t} else if ( stipple < 1.5 ) {\n\t\t\t\t\tdiscard;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\tvec3 outgoingLight = ( reflectedLight.directDiffuse * diffuseIntensity ) + ( reflectedLight.indirectDiffuse * ambientIntensity ) + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\t}\n}",meshphong_vert="attribute float cellCount;\nattribute vec3 offset;\nattribute vec3 scale;\nuniform vec3 uscale;\nuniform float scaleFactorX;\nuniform float scaleFactorY;\nuniform float scaleFactorZ;\nattribute mat3 orientation;\nuniform mat3 uorientation;\nuniform float pickState[ 1 ];\nuniform float startCell;\nvarying vec3 vPickColor;\n#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tif ( pickState[ 0 ] > 0.5 ) {\n\t\tfloat cellNum = startCell + cellCount;\n\t\t\n\t\tfloat red = fract( cellNum / (255.0*255.0*255.0) );\n\t\tif ( pickState[ 0 ] > 1.5 ) {\n\t\n\t\t\tfloat red2 = fract( cellNum / (255.0*255.0*255.0*255.0*255.0*255.0) );\n\t\t\tfloat green2 = fract( cellNum / (255.0*255.0*255.0*255.0*255.0) );\n\t\t\tfloat blue2 = fract( cellNum / (255.0*255.0*255.0*255.0) );\n\t\n\t\t\tred2 -= green2 / 255.0;\n\t\t\tgreen2 -= blue2 / 255.0;\n\t\t\tblue2 -= red / 255.0;\n\t\t\tvPickColor = vec3( red2, green2, blue2 );\n\t\t} else {\n\t\t\tfloat green = fract( cellNum / (255.0*255.0) );\n\t\t\tfloat blue = fract( cellNum / 255.0 );\n\t\t\tred -= green / 255.0;\n\t\t\tgreen -= blue / 255.0;\n\t\t\tvPickColor = vec3( red, green, blue );\n\t\t}\n\t}\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n#ifdef GLYPH\n#ifdef USE_SCALE\n\ttransformed *= scale;\n#else\n\ttransformed *= uscale;\n#endif\n\tvec3 scaleFactor = vec3( scaleFactorX, scaleFactorY, scaleFactorZ );\n\ttransformed *= scaleFactor;\n#ifdef USE_ORIENTATION\n\ttransformed = orientation * transformed;\n#else\n\ttransformed = uorientation * transformed;\n#endif\n\ttransformed += offset;\n#endif\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";const ShaderChunk={points_frag:points_frag,points_vert:points_vert,line_frag:line_frag,line_vert:line_vert,thickline_vert:thickline_vert,meshbasic_frag:meshbasic_frag,meshbasic_vert:meshbasic_vert,meshphong_frag:meshphong_frag,meshphong_vert:meshphong_vert},ShaderLib={points:{uniforms:UniformsUtils.merge([UniformsLib$1.points,UniformsLib$1.fog,UniformsLib.base]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},line:{uniforms:UniformsUtils.merge([UniformsLib$1.common,UniformsLib$1.fog,UniformsLib.base,UniformsLib.line]),vertexShader:ShaderChunk.line_vert,fragmentShader:ShaderChunk.line_frag},thick:{uniforms:UniformsUtils.merge([UniformsLib$1.common,UniformsLib$1.fog,UniformsLib.base,UniformsLib.line,{linewidth:{value:1}}]),vertexShader:ShaderChunk.thickline_vert,fragmentShader:ShaderChunk.line_frag},basic:{uniforms:UniformsUtils.merge([UniformsLib$1.common,UniformsLib$1.fog,UniformsLib.base,UniformsLib.mesh]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},phong:{uniforms:UniformsUtils.merge([UniformsLib$1.common,UniformsLib$1.fog,UniformsLib$1.lights,UniformsLib.base,UniformsLib.mesh,{ambientIntensity:{value:.31},diffuseIntensity:{value:.7},emissive:{value:new Color(0)},specular:{value:new Color(2039583)},shininess:{value:63.8386159788056}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag}};class BaseMaterial extends ShaderMaterial{constructor(e){super(),Object.defineProperties(this,{pickState:{get:function(){return this.uniforms.pickState.value},set:function(e){this.uniforms.pickState.value=e}},startCell:{get:function(){return this.uniforms.startCell.value},set:function(e){this.uniforms.startCell.value=e}},glyphs:{get:function(){return this.defines.GLYPH},set:function(e){this.defines.GLYPH=e}},scale:{get:function(){return this.uniforms.uscale.value},set:function(e){this.uniforms.uscale.value=e}},scaleFactorX:{get:function(){return this.uniforms.scaleFactorX.value},set:function(e){this.uniforms.scaleFactorX.value=e}},scaleFactorY:{get:function(){return this.uniforms.scaleFactorY.value},set:function(e){this.uniforms.scaleFactorY.value=e}},scaleFactorZ:{get:function(){return this.uniforms.scaleFactorZ.value},set:function(e){this.uniforms.scaleFactorZ.value=e}},vertexScales:{get:function(){return this.defines.USE_SCALE},set:function(e){this.defines.USE_SCALE=e}},orientation:{get:function(){return this.uniforms.uorientation.value},set:function(e){this.uniforms.uorientation.value=e}},vertexOrientations:{get:function(){return this.defines.USE_ORIENTATION},set:function(e){this.defines.USE_ORIENTATION=e}},opacityFactor:{get:function(){return this.uniforms.opacityFactor.value},set:function(e){this.uniforms.opacityFactor.value=e}}}),this.color=new Color(16777215),this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}toJSON(e){const t=super.toJSON(e);return this.depthFunc===LessEqualDepth&&(t.depthFunc=void 0),!0===this.depthTest&&(t.depthTest=void 0),!0===this.depthWrite&&(t.depthWrite=void 0),!1===this.stencilWrite&&(t.stencilWrite=void 0),255===this.stencilWriteMask&&(t.stencilWriteMask=void 0),this.stencilFunc===AlwaysStencilFunc&&(t.stencilFunc=void 0),0===this.stencilRef&&(t.stencilRef=void 0),255===this.stencilFuncMask&&(t.stencilFuncMask=void 0),this.stencilFail===KeepStencilOp&&(t.stencilFail=void 0),this.stencilZFail===KeepStencilOp&&(t.stencilZFail=void 0),this.stencilZPass===KeepStencilOp&&(t.stencilZPass=void 0),this.vertexScales&&(t.vertexScales=!0),this.vertexOrientations&&(t.vertexOrientations=!0),t}equals(e){return e.color.getHex()===this.color.getHex()&&(e.opacity===this.opacity&&(e.transparent===this.transparent&&(e.side===this.side&&e.vertexColors===this.vertexColors)))}}class PointsMaterial extends BaseMaterial{constructor(e){super({uniforms:UniformsUtils.clone(ShaderLib.points.uniforms),vertexShader:ShaderLib.points.vertexShader,fragmentShader:ShaderLib.points.fragmentShader}),Object.defineProperties(this,{vertexSizes:{get:function(){return this.defines.USE_SIZE},set:function(e){this.defines.USE_SIZE=e}}}),this.map=null,this.size=1,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.size=e.size,this}toJSON(e){const t=super.toJSON(e);return t.type="PointsMaterial",this.vertexSizes&&(t.vertexSizes=!0),t}equals(e){return!1!==super.equals(e)&&!!e.isPointsMaterial}}PointsMaterial.prototype.isPointsMaterial=!0;class MeshBasicMaterial extends BaseMaterial{constructor(e){super({uniforms:UniformsUtils.clone(ShaderLib.basic.uniforms),vertexShader:ShaderLib.basic.vertexShader,fragmentShader:ShaderLib.basic.fragmentShader}),Object.defineProperties(this,{stipple:{get:function(){return this.uniforms.stipple.value},set:function(e){this.uniforms.stipple.value=e}},stippleColor:{get:function(){return this.uniforms.stippleColor.value},set:function(e){this.uniforms.stippleColor.value=e}},stipplePattern:{get:function(){return this.uniforms.stipplePattern.value},set:function(e){this.uniforms.stipplePattern.value=e}}}),this.map=null,this.setValues(e)}copy(e){return super.copy(this,e),this.map=e.map,this}toJSON(e){const t=super.toJSON(e);return t.type="MeshBasicMaterial",0!==this.stipple&&(t.stipple=this.stipple),0!==this.stippleColor.getHex()&&(t.stippleColor=this.stippleColor.getHex()),JSON.stringify(this.stipplePattern)!==JSON.stringify(new Float32Array(64))&&(t.stipplePattern=Array.prototype.slice.call(this.stipplePattern)),t}equals(e){return!1!==super.equals(e)&&!(!e.isMeshBasicMaterial&&!e.isMeshPhongMaterial)}}MeshBasicMaterial.prototype.isMeshBasicMaterial=!0;class MeshPhongMaterial extends MeshBasicMaterial{constructor(e){super({uniforms:UniformsUtils.clone(ShaderLib.phong.uniforms),vertexShader:ShaderLib.phong.vertexShader,fragmentShader:ShaderLib.phong.fragmentShader}),Object.defineProperties(this,{ambientIntensity:{get:function(){return this.uniforms.ambientIntensity.value},set:function(e){this.uniforms.ambientIntensity.value=e}},diffuseIntensity:{get:function(){return this.uniforms.diffuseIntensity.value},set:function(e){this.uniforms.diffuseIntensity.value=e}}}),this.specular=new Color(2039583),this.shininess=63.8386159788056,this.emissive=new Color(0),this.emissiveIntensity=1,this.lights=!0,this.setValues(e)}copy(e){return super.copy(e),this.specular.copy(e.specular),this.shininess=e.shininess,this.flatShading=e.flatShading,this}toJSON(e){const t=super.toJSON(e);return t.type="MeshPhongMaterial",.31!==this.ambientIntensity&&(t.ambientIntensity=this.ambientIntensity),.7!==this.diffuseIntensity&&(t.diffuseIntensity=this.diffuseIntensity),2039583===this.specular.getHex()&&(t.specular=void 0),63.8386159788056===this.shininess&&(t.shininess=void 0),t}equals(e){return!1!==super.equals(e)&&(!!e.isMeshPhongMaterial&&(e.ambientIntensity===this.ambientIntensity&&(e.diffuseIntensity===this.diffuseIntensity&&(e.specular.getHex()===this.specular.getHex()&&e.shininess===this.shininess))))}}MeshPhongMaterial.prototype.isMeshPhongMaterial=!0,MeshPhongMaterial.prototype.isMeshBasicMaterial=!1;class LineMaterial extends BaseMaterial{constructor(e){super({uniforms:UniformsUtils.clone(ShaderLib.line.uniforms),vertexShader:ShaderLib.line.vertexShader,fragmentShader:ShaderLib.line.fragmentShader}),Object.defineProperties(this,{pattern:{get:function(){return this.uniforms.linePattern.value},set:function(e){this.uniforms.linePattern.value=e}},vertexPatterns:{get:function(){return this.defines.USE_PATTERN},set:function(e){this.defines.USE_PATTERN=e}},resolution:{get:function(){return this.uniforms.resolution.value},set:function(e){this.uniforms.resolution.value=e}}}),this.setValues(e)}toJSON(e){const t=super.toJSON(e);return t.type="LineMaterial",65535!==this.pattern&&(t.pattern=this.pattern),this.vertexPatterns&&(t.vertexPatterns=!0),t}equals(e){return!1!==super.equals(e)&&!!e.isLineBasicMaterial}}LineMaterial.prototype.isLineBasicMaterial=!0;class ThickLineMaterial extends LineMaterial{constructor(e){super({uniforms:UniformsUtils.clone(ShaderLib.thick.uniforms),vertexShader:ShaderLib.thick.vertexShader,fragmentShader:ShaderLib.thick.fragmentShader}),Object.defineProperties(this,{linewidth:{get:function(){return this.uniforms.linewidth.value},set:function(e){this.uniforms.linewidth.value=e}},vertexLinewidths:{get:function(){return this.defines.USE_LINEWIDTH},set:function(e){this.defines.USE_LINEWIDTH=e}},linewidthScale:{get:function(){return this.defines.LINEWIDTH_SCALE},set:function(e){this.defines.LINEWIDTH_SCALE=e}}}),this.setValues(e)}toJSON(e){const t=super.toJSON(e);return t.type="ThickLineMaterial",this.vertexLinewidths&&(t.vertexLinewidths=!0),this.linewidthScale&&(t.linewidthScale=!0),t}equals(e){return!1!==super.equals(e)&&(!!e.isThickLineMaterial&&e.vertexLinewidths===this.vertexLinewidths)}}ThickLineMaterial.prototype.isThickLineMaterial=!0;var Materials=Object.freeze({__proto__:null,PointsMaterial:PointsMaterial,MeshPhongMaterial:MeshPhongMaterial,MeshBasicMaterial:MeshBasicMaterial,LineMaterial:LineMaterial,ThickLineMaterial:ThickLineMaterial});class MaterialLoader extends Loader{constructor(e){super(e),this.textures={}}load(e,t,i,n){const a=this,r=new FileLoader(a.manager);r.setPath(a.path),r.setRequestHeader(a.requestHeader),r.setWithCredentials(a.withCredentials),r.load(e,function(i){try{t(a.parse(JSON.parse(i)))}catch(t){n?n(t):console.error(t),a.manager.itemError(e)}},i,n)}parse(e){const t=this.textures;function i(e){return void 0===t[e]&&console.warn("AVS.Three.MaterialLoader: Undefined texture",e),t[e]}const n=new Materials[e.type];if(void 0!==e.uuid&&(n.uuid=e.uuid),void 0!==e.name&&(n.name=e.name),void 0!==e.color&&void 0!==n.color&&n.color.setHex(e.color),void 0!==e.roughness&&(n.roughness=e.roughness),void 0!==e.metalness&&(n.metalness=e.metalness),void 0!==e.sheenTint&&(n.sheenTint=(new Color).setHex(e.sheenTint)),void 0!==e.emissive&&void 0!==n.emissive&&n.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==n.specular&&n.specular.setHex(e.specular),void 0!==e.specularIntensity&&(n.specularIntensity=e.specularIntensity),void 0!==e.specularTint&&void 0!==n.specularTint&&n.specularTint.setHex(e.specularTint),void 0!==e.shininess&&(n.shininess=e.shininess),void 0!==e.clearcoat&&(n.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(n.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.transmission&&(n.transmission=e.transmission),void 0!==e.thickness&&(n.thickness=e.thickness),void 0!==e.attenuationDistance&&(n.attenuationDistance=e.attenuationDistance),void 0!==e.attenuationTint&&void 0!==n.attenuationTint&&n.attenuationTint.setHex(e.attenuationTint),void 0!==e.fog&&(n.fog=e.fog),void 0!==e.flatShading&&(n.flatShading=e.flatShading),void 0!==e.blending&&(n.blending=e.blending),void 0!==e.combine&&(n.combine=e.combine),void 0!==e.side&&(n.side=e.side),void 0!==e.shadowSide&&(n.shadowSide=e.shadowSide),void 0!==e.opacity&&(n.opacity=e.opacity),void 0!==e.format&&(n.format=e.format),void 0!==e.transparent&&(n.transparent=e.transparent),void 0!==e.alphaTest&&(n.alphaTest=e.alphaTest),void 0!==e.depthTest&&(n.depthTest=e.depthTest),void 0!==e.depthWrite&&(n.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(n.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(n.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(n.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(n.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(n.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(n.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(n.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(n.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(n.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(n.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(n.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(n.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(n.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(n.rotation=e.rotation),1!==e.linewidth&&(n.linewidth=e.linewidth),void 0!==e.polygonOffset&&(n.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(n.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(n.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.dithering&&(n.dithering=e.dithering),void 0!==e.alphaToCoverage&&(n.alphaToCoverage=e.alphaToCoverage),void 0!==e.premultipliedAlpha&&(n.premultipliedAlpha=e.premultipliedAlpha),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.toneMapped&&(n.toneMapped=e.toneMapped),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?n.vertexColors=e.vertexColors>0:n.vertexColors=e.vertexColors),void 0!==e.uniforms)for(const t in e.uniforms){const a=e.uniforms[t];switch(n.uniforms[t]={},a.type){case"t":n.uniforms[t].value=i(a.value);break;case"c":n.uniforms[t].value=(new Color).setHex(a.value);break;case"v2":n.uniforms[t].value=(new Vector2).fromArray(a.value);break;case"v3":n.uniforms[t].value=(new Vector3).fromArray(a.value);break;case"v4":n.uniforms[t].value=(new Vector4).fromArray(a.value);break;case"m3":n.uniforms[t].value=(new Matrix3).fromArray(a.value);break;case"m4":n.uniforms[t].value=(new Matrix4).fromArray(a.value);break;default:n.uniforms[t].value=a.value}}if(void 0!==e.defines&&(n.defines=e.defines),void 0!==e.vertexShader&&(n.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(n.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(const t in e.extensions)n.extensions[t]=e.extensions[t];if(void 0!==e.shading&&(n.flatShading=1===e.shading),void 0!==e.glyphs&&(n.glyphs=e.glyphs),void 0!==e.vertexScales&&(n.vertexScales=e.vertexScales),void 0!==e.scale&&n.scale.fromArray(e.scale),void 0!==e.vertexOrientations&&(n.vertexOrientations=e.vertexOrientations),void 0!==e.orientation&&n.orientation.fromArray(e.orientation),void 0!==e.size&&(n.size=e.size),void 0!==e.sizeAttenuation&&(n.sizeAttenuation=e.sizeAttenuation),void 0!==e.vertexSizes&&(n.vertexSizes=e.vertexSizes),void 0!==e.pattern&&(n.pattern=e.pattern),void 0!==e.vertexPatterns&&(n.vertexPatterns=e.vertexPatterns),void 0!==e.vertexLinewidths&&(n.vertexLinewidths=e.vertexLinewidths),void 0!==e.linewidthScale&&(n.linewidthScale=e.linewidthScale),void 0!==e.stipple&&(n.stipple=e.stipple),void 0!==e.stippleColor&&void 0!==n.stippleColor&&n.stippleColor.setHex(e.stippleColor),void 0!==e.stipplePattern&&(n.stipplePattern=e.stipplePattern),void 0!==e.ambientIntensity&&(n.ambientIntensity=e.ambientIntensity),void 0!==e.diffuseIntensity&&(n.diffuseIntensity=e.diffuseIntensity),void 0!==e.map&&(n.map=i(e.map)),void 0!==e.matcap&&(n.matcap=i(e.matcap)),void 0!==e.alphaMap&&(n.alphaMap=i(e.alphaMap)),void 0!==e.bumpMap&&(n.bumpMap=i(e.bumpMap)),void 0!==e.bumpScale&&(n.bumpScale=e.bumpScale),void 0!==e.normalMap&&(n.normalMap=i(e.normalMap)),void 0!==e.normalMapType&&(n.normalMapType=e.normalMapType),void 0!==e.normalScale){let t=e.normalScale;!1===Array.isArray(t)&&(t=[t,t]),n.normalScale=(new Vector2).fromArray(t)}if(void 0!==e.displacementMap&&(n.displacementMap=i(e.displacementMap)),void 0!==e.displacementScale&&(n.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(n.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(n.roughnessMap=i(e.roughnessMap)),void 0!==e.metalnessMap&&(n.metalnessMap=i(e.metalnessMap)),void 0!==e.emissiveMap&&(n.emissiveMap=i(e.emissiveMap)),void 0!==e.emissiveIntensity&&(n.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(n.specularMap=i(e.specularMap)),void 0!==e.specularIntensityMap&&(n.specularIntensityMap=i(e.specularIntensityMap)),void 0!==e.specularTintMap&&(n.specularTintMap=i(e.specularTintMap)),void 0!==e.envMap&&(n.envMap=i(e.envMap)),void 0!==e.envMapIntensity&&(n.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(n.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(n.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(n.lightMap=i(e.lightMap)),void 0!==e.lightMapIntensity&&(n.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(n.aoMap=i(e.aoMap)),void 0!==e.aoMapIntensity&&(n.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(n.gradientMap=i(e.gradientMap)),void 0!==e.clearcoatMap&&(n.clearcoatMap=i(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(n.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(n.clearcoatNormalMap=i(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(n.clearcoatNormalScale=(new Vector2).fromArray(e.clearcoatNormalScale)),void 0!==e.transmissionMap&&(n.transmissionMap=i(e.transmissionMap)),void 0!==e.thicknessMap&&(n.thicknessMap=i(e.thicknessMap)),void 0!==e.clippingPlanes){n.clippingPlanes=[];for(let t=0,i=e.clippingPlanes.length;t<i;t++){const i=e.clippingPlanes[t],a=new Plane(new Vector3(i.normal[0],i.normal[1],i.normal[2]),i.constant);n.clippingPlanes.push(a)}}return n.origTransparent=n.transparent,n}setTextures(e){return this.textures=e,this}}class LinePatternBufferGeometryLoader{constructor(e){this.bufferGeometryLoader=e}parse(e){const t=this.bufferGeometryLoader.parse(e),i=t.attributes.position;if(void 0!==i){const e=new Float32BufferAttribute(i.array.length,3);for(let t=0,n=i.array.length/6;t<n;t++)e.array[6*t+0]=i.array[6*t+3],e.array[6*t+1]=i.array[6*t+4],e.array[6*t+2]=i.array[6*t+5],e.array[6*t+3]=i.array[6*t+0],e.array[6*t+4]=i.array[6*t+1],e.array[6*t+5]=i.array[6*t+2];t.setAttribute("otherPosition",e)}return t}}const _box=new Box3,_vector=new Vector3;class ThickLineSegmentsBufferGeometry extends InstancedBufferGeometry{constructor(){super(),this.type="ThickLineSegmentsBufferGeometry";this.setAttribute("position",new Float32BufferAttribute([0,0,0,1,1,0,0,1,0,0,0,0,1,0,0,1,1,0],3))}applyMatrix4(e){const t=this.attributes.instanceStart,i=this.attributes.instanceEnd;return void 0!==t&&(t.applyMatrix4(e),i.applyMatrix4(e),t.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}setPositions(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new InstancedInterleavedBuffer(t,6,1);return this.setAttribute("instanceStart",new InterleavedBufferAttribute(i,3,0)),this.setAttribute("instanceEnd",new InterleavedBufferAttribute(i,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new InstancedInterleavedBuffer(t,6,1);return this.setAttribute("instanceColorStart",new InterleavedBufferAttribute(i,3,0)),this.setAttribute("instanceColorEnd",new InterleavedBufferAttribute(i,3,3)),this}setPatterns(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new InstancedInterleavedBuffer(t,2,1);return this.setAttribute("instancePattern",new InterleavedBufferAttribute(i,1,0)),this}setLinewidths(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new InstancedInterleavedBuffer(t,2,1);return this.setAttribute("instanceLinewidthStart",new InterleavedBufferAttribute(i,1,0)),this.setAttribute("instanceLinewidthEnd",new InterleavedBufferAttribute(i,1,1)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Box3);const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;void 0!==e&&void 0!==t&&(this.boundingBox.setFromBufferAttribute(e),_box.setFromBufferAttribute(t),this.boundingBox.union(_box))}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Sphere),null===this.boundingBox&&this.computeBoundingBox();const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(void 0!==e&&void 0!==t){const i=this.boundingSphere.center;this.boundingBox.getCenter(i);let n=0;for(let a=0,r=e.count;a<r;a++)_vector.fromBufferAttribute(e,a),n=Math.max(n,i.distanceToSquared(_vector)),_vector.fromBufferAttribute(t,a),n=Math.max(n,i.distanceToSquared(_vector));this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error("AVS.Three.ThickLineSegmentsBufferGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}applyMatrix(e){return console.warn("AVS.Three.ThickLineSegmentsBufferGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(e)}}ThickLineSegmentsBufferGeometry.prototype.isThickLineSegmentsBufferGeometry=!0;class ThickLineBufferGeometryLoader{parse(e){const t=new ThickLineSegmentsBufferGeometry,i=e.data.attributes;return void 0!==i.position&&t.setPositions(i.position.array),void 0!==i.color&&t.setColors(i.color.array),void 0!==i.pattern&&t.setPatterns(i.pattern.array),void 0!==i.linewidth&&t.setLinewidths(i.linewidth.array),t}}const _inverseMatrix=new Matrix4,_ray=new Ray,_sphere=new Sphere;class ThickLineSegments extends Mesh{constructor(e,t){super(e,t),this.type="ThickLineSegments"}raycast(e,t){const i=this.geometry,n=this.matrixWorld,a=e.params.Line.threshold;if(null===i.boundingSphere&&i.computeBoundingSphere(),_sphere.copy(i.boundingSphere),_sphere.applyMatrix4(n),_sphere.radius+=a,!1===e.ray.intersectsSphere(sphere))return;_inverseMatrix.copy(n).invert(),_ray.copy(e.ray).applyMatrix4(_inverseMatrix);const r=a/((this.scale.x+this.scale.y+this.scale.z)/3),o=r*r,s=new Vector3,l=new Vector3,c=new Vector3,h=new Vector3,d=i.attributes.instanceStart.array;for(let i=0,n=d.length/3-1;i<n;i+=2){if(s.fromArray(d,3*i),l.fromArray(d,3*i+3),ray.distanceSqToSegment(s,l,h,c)>o)continue;h.applyMatrix4(this.matrixWorld);const n=e.ray.origin.distanceTo(h);n<e.near||n>e.far||t.push({distance:n,point:c.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}}ThickLineSegments.prototype.isThickLineSegments=!0;class BillboardTextMaterial{constructor(){this.uuid=MathUtils.generateUUID(),this.transparent=!1,this.opacity=1,this.opacityFactor=1}dispose(){}}class BillboardText extends Object3D{constructor(){super(),this.type="BillboardText",this.text="Label",this.fontSize=16,this.fontStyle="normal",this.fontWeight="normal",this.textDecoration="",this.fontFamily="sans-serif",this.color=new Color(0),this.textAlign="",this.transform="",this.transformOrigin="",this.material=new BillboardTextMaterial,this.div=document.createElement("div"),this.div.style.position="absolute",this.div.style.whiteSpace="nowrap",this.div.style.lineHeight="normal",this.div.style.userSelect="none",this.scene=null,this.scaleFactor=1,this.updateStyle()}addToScene(e){null===this.scene&&(this.scene=e,e.labels.push(this),e.div.appendChild(this.div),this.updateStyle())}updateStyle(){this.div.innerHTML=this.text,this.div.style.fontStyle=this.fontStyle,this.div.style.fontWeight=this.fontWeight,this.div.style.textDecoration=this.textDecoration,this.div.style.color="#"+this.color.getHexString(),this.div.style.textAlign=this.textAlign,this.div.style.transform=this.transform,this.div.style.transformOrigin=this.transformOrigin,this.material.transparent?this.div.style.opacity=this.material.opacity*this.material.opacityFactor:this.div.style.opacity=1,this.div.style.visibility=this.visible?"visible":"hidden",void 0!==this.div.firstChild.style&&(this.div.firstChild.style.float="left"),/\s/.test(this.fontFamily)?this.div.style.fontFamily="'"+this.fontFamily+"'":this.div.style.fontFamily=this.fontFamily,this.textScale||(this.div.style.fontSize=this.fontSize+"px")}updatePosition(){this.updateMatrixWorld();const e=(new Vector3).setFromMatrixPosition(this.matrixWorld);e.project(this.scene.camera);const t=(e.x+1)/2*this.scene.width,i=(1-(e.y+1)/2)*this.scene.height;if(this.div.style.left=t+"px",this.div.style.top=i+"px",this.textScale){const e=new Vector3(0,1,0).multiplyScalar(this.fontSize).add(this.position);e.applyMatrix4(this.parent.matrixWorld),e.project(this.scene.camera);const t=(1-(e.y+1)/2)*this.scene.height;this.div.style.fontSize=Math.abs(t-i)+"px"}this.material.transparent?this.div.style.opacity=this.material.opacity*this.material.opacityFactor:this.div.style.opacity=1,this.div.style.visibility=this.visible?"visible":"hidden"}}BillboardText.prototype.isBillboardText=!0;class ObjectLoader extends Loader{constructor(e){super(e)}load(e,t,i,n){const a=this,r=""===this.path?LoaderUtils.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||r;const o=new FileLoader(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(i){let r=null;try{r=JSON.parse(i)}catch(t){return void 0!==n&&n(t),void console.error("AVS.Three.ObjectLoader: Can't parse "+e+".",t.message)}const o=r.metadata;void 0!==o&&void 0!==o.type&&"geometry"!==o.type.toLowerCase()?a.parse(r,t):console.error("AVS.Three.ObjectLoader: Can't load "+e)},i,n)}parse(e,t,i,n,a,r,o){const s=this.parseGeometries(e.geometries,r),l=this.parseImages(e.images,function(){void 0!==t&&t(d)},i),c=this.parseTextures(e.textures,l,n),h=this.parseMaterials(e.materials,c,a),d=this.parseObject(e.object,s,h,c);if(void 0!==o&&(o.add(d),d.saveVisible=d.visible,d.visible=!1),void 0!==t){let e=!1;for(const t in l)if(l[t]instanceof HTMLImageElement){e=!0;break}!1===e&&t(d)}return d}parseGeometries(e,t){let i={};if(void 0!==t&&(i=t),void 0!==e){const t=new BufferGeometryLoader,n=new LinePatternBufferGeometryLoader(t),a=new ThickLineBufferGeometryLoader;for(let r=0,o=e.length;r<o;r++){let o;const s=e[r];switch(s.type){case"BufferGeometry":case"InstancedBufferGeometry":o=t.parse(s);break;case"LinePatternBufferGeometry":o=n.parse(s);break;case"ThickLineBufferGeometry":o=a.parse(s);break;case"Geometry":console.error("AVS.Three.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:s.type in Geometries?o=Geometries[s.type].fromJSON(s,shapes):console.warn(`AVS.Three.ObjectLoader: Unsupported geometry type "${s.type}"`)}o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),!0===o.isBufferGeometry&&void 0!==s.userData&&(o.userData=s.userData),i[s.uuid]=o}}return i}parseMaterials(e,t,i){const n={};let a={};if(void 0!==i&&(a=i),void 0!==e){const i=new MaterialLoader;i.setTextures(t);for(let t=0,r=e.length;t<r;t++){const r=e[t];if("MultiMaterial"===r.type){const e=[];for(let t=0;t<r.materials.length;t++){const a=r.materials[t];void 0===n[a.uuid]&&(n[a.uuid]=i.parse(a)),e.push(n[a.uuid])}a[r.uuid]=e}else void 0===n[r.uuid]&&(n[r.uuid]=i.parse(r)),a[r.uuid]=n[r.uuid]}}return a}parseImages(e,t,i){const n=this;let a,r={};function o(e){if("string"==typeof e){const t=e,i=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:n.resourcePath+t;return t=i,n.manager.itemStart(t),a.load(t,function(){n.manager.itemEnd(t)},void 0,function(){n.manager.itemError(t),n.manager.itemEnd(t)})}return e.data?{data:getTypedArray(e.type,e.data),width:e.width,height:e.height}:null;var t}if(void 0!==i&&(r=i),void 0!==e&&e.length>0){const i=new LoadingManager(t);(a=new ImageLoader(i)).setCrossOrigin(this.crossOrigin);for(let t=0,i=e.length;t<i;t++){const i=e[t];i.url;{const e=o(i.url);null!==e&&(r[i.uuid]=e)}}}return r}parseTextures(e,t,i){function n(e,t){return"number"==typeof e?e:(console.warn("AVS.Three.ObjectLoader.parseTextures: Constant should be in numeric form.",e),t[e])}let a={};if(void 0!==i&&(a=i),void 0!==e)for(let i=0,r=e.length;i<r;i++){const r=e[i];let o;void 0===r.image&&console.warn('AVS.Three.ObjectLoader: No "image" specified for',r.uuid),void 0===t[r.image]&&console.warn("AVS.Three.ObjectLoader: Undefined image",r.image);const s=t[r.image];Array.isArray(s)?(o=new CubeTexture(s),6===s.length&&(o.needsUpdate=!0)):(o=s&&s.data?new DataTexture(s.data,s.width,s.height):new Texture(s),s&&(o.needsUpdate=!0)),o.uuid=r.uuid,void 0!==r.name&&(o.name=r.name),void 0!==r.mapping&&(o.mapping=n(r.mapping,TEXTURE_MAPPING)),void 0!==r.offset&&o.offset.fromArray(r.offset),void 0!==r.repeat&&o.repeat.fromArray(r.repeat),void 0!==r.center&&o.center.fromArray(r.center),void 0!==r.rotation&&(o.rotation=r.rotation),void 0!==r.wrap&&(o.wrapS=n(r.wrap[0],TEXTURE_WRAPPING),o.wrapT=n(r.wrap[1],TEXTURE_WRAPPING)),void 0!==r.format&&(o.format=r.format),void 0!==r.type&&(o.type=r.type),void 0!==r.encoding&&(o.encoding=r.encoding),void 0!==r.minFilter&&(o.minFilter=n(r.minFilter,TEXTURE_FILTER)),void 0!==r.magFilter&&(o.magFilter=n(r.magFilter,TEXTURE_FILTER)),void 0!==r.anisotropy&&(o.anisotropy=r.anisotropy),void 0!==r.flipY&&(o.flipY=r.flipY),void 0!==r.premultiplyAlpha&&(o.premultiplyAlpha=r.premultiplyAlpha),void 0!==r.unpackAlignment&&(o.unpackAlignment=r.unpackAlignment),a[r.uuid]=o}return a}parseObject(e,t,i,n){let a,r,o;function s(e){return void 0===t[e]&&console.warn("AVS.Three.ObjectLoader: Undefined geometry",e),t[e]}function l(e){if(void 0!==e){if(Array.isArray(e)){const t=[];for(let n=0,a=e.length;n<a;n++){const a=e[n];void 0===i[a]&&console.warn("AVS.Three.ObjectLoader: Undefined material",a),t.push(i[a])}return t}return void 0===i[e]&&console.warn("AVS.Three.ObjectLoader: Undefined material",e),i[e]}}function c(e){return void 0===n[e]&&console.warn("AVS.Three.ObjectLoader: Undefined texture",e),n[e]}switch(e.type){case"Scene":a=new Scene,void 0!==e.background&&(Number.isInteger(e.background)?a.background=new Color(e.background):a.background=c(e.background)),void 0!==e.environment&&(a.environment=c(e.environment)),void 0!==e.fog&&("Fog"===e.fog.type?a.fog=new Fog(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(a.fog=new FogExp2(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":a=new PerspectiveCamera(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(a.focus=e.focus),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.filmGauge&&(a.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(a.filmOffset=e.filmOffset),void 0!==e.view&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new OrthographicCamera(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.view&&(a.view=Object.assign({},e.view)),void 0!==e.keepAspectRatio&&(a.keepAspectRatio=e.keepAspectRatio);break;case"AmbientLight":a=new AmbientLight(e.color,e.intensity);break;case"DirectionalLight":a=new DirectionalLight(e.color,e.intensity);break;case"PointLight":a=new PointLight(e.color,e.intensity,e.distance,e.decay);break;case"Mesh":case"Quads":r=s(e.geometry),o=l(e.material),(a=new Mesh(r,o)).cellType="Quads"===e.type?CellTypeEnum.Quads:CellTypeEnum.Triangles;break;case"LineSegments":(a=new LineSegments(s(e.geometry),l(e.material))).cellType=CellTypeEnum.Lines;break;case"ThickLineSegments":(a=new ThickLineSegments(s(e.geometry),l(e.material))).cellType=CellTypeEnum.Quads;break;case"PointCloud":case"Points":(a=new Points(s(e.geometry),l(e.material))).cellType=CellTypeEnum.Points;break;case"Group":a=new Group;break;case"BillboardText":a=new BillboardText,void 0!==e.text&&(a.text=e.text),void 0!==e.fontSize&&(a.fontSize=e.fontSize),void 0!==e.fontStyle&&(a.fontStyle=e.fontStyle),void 0!==e.fontWeight&&(a.fontWeight=e.fontWeight),void 0!==e.fontFamily&&(a.fontFamily=e.fontFamily),void 0!==e.textDecoration&&(a.textDecoration=e.textDecoration),void 0!==e.color&&a.color.setHex(e.color),void 0!==e.textAlign&&(a.textAlign=e.textAlign),void 0!==e.transform&&(a.transform=e.transform),void 0!==e.transformOrigin&&(a.transformOrigin=e.transformOrigin),void 0!==e.textScale&&(a.textScale=e.textScale);break;default:a=new Object3D}if(a.uuid=e.uuid,void 0!==e.name&&(a.name=e.name),void 0!==e.matrix?(a.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(void 0!==e.position&&a.position.fromArray(e.position),void 0!==e.rotation&&a.rotation.fromArray(e.rotation),void 0!==e.quaternion&&a.quaternion.fromArray(e.quaternion),void 0!==e.scale&&a.scale.fromArray(e.scale)),void 0!==e.castShadow&&(a.castShadow=e.castShadow),void 0!==e.receiveShadow&&(a.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(a.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(a.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(a.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&a.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(a.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(a.visible=e.visible),void 0!==e.frustumCulled&&(a.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(a.renderOrder=e.renderOrder),void 0!==e.userData&&(a.userData=e.userData),void 0!==e.layers&&(a.layers.mask=e.layers),void 0!==e.children){const r=e.children;for(let e=0;e<r.length;e++)a.add(this.parseObject(r[e],t,i,n))}return a.internalData={},void 0!==e.internalData&&(a.internalData=e.internalData),a}setTexturePath(e){return console.warn("AVS.Three.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}const TEXTURE_MAPPING={UVMapping:UVMapping,CubeReflectionMapping:CubeReflectionMapping,CubeRefractionMapping:CubeRefractionMapping,EquirectangularReflectionMapping:EquirectangularReflectionMapping,EquirectangularRefractionMapping:EquirectangularRefractionMapping,CubeUVReflectionMapping:CubeUVReflectionMapping,CubeUVRefractionMapping:CubeUVRefractionMapping},TEXTURE_WRAPPING={RepeatWrapping:RepeatWrapping,ClampToEdgeWrapping:ClampToEdgeWrapping,MirroredRepeatWrapping:MirroredRepeatWrapping},TEXTURE_FILTER={NearestFilter:NearestFilter,NearestMipmapNearestFilter:NearestMipmapNearestFilter,NearestMipmapLinearFilter:NearestMipmapLinearFilter,LinearFilter:LinearFilter,LinearMipmapNearestFilter:LinearMipmapNearestFilter,LinearMipmapLinearFilter:LinearMipmapLinearFilter};class Viewer{constructor(e,t){var i=e;this.getID=function(){return i},this.pixelRatio=void 0!==t?t:window.devicePixelRatio,this.container=document.createElement("div"),this.container.style.position="relative",this.container.style.outline="none",this.container.style.overflow="hidden",this.container.style.width="100%",this.container.style.height="100%",this.container.id="avsthreeDiv",this.domElement=this.container,this.scenes=[],this.currentScene=null,this.objectLoader=new ObjectLoader,this.startCell=1,this.raycaster=new Raycaster,this.raycaster.params.Line.threshold=.001,this.validPick=!1,this.pickType=PickTypeEnum.Ray,this.pickDepth=PickDepthEnum.Closest,this.pickRayX=0,this.pickRayY=0,this.pickRectangleLeft=0,this.pickRectangleTop=0,this.pickRectangleRight=1,this.pickRectangleBottom=1,this.selectionListeners=[],this.intersects=[],this.highlightList=[],this.updateHighlight=!1,this.highlightColor=new Color(16711680),this.updatePicking=!1,this.pickState=new Float32Array(1),this.resolution=new Vector2,this.loading=!1,this.firstChunk=!1,this.animator=null}setWebGLRenderer(e){this.renderer=e,this.renderer.autoClear=!1,this.renderer.setPixelRatio(this.pixelRatio),this.renderer.localClippingEnabled=!0,this.renderer.sortObjects=!1}updateSize(){var e=this.container.clientWidth,t=this.container.clientHeight;if(e!==this.width||t!==this.height){this.width=e,this.height=t,this.pixelWidth=Math.floor(e*this.pixelRatio),this.pixelHeight=Math.floor(t*this.pixelRatio),this.updateHighlight=!0,this.updatePicking=!0,this.validPick=!1;for(var i=0;i<this.scenes.length;i++)this.updateSceneSize(this.scenes[i])}}updateSceneSize(e){e.x=void 0!==e.internalData.x?Math.floor(this.width*e.internalData.x):0,e.width=e.origWidth=void 0!==e.internalData.width?Math.floor(this.width*e.internalData.width):this.width,e.y=void 0!==e.internalData.y?Math.floor(this.height*e.internalData.y):0,e.height=e.origHeight=void 0!==e.internalData.height?Math.floor(this.height*e.internalData.height):this.height,e.top=this.height-e.height-e.y,void 0!==e.widthScale&&(e.width*=e.widthScale),void 0!==e.heightScale&&(e.height*=e.heightScale),e.pixelWidth=Math.floor(e.width*this.pixelRatio),e.pixelHeight=Math.floor(e.height*this.pixelRatio),e.camera.isPerspectiveCamera&&(e.camera.aspect=e.pixelWidth/e.pixelHeight,e.camera.updateProjectionMatrix()),e.viewportX=void 0!==e.vpX?Math.floor(this.width*e.vpX):e.x,e.viewportWidth=void 0!==e.vpWidth?Math.floor(this.width*e.vpWidth+.5):e.width,e.viewportY=void 0!==e.vpY?Math.floor(this.height*e.vpY):e.y,e.viewportHeight=void 0!==e.vpHeight?Math.floor(this.height*e.vpHeight+.5):e.height,e.viewportTop=this.height-e.viewportHeight-e.viewportY,e.viewportPixelX=Math.floor(e.viewportX*this.pixelRatio),e.viewportPixelWidth=Math.floor(e.viewportWidth*this.pixelRatio),e.viewportPixelY=Math.floor(e.viewportY*this.pixelRatio),e.viewportPixelHeight=Math.floor(e.viewportHeight*this.pixelRatio),e.viewportPixelTop=this.pixelHeight-e.viewportPixelHeight-e.viewportY;var t=e.viewportDiv;t.style.left=e.viewportX+"px",t.style.width=e.viewportWidth+"px",t.style.top=e.viewportTop+"px",t.style.height=e.viewportHeight+"px";var i=e.div;i.style.width=e.width+"px",i.style.height=e.height+"px",i.baseLeft=e.x-e.viewportX,i.baseTop=e.top-e.viewportTop,i.style.left=i.baseLeft+"px",i.style.top=i.baseTop+"px";var n=e.canvas;if(n.width=e.pixelWidth,n.height=e.pixelHeight,(n=e.highlightCanvas).width=e.pixelWidth,n.height=e.pixelHeight,e.rectCanvas&&(e.rectCanvas.width=e.pixelWidth,e.rectCanvas.height=e.pixelHeight),e.leftLimit&&(i.leftLimit=Math.floor(-e.leftLimit*e.origWidth*(e.widthScale-1)),i.rightLimit=Math.floor(-e.rightLimit*e.origWidth*(e.widthScale-1)),i.bottomLimit=Math.floor(-e.bottomLimit*e.origHeight*(e.heightScale-1)),i.topLimit=Math.floor(-e.topLimit*e.origHeight*(e.heightScale-1))),e.renderTarget.setSize(e.pixelWidth,e.pixelHeight),e.pixelBuffer=new Uint8Array(4*e.pixelWidth*e.pixelHeight),e.pickingRenderTarget.setSize(e.pixelWidth,e.pixelHeight),e.pickingPixelBuffer=new Uint8Array(4*e.pixelWidth*e.pixelHeight),e.camera.isOrthographicCamera&&e.camera.keepAspectRatio){var a=e.width/e.internalData.pxWidth,r=e.height/e.internalData.pxHeight,o=e.internalData.pxWidth/e.internalData.pxHeight;e.width,e.height,o<1||(e.camera.left=e.camera.origLeft*a/r,e.camera.right=e.camera.origRight*a/r),e.camera.updateProjectionMatrix()}}clearGeometry(){for(;this.container.lastChild;)this.container.removeChild(this.container.lastChild);for(let e=0;e<this.scenes.length;e++)this.scenes[e].traverse(function(e){e.material&&(e.material.map&&e.material.map.dispose(),e.material.dispose()),e.geometry&&e.geometry.dispose()});this.scenes=[],this.currentScene=null,this.startCell=1,null!==this.animator&&this.animator.clear()}setPickDepth(e){void 0===e&&(e=PickDepthEnum.Closest),this.pickDepth!==e&&(this.pickDepth=e)}setPickRay(e,t){var i=Math.floor(e*this.pixelRatio),n=Math.floor(t*this.pixelRatio);if(i<0||n<0||i>this.pixelWidth||n>this.pixelHeight)return this.validPick=!1,void console.error("AVS.Three.Viewer: pick ray coordinates out of range.");this.pickType=PickTypeEnum.Ray,this.pickRayX=i,this.pickRayY=n,this.validPick=!0}setPickRectangle(e,t,i,n){var a=Math.floor(Math.min(e,i)*this.pixelRatio),r=Math.floor(Math.max(e,i)*this.pixelRatio)-a,o=Math.floor(Math.max(t,n)*this.pixelRatio),s=Math.floor(Math.min(t,n)*this.pixelRatio)-o;if(a<0||o<0||r+a>this.pixelWidth||o+s>this.pixelHeight)return this.validPick=!1,void console.error("AVS.Three.Viewer: pick rectangle coordinates out of range.");this.pickType=PickTypeEnum.Rectangle,this.pickRectangleX=a,this.pickRectangleY=o,this.pickRectangleWidth=r,this.pickRectangleHeight=s,this.validPick=!0}interactorUpdate(e){e===this.transformInteractor&&void 0!==this.zoomRectangleInteractor&&e.object===this.zoomRectangleInteractor.object&&(this.zoomRectangleInteractor.scale.copy(e.object.scale),this.zoomRectangleInteractor.position.copy(e.object.position)),e===this.zoomRectangleInteractor&&void 0!==this.transformInteractor&&e.object===this.transformInteractor.object&&(this.transformInteractor.scale.copy(e.object.scale),this.transformInteractor.position.copy(e.object.position)),this.updatePicking=!0,this.render(!0),void 0!==this.stats&&this.stats.update()}addInteractor(e){if(e.isTransformInteractor)this.transformInteractor=e,e.addEventListener("change",this.interactorUpdate.bind(this,e));else if(e.isZoomRectangleInteractor)this.zoomRectangleInteractor=e,e.addEventListener("change",this.interactorUpdate.bind(this,e));else{if(!e.isPanInteractor)return;this.panInteractor=e}e.domElement=this.domElement}removeInteractor(e){e.isTransformInteractor?(e.removeEventListener("change",this.interactorUpdate.bind(this,this.transformInteractor)),this.transformInteractor=void 0):e.isZoomRectangleInteractor?(e.removeEventListener("change",this.interactorUpdate.bind(this,this.zoomRectangleInteractor)),this.zoomRectangleInteractor=void 0):e.isPanInteractor&&(this.panInteractor=void 0)}setAnimator(e){this.animator=e,e.addEventListener("change",this.interactorUpdate.bind(this))}addStats(){void 0===this.stats&&(this.stats=new Stats,this.container.appendChild(this.stats.dom))}addGeometry(e){e.updateMatrixWorld(),void 0!==e.internalData.background?this.container.style.backgroundColor="#"+e.internalData.background.toString(16).padStart(6,"0"):this.container.style.backgroundColor="transparent";var t=this;e.traverse(function(e){if(e.isScene){for(var i=0;i<e.children.length;i++){var n=e.children[i];if(n.isPerspectiveCamera||n.isOrthographicCamera){e.camera=n,e.remove(n);break}}void 0==e.camera&&null!==e.background&&(e.camera=new OrthographicCamera$1),void 0!==e.camera&&t.addScene(e)}t.attachInteractors(e),t.addLabels(e),t.createPickingInfo(e),t.addMaterialReferences(e)});for(var i=0;i<this.scenes.length;i++){var n=this.scenes[i];n.parent&&n.parent.remove(n)}}addScene(e,t){this.scenes.push(e),this.currentScene=e,void 0===t&&(this.currentRealScene=e),e.labels=[];var i=document.createElement("div");i.style.position="absolute",i.style.overflow="hidden",i.id=e.name+"Viewport";var n=document.createElement("div");n.style.position="absolute",n.style.overflow="hidden",n.id=e.name,i.appendChild(n);var a=document.createElement("canvas");a.style.position="absolute",a.style.width="100%",a.style.height="100%",a.id=e.name+"Canvas",n.appendChild(a),e.canvas=a,e.ctx=a.getContext("2d");var r=document.createElement("canvas");r.style.position="absolute",r.style.width="100%",r.style.height="100%",r.id=e.name+"HighlightCanvas",n.appendChild(r),e.highlightCanvas=r,e.highlightCtx=r.getContext("2d"),e.div=n,e.viewportDiv=i,this.container.appendChild(i),e.renderTarget=new WebGLRenderTarget,e.pickingRenderTarget=new WebGLRenderTarget,this.updateSceneSize(e),e.startCell=this.startCell,e.highlightScene=new Scene$1,e.highlightScene.add(new Group$1);for(var o=0;o<e.children.length;o++)e.children[o].isLight&&e.highlightScene.add(e.children[o].clone())}attachInteractors(e){if(e.internalData.attachTransformInteractor&&this.transformInteractor&&this.transformInteractor.setObjectScene(e,this.currentScene),e.internalData.attachZoomRectangleInteractor&&this.zoomRectangleInteractor&&this.zoomRectangleInteractor.setObjectScene(e,this.currentScene,this.pixelRatio),e.internalData.attachPanInteractor&&this.panInteractor){var t=e.parent;t.matrix.copy(e.matrixWorld),t.matrixAutoUpdate=!1,t.isScene=!0,t.autoUpdate=!0,t.overrideMaterial=null,t.internalData.is3D=this.currentScene.internalData.is3D,t.internalData.x=this.currentScene.internalData.x,t.internalData.y=this.currentScene.internalData.y,t.internalData.width=this.currentScene.internalData.width,t.internalData.height=this.currentScene.internalData.height,e.camera=t.camera=this.currentScene.camera;var i=e.camera.right-e.camera.left,n=e.camera.top-e.camera.bottom,a=new Vector3;a.set(-e.internalData.xSize/2,-e.internalData.ySize/2,0),a.applyMatrix4(t.matrix);var r=new Vector3;r.set(e.internalData.xSize/2,e.internalData.ySize/2,0),r.applyMatrix4(t.matrix);var o=(a.x-e.camera.left)/i,s=(r.x-e.camera.left)/i,l=(a.y-e.camera.bottom)/n,c=(r.y-e.camera.bottom)/n,h=t.internalData.x+o*t.internalData.width,d=t.internalData.x+s*t.internalData.width,p=t.internalData.y+l*t.internalData.height,u=t.internalData.y+c*t.internalData.height;"center"===e.internalData.attachPanInteractor?(t.vpX=h,t.vpWidth=d-h,t.vpY=p,t.vpHeight=u-p,t.widthScale=this.panInteractor.widthScale,t.heightScale=this.panInteractor.heightScale,t.leftLimit=o,t.rightLimit=s,t.bottomLimit=1-l,t.topLimit=1-c):"bottom"===e.internalData.attachPanInteractor?(t.vpX=h,t.vpWidth=d-h,t.vpY=0,t.vpHeight=u,t.widthScale=this.panInteractor.widthScale):"top"===e.internalData.attachPanInteractor?(t.vpX=h,t.vpWidth=d-h,t.vpY=p,t.vpHeight=1-p,t.widthScale=this.panInteractor.widthScale):"left"===e.internalData.attachPanInteractor?(t.vpX=0,t.vpWidth=d,t.vpY=p,t.vpHeight=u-p,t.heightScale=this.panInteractor.heightScale):"right"===e.internalData.attachPanInteractor&&(t.vpX=h,t.vpWidth=1-h,t.vpY=p,t.vpHeight=u-p,t.heightScale=this.panInteractor.heightScale),t.matrix.elements[12]=0,t.matrix.elements[13]=0,this.addScene(t,!0),"center"===e.internalData.attachPanInteractor?this.panInteractor.object=t.div:"bottom"===e.internalData.attachPanInteractor?this.panInteractor.linkObjectsBottom.push(t.div):"top"===e.internalData.attachPanInteractor?this.panInteractor.linkObjectsTop.push(t.div):"left"===e.internalData.attachPanInteractor?this.panInteractor.linkObjectsLeft.push(t.div):"right"===e.internalData.attachPanInteractor&&this.panInteractor.linkObjectsRight.push(t.div),this.loading&&t.parent&&t.parent.remove(t),this.panInteractor.update()}}createPickingInfo(e){if(void 0!==e.geometry&&void 0!==e.material){if(void 0===e.geometry.attributes.cellCount){var t,i;if(e.material.glyphs){var n=e.geometry.attributes.offset.array.length/3;i=n;for(var a=new Float32Array(n),r=0;r<n;r++)a[r]=r;t=new InstancedBufferAttribute(a,1)}else if(e.isThickLineSegments){i=(o=e.geometry.attributes.instanceStart.array.length/3)/2;for(a=new Float32Array(i),r=0;r<i;r++)a[r]=r;t=new InstancedBufferAttribute(a,1)}else{var o,s=1;e.isPoints?s=1:e.isLineSegments?s=2:e.isMesh&&(s=3),i=(o=e.geometry.attributes.position.array.length/3)/s,t=new Float32BufferAttribute(o,1);for(r=0;r<i;r++)for(var l=0;l<s;l++)t.array[r*s+l]=r}e.geometry.setAttribute("cellCount",t),e.geometry.nCells=i}e.nCells=e.geometry.nCells,e.startCell=this.startCell,e.onBeforeRender=function(e,t,i,n,a,r){a.uniforms.startCell.value=this.startCell,a.uniformsNeedUpdate=!0},this.startCell+=e.nCells,!this.pickingRenderTarget2&&this.startCell>16777215&&(this.pickingRenderTarget2=new WebGLRenderTarget(this.pixelWidth,this.pixelHeight),this.pickingPixelBuffer2=new Uint8Array(4*this.pixelWidth*this.pixelHeight)),this.updatePicking=!0}}addLabels(e){e.isBillboardText&&(e.parent.internalData.attachPanInteractorStatic?e.addToScene(this.currentRealScene):e.addToScene(this.currentScene))}addMaterialReferences(e){void 0!==e.material&&(e.material.pickState=this.pickState,void 0!==e.material.isLineBasicMaterial&&(e.material.resolution=this.resolution))}loadGeometryAsJson(e){var t=this;this.objectLoader.parse(e,function(e){if(t.clearGeometry(),t.updateSize(),t.addGeometry(e),null!==t.animator){for(var i=0;i<t.scenes.length;i++)t.animator.attach(t.scenes[i]);t.animator.hasAnimations()?t.animator.play():t.render()}else t.render()})}loadGeometryAsEvents(e){var t=this,i=0,n=-1,a=0;function r(e){if(a--,e.layers.set(1),e.visible=e.saveVisible,n>0&&0==a)return t.render(),t.loading=!1,void(t.firstChunk=!1)}function o(e){if("Group"===e.type){var n=t.objectLoader.parse(e);null!==t.curGroup&&t.curGroup.add(n),"SceneRoot"===n.name&&(void 0!==n.internalData.background?t.container.style.backgroundColor="#"+n.internalData.background.toString(16).padStart(6,"0"):t.container.style.backgroundColor="transparent"),n.updateMatrixWorld(!0),t.attachInteractors(n),t.curGroup=n}else if("FinishGroup"===e.type)null!==t.curGroup&&(t.curGroup=t.curGroup.parent);else if("Geometry"===e.type){a++;var o=t.objectLoader.parse(e,r,t.images,t.textures,t.materials,t.geometries,t.curGroup);i++,t.addLabels(o),t.createPickingInfo(o),t.addMaterialReferences(o)}else if("Layout"===e.type){for(var s=t.objectLoader.parse(e),l=0;l<s.children.length;l++){var c=s.children[l];if(c.isPerspectiveCamera||c.isOrthographicCamera){s.camera=c,s.remove(c);break}}void 0==s.camera&&null!==s.background&&(s.camera=new OrthographicCamera$1),void 0!==s.camera&&t.addScene(s),t.curGroup=s}else console.log("ERROR: unknown type: "+e.type)}if(void 0!==this.chunkId&&this.chunkId===e.chunkId||(this.clearGeometry(),this.curGroup=null,this.images=[],this.textures=[],this.materials=[],this.geometries=[],this.firstChunk=!0,this.chunkId=e.chunkId),this.loading=!0,this.updateSize(),void 0!==e&&void 0!==e.events&&0!==e.events.length){for(var s=0;s<e.events.length;s++)o(e.events[s]);!0===e.moreChunks?this.render():(n=i-1,0==a&&(this.render(),this.loading=!1)),this.firstChunk=!1}else console.error("AVS.Three.Viewer.loadGeometryAsEvents: Can't get events")}highlightRender(){if(void 0!==this.renderer)for(var e=0;e<this.scenes.length;e++){var t=this.scenes[e];this.resolution.x=t.pixelWidth,this.resolution.y=t.pixelHeight,this.renderer.setSize(t.width,t.height),this.renderer.setClearColor(0,0),this.renderer.clear(),this.renderer.render(t.highlightScene,t.camera),t.highlightCtx.clearRect(0,0,t.pixelWidth,t.pixelHeight),t.highlightCtx.drawImage(this.renderer.domElement,0,0)}else console.error("AVS.Three.Viewer: WebGLRenderer not set.")}pickRender(){if(void 0!==this.renderer){for(var e=0;e<this.scenes.length;e++){var t=this.scenes[e];t.traverse(function(e){void 0!==e.material&&(e.material.transparent=!1)}),this.resolution.x=t.pixelWidth,this.resolution.y=t.pixelHeight,this.renderer.setRenderTarget(t.pickingRenderTarget),this.pickState[0]=1,this.renderer.setClearColor(0,0),this.renderer.clear(),this.renderer.render(t,t.camera),this.renderer.readRenderTargetPixels(t.pickingRenderTarget,0,0,t.pixelWidth,t.pixelHeight,t.pickingPixelBuffer),t.pickingRenderTarget2&&(this.renderer.setRenderTarget(t.pickingRenderTarget2),this.pickState[0]=2,this.renderer.clear(),this.renderer.render(t,t.camera),this.renderer.readRenderTargetPixels(t.pickingRenderTarget2,0,0,t.pixelWidth,t.pixelHeight,t.pickingPixelBuffer2)),t.traverse(function(e){void 0!==e.material&&(e.material.transparent=e.material.saveTransparent)})}this.pickState[0]=0,this.renderer.setRenderTarget(null)}else console.error("AVS.Three.Viewer: WebGLRenderer not set.")}render(e){if(void 0!==this.renderer){if(null!==this.domElement.offsetParent){this.updateSize();for(var t=this.loading,i=e||!t,n=0;n<this.scenes.length;n++){var a=this.scenes[n];if(this.resolution.x=a.pixelWidth,this.resolution.y=a.pixelHeight,i?this.renderer.setSize(a.width,a.height):this.renderer.setRenderTarget(a.renderTarget),(i||this.firstChunk)&&(a.internalData.background?this.renderer.setClearColor(a.internalData.background,1):this.renderer.setClearColor(0,0),this.renderer.clear()),!i){a.camera.layers.set(1);for(var r=0;r<a.children.length;r++)a.children[r].isLight&&a.children[r].layers.set(1)}if(this.renderer.render(a,a.camera),i)a.ctx.clearRect(0,0,a.pixelWidth,a.pixelHeight),a.ctx.drawImage(this.renderer.domElement,0,0);else{this.renderer.readRenderTargetPixels(a.renderTarget,0,0,a.pixelWidth,a.pixelHeight,a.pixelBuffer);for(var o,s,l=a.ctx.createImageData(a.pixelWidth,a.pixelHeight),c=4*a.pixelWidth,h=0;h<a.pixelBuffer.length;h++)o=Math.floor(h/c),s=h%c,l.data[(a.pixelHeight-o-1)*c+s]=a.pixelBuffer[h];a.ctx.putImageData(l,0,0),this.renderer.setRenderTarget(null),a.camera.layers.set(0),a.traverse(function(e){e.layers.set(0)})}for(r=0;r<a.labels.length;r++)a.labels[r].updatePosition()}this.updateHighlight&&(this.highlightRender(),this.updateHighlight=!1)}}else console.error("AVS.Three.Viewer: WebGLRenderer not set.")}addSelectionListener(e){void 0!==e&&this.selectionListeners.push(e)}concatObjectsFromCellNums(e,t,i,n){if(void 0!==i&&0!==i.length&&0!==i[0]){for(void 0===n&&(n=t.startCell,i.sort(function(e,t){return e-t}));void 0!==t.nCells&&i[0]>=n&&i[0]<n+t.nCells;)if(t.material.glyphs||t.isThickLineSegments?e.push({object:t,index:i[0]-n}):t.isMesh?e.push({object:t,faceIndex:i[0]-n}):e.push({object:t,index:(t.isLineSegments?2:1)*(i[0]-n)}),i.splice(0,1),0===i.length)return;void 0!==t.nCells&&(n+=t.nCells);for(var a=0;a<t.children.length&&void 0!==(n=this.concatObjectsFromCellNums(e,t.children[a],i,n));a++);return n}}pick(){if(!1!==this.validPick){this.pickDepth===PickDepthEnum.Closest&&this.updatePicking&&(this.pickRender(),this.updatePicking=!1),this.intersects=[];for(var e=0;e<this.scenes.length;e++){var t=this.scenes[e];if(this.pickType===PickTypeEnum.Rectangle){var i=Math.max(this.pickRectangleX,t.viewportPixelX),n=Math.max(this.pickRectangleY,t.viewportPixelTop),a=Math.min(this.pickRectangleX+this.pickRectangleWidth,t.viewportPixelX+t.viewportPixelWidth),r=Math.min(this.pickRectangleY+this.pickRectangleHeight,t.viewportPixelTop+t.viewportPixelHeight);i-=t.viewportPixelX,n-=t.viewportPixelTop,a-=t.viewportPixelX,r-=t.viewportPixelTop,t.div.panOffsetX&&(i-=t.div.panOffsetX+t.div.baseLeft,a-=t.div.panOffsetX+t.div.baseLeft),t.div.panOffsetY&&(n-=t.div.panOffsetY+t.div.baseTop,r-=t.div.panOffsetY+t.div.baseTop);for(var o=[],s=i;s<a;s++)for(var l=r;l<n;l++)if(this.pickDepth===PickDepthEnum.All){var c=s/t.pixelWidth*2-1,h=(t.pixelHeight-l-1)/t.pixelHeight*2-1;this.raycaster.setFromCamera(new Vector2(c,h),t.camera);var d=this.raycaster.intersectObjects(t.children,!0);this.intersects=this.intersects.concat(d)}else{var p=4*(s+(t.pixelHeight-l-1)*t.pixelWidth),u=255*t.pickingPixelBuffer[p]*255+255*t.pickingPixelBuffer[p+1]+t.pickingPixelBuffer[p+2];t.pickingPixelBuffer2&&(u+=255*t.pickingPixelBuffer2[p]*255*255*255*255+255*t.pickingPixelBuffer2[p+1]*255*255*255+255*t.pickingPixelBuffer2[p+2]*255*255),u>0&&-1===o.indexOf(u)&&o.push(u)}this.pickDepth===PickDepthEnum.Closest&&this.concatObjectsFromCellNums(this.intersects,t,o)}else{if(this.pickRayX<t.viewportPixelX||this.pickRayX>t.viewportPixelX+t.viewportPixelWidth||this.pickRayY<t.viewportPixelTop||this.pickRayY>t.viewportPixelTop+t.viewportPixelHeight)continue;var f=this.pickRayX-t.viewportPixelX,m=this.pickRayY-t.viewportPixelTop;if(t.div.panOffsetX&&(f-=t.div.panOffsetX+t.div.baseLeft),t.div.panOffsetY&&(m-=t.div.panOffsetY+t.div.baseTop),this.pickDepth===PickDepthEnum.All){c=f/t.pixelWidth*2-1,h=(t.pixelHeight-m-1)/t.pixelHeight*2-1;this.raycaster.setFromCamera(new Vector2(c,h),t.camera),this.raycaster.scene=t,this.raycaster.x=f,this.raycaster.y=m;d=this.raycaster.intersectObjects(t.children,!0);this.intersects=this.intersects.concat(d)}else{p=4*(f+(t.pixelHeight-m-1)*t.pixelWidth),u=255*t.pickingPixelBuffer[p]*255+255*t.pickingPixelBuffer[p+1]+t.pickingPixelBuffer[p+2];t.pickingPixelBuffer2&&(u+=255*t.pickingPixelBuffer2[p]*255*255*255*255+255*t.pickingPixelBuffer2[p+1]*255*255*255+255*t.pickingPixelBuffer2[p+2]*255*255),this.concatObjectsFromCellNums(this.intersects,t,[u])}}}for(e=0;e<this.selectionListeners.length;e++)this.selectionListeners[e]()}else console.error("AVS.Three.Viewer: invalid pick ray or rectangle.")}isObjectPickable(e){return!1!==e.internalData.pickable&&(null===e.parent||this.isObjectPickable(e.parent))}getPickedCells(){for(var e=[],t=0;t<this.intersects.length;t++){var i=this.intersects[t].object;if(this.isObjectPickable(i)){for(var n=this.intersects[t].faceIndex?this.intersects[t].faceIndex:this.intersects[t].index,a=!1,r=0;r<e.length;r++)if(i===e[r].object){a=!0;for(var o=!1,s=0;s<e[r].indices.length;s++)if(n===e[r].indices[s]){o=!0;break}o||e[r].indices.push(n);break}a||e.push({object:i,indices:[n]})}}return e}getPickedCellSets(){for(var e=[],t=0;t<this.intersects.length;t++){var i=this.intersects[t].object;if(this.isObjectPickable(i)){for(var n=!1,a=0;a<e.length;a++)if(e[a].object===i){n=!0;break}n||e.push({object:i})}}return e}getPickedSceneNodes(){for(var e=[],t=0;t<this.intersects.length;t++){var i=this.intersects[t].object;if(this.isObjectPickable(i)){for(var n=i.parent,a=!1,r=0;r<e.length;r++)if(e[r].object===n){a=!0;break}a||e.push({object:n})}}return e}getSelectionInfo(e){for(var t=[],i=0;i<e.length;i++){var n=e[i].object,a=e[i].indices;if(void 0!==a)for(var r=0;r<a.length;r++)t.push(o(n,{},a[r]));else t.push(o(n,{}))}function o(e,t,i){for(var n in e.userData)void 0===t[n]&&(void 0!==i&&Array.isArray(e.userData[n])?t[n]=decodeURIComponent(e.userData[n][i]):t[n]=decodeURIComponent(e.userData[n]));return e.parent?o(e.parent,t):t}return t}highlightObjects(e,t){for(var i=!1,n=0;n<this.highlightList.length;n++){void 0!==(o=this.highlightList[n]).saveMaterial&&(o.material=o.saveMaterial,o.saveMaterial=void 0,i=!0),void 0!==o.saveGeometry&&(o.geometry=o.saveGeometry,o.saveGeometry=void 0,i=!0)}for(n=0;n<this.scenes.length;n++){var a=this.scenes[n].highlightScene.children[0].children;a.length>0&&(a.length=0,this.updateHighlight=!0)}this.highlightList.length=0;var r=this;for(n=0;n<e.length;n++){var o;s(o=e[n].object,e[n].indices)}function s(e,n){if(e.isMesh||e.isLineSegments||e.isPoints){r.highlightList.push(e);var a,o=e.material.clone();if(o.opacity=1,void 0!==n){var l=e.geometry;if(o.vertexColors=!0,o.color=new Color(16777215),e.isThickLineSegments){var c;if(a=new InstancedBufferGeometry,l.attributes.instancedColorStart,void 0===oldColorStart){c=new InstancedInterleavedBuffer(new Float32Array(l.attributes.instanceStart.array.length),6,1);for(var h=0,d=0;d<c.array.length/3;d++)c.array[h++]=e.material.color.r,c.array[h++]=e.material.color.g,c.array[h++]=e.material.color.b}else c=oldColorStart.data.clone();h=null;var p=null;for(d=0;d<n.length;d++){h=6*Math.floor(n[d]/6),p=2;for(var u=0;u<p;u++)c.array[h++]=r.highlightColor.r,c.array[h++]=r.highlightColor.g,c.array[h++]=r.highlightColor.b}for(var f in a.setAttribute("instancedColorStart",new InterleavedBufferAttribute(c,3,0)),a.setAttribute("instancedColorEnd",new InterleavedBufferAttribute(c,3,3)),l.attributes)"instancedColorStart"!==f&&"instancedColorEnd"!==f&&a.setAttribute(f,l.attributes[f])}else{a=e.material.glyphs?new InstancedBufferGeometry:new BufferGeometry;var m=l.attributes.color,v=null;if(void 0===m){v=e.material.glyphs?new InstancedBufferAttribute(new Float32Array(l.attributes.offset.array.length),3):new Float32BufferAttribute(l.attributes.position.array.length,3);for(h=0,d=0;d<v.array.length/3;d++)v.array[h++]=e.material.color.r,v.array[h++]=e.material.color.g,v.array[h++]=e.material.color.b}else v=m.clone();for(h=null,p=null,d=0;d<n.length;d++){e.material.glyphs||e.cellType===CellTypeEnum.Points?(h=3*n[d],p=1):e.cellType===CellTypeEnum.Lines?(h=3*n[d],p=2):e.cellType===CellTypeEnum.Triangles?(h=9*n[d],p=3):(h=18*Math.floor(n[d]/2),p=6);for(u=0;u<p;u++)v.array[h++]=r.highlightColor.r,v.array[h++]=r.highlightColor.g,v.array[h++]=r.highlightColor.b}for(var f in a.setAttribute("color",v),l.attributes)"color"!==f&&a.setAttribute(f,l.attributes[f])}}else o.vertexColors=!1,o.color=r.highlightColor,a=e.geometry;var g=r.getObjectScene(e);if(void 0!==g.internalData.is3D&&!1===g.internalData.is3D&&void 0!==t&&!0===t){var y=e.clone();y.material=o,y.geometry=a,y.matrixAutoUpdate=!1,y.matrix.copy(e.matrixWorld),g.highlightScene.children[0].add(y),r.updateHighlight=!0}else e.saveMaterial=e.material,e.material=o,e.saveGeometry=e.geometry,e.geometry=a,i=!0}for(var b=0;b<e.children.length;b++)s(e.children[b])}i?this.render(!0):this.updateHighlight&&(this.highlightRender(),this.updateHighlight=!1)}getObjectScene(e){return e.isScene?e:this.getObjectScene(e.parent)}}const _changeEvent$2={type:"change"},_startEvent$2={type:"start"},_endEvent$2={type:"end"};class TransformInteractor extends EventDispatcher{constructor(e){super(),void 0===e&&console.warn('AVS.Three.TransformInteractor: The first parameter "domElement" is now mandatory.'),e===document&&console.error('AVS.Three.TransformInteractor: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.domElement=e,this.domElement.style.touchAction="none",this.object=new Object3D,this.scene=null,this.enabled=!0,this.enableZoom=!0,this.enableRotate=!0,this.enablePan=!0,this.keyPanSpeed=7,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.touches={ONE:TOUCH.ROTATE,TWO:TOUCH.DOLLY_PAN},this.quaternion=this.object.quaternion.clone(),this.position=this.object.position.clone(),this.scale=this.object.scale.clone(),this.clientOnly=!1,this.fullReset=!1,this.quaternion0=this.object.quaternion.clone(),this.position0=this.object.position.clone(),this.scale0=this.object.scale.clone(),this._domElementKeyEvents=null,this.listenToKeyEvents=function(e){e.addEventListener("keydown",j),this._domElementKeyEvents=e},this.setObjectScene=function(e,i){t.object=e,t.scene=i,this.fullReset||e.internalData.transformFullReset?(t.quaternion.copy(t.object.quaternion),t.scale.copy(t.object.scale),t.position.copy(t.object.position),t.quaternion0.copy(t.object.quaternion),t.scale0.copy(t.object.scale),t.position0.copy(t.object.position),this.fullReset=!1):t.clientOnly&&(t.object.quaternion.copy(t.quaternion),t.object.scale.copy(t.scale),t.object.position.copy(t.position)),e.internalData.transformWheelActions&&(a=JSON.parse(e.internalData.transformWheelActions)),e.internalData.transformTriggers&&(r=JSON.parse(e.internalData.transformTriggers))},this.reset=function(){t.quaternion.copy(t.quaternion0),t.scale.copy(t.scale0),t.position.copy(t.position0),t.object.quaternion.copy(t.quaternion0),t.object.scale.copy(t.scale0),t.object.position.copy(t.position0),t.dispatchEvent(_changeEvent$2),n=i.NONE},this.zoomIn=function(){b(1.05,0,0)&&t.dispatchEvent(_changeEvent$2)},this.zoomOut=function(){b(1/1.05,0,0)&&t.dispatchEvent(_changeEvent$2)},this.panTo=function(e,i,n){var a=t.object.parent.matrixWorld,r=1/a.elements[0],o=1/a.elements[5],s=1/a.elements[10],l=a.elements[12]*r,c=a.elements[13]*o,h=a.elements[14]*s;e*=t.object.scale.x,i*=t.object.scale.y,n*=t.object.scale.z,e+=l,i+=c,n+=h,t.object.position.set(t.position0.x-e,t.position0.y-i,t.position0.z-n),t.position.copy(t.object.position),t.dispatchEvent(_changeEvent$2)},this.dispose=function(){t.domElement.removeEventListener("contextmenu",D),t.domElement.removeEventListener("pointerdown",O),t.domElement.removeEventListener("pointercancel",I),t.domElement.removeEventListener("wheel",N),t.domElement.removeEventListener("pointermove",A),t.domElement.removeEventListener("pointerup",R),null!==t._domElementKeyEvents&&t._domElementKeyEvents.removeEventListener("keydown",j)};const t=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let n=i.NONE,a=[{modifiers:0,param:"ZOOM_AT_POINTER"}],r=[{buttons:1,modifiers:0,param:"ROTATE"},{buttons:2,modifiers:0,param:"SCALE"},{buttons:4,modifiers:0,param:"TRANSLATE"}];const o=new Vector2,s=new Vector2,l=new Vector2,c=new Vector2,h=new Vector2,d=new Vector2,p=[],u={};function f(e){return 2*(e-t.scene.viewportDiv.getBoundingClientRect().left)/t.scene.viewportWidth-1}function m(e){return 1-2*(e-t.scene.viewportDiv.getBoundingClientRect().top)/t.scene.viewportHeight}const v=function(){const e=new Matrix4,i=new Vector3,n=new Vector3,a=new Vector3,r=new Matrix4,l=new Vector3;let c,h;const d=new Quaternion;return function(){return null!==t.object&&null!==t.object.parent&&(e.multiplyMatrices(t.scene.camera.matrixWorldInverse,t.object.parent.matrixWorld),i.set(0,0,0),n.set(o.x,o.y,1),a.set(s.x,s.y,1),r.copy(e).invert(),i.applyMatrix4(r),n.applyMatrix4(r),a.applyMatrix4(r),n.sub(i).normalize(),a.sub(i).normalize(),void 0!==t.scene.internalData.is3D&&!1===t.scene.internalData.is3D?(l.set(0,0,1),(c=n.x*a.y-n.y*a.x)<0&&(l.negate(),c=-c)):(l.crossVectors(n,a),c=l.length()),!(c<1e-5)&&(h=Math.abs(c)<1?2*Math.sin(c):Math.PI,n.dot(a)<0&&(h+=.5*Math.PI),d.setFromAxisAngle(l.normalize(),h),t.object.quaternion.premultiply(d),t.quaternion.copy(t.object.quaternion),!0))}}(),g=function(){const e=new Matrix4,i=new Vector4,n=new Vector3,a=new Matrix4,r=new Vector4,o=new Vector4,s=new Vector3,h=new Vector3,d=new Vector3;return function(){return null!==t.object&&null!==t.object.parent&&(e.multiplyMatrices(t.scene.camera.matrixWorldInverse,t.object.parent.matrixWorld),e.premultiply(t.scene.camera.projectionMatrix),i.set(0,0,0,1).applyMatrix4(e),n.set(i.x/i.w,i.y/i.w,i.z/i.w),a.copy(e).invert(),r.set(l.x,l.y,n.z,1),o.set(c.x,c.y,n.z,1),r.applyMatrix4(a),o.applyMatrix4(a),s.set(r.x/r.w,r.y/r.w,r.z/r.w),h.set(o.x/o.w,o.y/o.w,o.z/o.w),d.subVectors(h,s),t.object.position.add(d),t.position.copy(t.object.position),!0)}}();function y(e){return null!==t.object&&(t.object.scale.multiplyScalar(e),t.scale.copy(t.object.scale),!0)}const b=function(){const e=new Matrix4,i=new Matrix4,n=new Vector4,a=new Vector4,r=new Vector3,o=new Vector3;return function(s,l,c){return null!==t.object&&null!==t.object.parent&&(e.multiplyMatrices(t.scene.camera.matrixWorldInverse,t.object.parent.matrixWorld),e.premultiply(t.scene.camera.projectionMatrix),n.set(0,0,0,1).applyMatrix4(e),i.copy(e).invert(),a.set(l,c,n.z/n.w,1).applyMatrix4(i),r.set(a.x/a.w,a.y/a.w,a.z/a.w),r.sub(t.object.position),o.copy(r).multiplyScalar(s).add(r.negate()),t.object.scale.multiplyScalar(s),t.object.position.sub(o),t.scale.copy(t.object.scale),t.position.copy(t.object.position),!0)}}();function x(e){o.set(f(e.clientX),m(e.clientY))}function w(e){h.set(f(e.clientX),m(e.clientY))}function S(e){l.set(f(e.clientX),m(e.clientY))}function _(e){y(e.deltaY>0?1/1.05:1.05)&&t.dispatchEvent(_changeEvent$2)}function E(e){const i=e.deltaY>0?1/1.05:1.05;b(i,f(e.clientX),m(e.clientY))&&t.dispatchEvent(_changeEvent$2)}function T(){if(1===p.length)o.set(f(p[0].clientX),m(p[0].clientY));else{const e=.5*(p[0].clientX+p[1].clientX),t=.5*(p[0].clientY+p[1].clientY);o.set(f(e),m(t))}}function L(){if(1===p.length)l.set(f(p[0].clientX),m(p[0].clientY));else{const e=.5*(p[0].clientX+p[1].clientX),t=.5*(p[0].clientY+p[1].clientY);l.set(f(e),m(t))}}function M(){const e=Math.abs(p[0].clientX-p[1].clientX),t=Math.abs(p[0].clientY-p[1].clientY);h.set(f(e),m(t))}function C(e){if(1==p.length)s.set(f(e.clientX),m(e.clientY));else{const t=H(e),i=.5*(e.clientX+t.x),n=.5*(e.clientY+t.y);s.set(f(i),m(n))}v()&&t.dispatchEvent(_changeEvent$2),o.copy(s)}function k(e){if(1===p.length)c.set(f(e.clientX),m(e.clientY));else{const t=H(e),i=.5*(e.clientX+t.x),n=.5*(e.clientY+t.y);c.set(f(i),m(n))}g()&&t.dispatchEvent(_changeEvent$2),l.copy(c)}function P(e){const i=H(e);let n=Math.abs(e.clientX-i.x),a=Math.abs(e.clientY-i.y);d.set(f(n),m(a)),n=d.x-h.x,a=d.y-h.y;const r=Math.abs(n)>Math.abs(a)?n:a;let o;y(o=r<0?1+.5*r:1/(1-.5*r))&&t.dispatchEvent(_changeEvent$2),h.copy(d)}function O(e){!1!==t.enabled&&(0===p.length&&(t.domElement.setPointerCapture(e.pointerId),t.domElement.addEventListener("pointermove",A),t.domElement.addEventListener("pointerup",R)),function(e){p.push(e)}(e),"touch"===e.pointerType?function(e){switch(U(e),p.length){case 1:switch(t.touches.ONE){case TOUCH.ROTATE:if(!1===t.enableRotate)return;T(),n=i.TOUCH_ROTATE;break;case TOUCH.PAN:if(!1===t.enablePan)return;L(),n=i.TOUCH_PAN;break;default:n=i.NONE}break;case 2:switch(t.touches.TWO){case TOUCH.DOLLY_PAN:if(!1===t.enableZoom&&!1===t.enablePan)return;t.enableZoom&&M(),t.enablePan&&L(),n=i.TOUCH_DOLLY_PAN;break;case TOUCH.DOLLY_ROTATE:if(!1===t.enableZoom&&!1===t.enableRotate)return;t.enableZoom&&M(),t.enableRotate&&T(),n=i.TOUCH_DOLLY_ROTATE;break;default:n=i.NONE}break;default:n=i.NONE}n!==i.NONE&&t.dispatchEvent(_startEvent$2)}(e):function(e){var a=0;a+=e.shiftKey?1:0,a+=e.ctrlKey?2:0,a+=e.metaKey?4:0;let o=0;switch(e.button){case 0:o=1;break;case 1:o=2;break;case 2:o=4}for(var s=0,l=r.length;s<l;s++)if(a===r[s].modifiers&&o&r[s].buttons){switch(r[s].param){case 0:case"ROTATE":if(!1===t.enableRotate)continue;x(e),n=i.ROTATE,t.domElement.ownerDocument.body.style.cursor="move";break;case 1:case"SCALE":if(!1===t.enableZoom)continue;w(e),n=i.DOLLY,t.domElement.ownerDocument.body.style.cursor="ne-resize";break;case 2:case"TRANSLATE":if(!1===t.enablePan)continue;S(e),n=i.PAN,t.domElement.ownerDocument.body.style.cursor="move";break;default:n=i.NONE}n!==i.NONE&&t.dispatchEvent(_startEvent$2);break}}(e))}function A(e){!1!==t.enabled&&("touch"===e.pointerType?function(e){switch(U(e),n){case i.TOUCH_ROTATE:if(!1===t.enableRotate)return;C(e);break;case i.TOUCH_PAN:if(!1===t.enablePan)return;k(e);break;case i.TOUCH_DOLLY_PAN:if(!1===t.enableZoom&&!1===t.enablePan)return;!function(e){t.enableZoom&&P(e),t.enablePan&&k(e)}(e);break;case i.TOUCH_DOLLY_ROTATE:if(!1===t.enableZoom&&!1===t.enableRotate)return;!function(e){t.enableZoom&&P(e),t.enableRotate&&C(e)}(e);break;default:n=i.NONE}}(e):function(e){if(!1===t.enabled)return;switch(n){case i.ROTATE:if(!1===t.enableRotate)return;!function(e){s.set(f(e.clientX),m(e.clientY)),v()&&t.dispatchEvent(_changeEvent$2),o.copy(s)}(e);break;case i.DOLLY:if(!1===t.enableZoom)return;!function(e){d.set(f(e.clientX),m(e.clientY));const i=d.x-h.x,n=d.y-h.y,a=Math.abs(i)>Math.abs(n)?i:n;let r;y(r=a>0?1+.5*a:1/(1-.5*a))&&t.dispatchEvent(_changeEvent$2),h.copy(d)}(e);break;case i.PAN:if(!1===t.enablePan)return;!function(e){c.set(f(e.clientX),m(e.clientY)),g()&&t.dispatchEvent(_changeEvent$2),l.copy(c)}(e)}}(e))}function R(e){!1!==t.enabled&&("touch"===e.pointerType?(t.dispatchEvent(_endEvent$2),n=i.NONE):(t.domElement.ownerDocument.body.style.cursor="default",t.dispatchEvent(_endEvent$2),n=i.NONE),F(e),0===p.length&&(t.domElement.releasePointerCapture(e.pointerId),t.domElement.removeEventListener("pointermove",A),t.domElement.removeEventListener("pointerup",R)))}function I(e){F(e)}function N(e){if(!1!==t.enabled&&!1!==t.enableZoom&&(n===i.NONE||n===i.ROTATE)){var r=0;r+=e.shiftKey?1:0,r+=e.ctrlKey?2:0,r+=e.metaKey?4:0;for(var o=0,s=a.length;o<s;o++)if(r===a[o].modifiers){switch(e.preventDefault(),a[o].param){case 0:case"ZOOM":t.dispatchEvent(_startEvent$2),_(e),t.dispatchEvent(_endEvent$2);break;case 1:case"ZOOM_AT_POINTER":t.dispatchEvent(_startEvent$2),E(e),t.dispatchEvent(_endEvent$2)}return}}}function j(e){!1!==t.enabled&&!1!==t.enablePan&&function(e){let i=!1;switch(l.set(0,0),c.set(0,0),e.code){case t.keys.UP:c.y=t.keyPanSpeed/(t.scene.height/2),i=!0;break;case t.keys.BOTTOM:c.y=-t.keyPanSpeed/(t.scene.height/2),i=!0;break;case t.keys.LEFT:c.x=-t.keyPanSpeed/(t.scene.width/2),i=!0;break;case t.keys.RIGHT:c.x=t.keyPanSpeed/(t.scene.width/2),i=!0}let n=!1;i&&(n=g(),e.preventDefault()),n&&t.dispatchEvent(_changeEvent$2)}(e)}function D(e){!1!==t.enabled&&e.preventDefault()}function F(e){delete u[e.pointerId];for(let t=0;t<p.length;t++)if(p[t].pointerId==e.pointerId)return void p.splice(t,1)}function U(e){let t=u[e.pointerId];void 0===t&&(t=new Vector2,u[e.pointerId]=t),t.set(e.clientX,e.clientY)}function H(e){const t=e.pointerId===p[0].pointerId?p[1]:p[0];return u[t.pointerId]}t.domElement.addEventListener("contextmenu",D),t.domElement.addEventListener("pointerdown",O),t.domElement.addEventListener("pointercancel",I),t.domElement.addEventListener("wheel",N,{passive:!1}),t.listenToKeyEvents(window)}}function PanInteractor(e){var t;void 0===e&&console.warn('AVS.Three.PanInteractor: The first parameter "domElement" is now mandatory.'),e===document&&console.error('AVS.Three.PanInteractor: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.linkObjectsBottom=[],this.linkObjectsTop=[],this.linkObjectsLeft=[],this.linkObjectsRight=[],this.domElement=e,this.enabled=!0,this.target=new Vector3,this.enableZoom=!1,this.zoomSpeed=1,this.enableRotate=!1,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:MOUSE.PAN,MIDDLE:MOUSE.NONE,RIGHT:MOUSE.NONE},this.touches={ONE:TOUCH.PAN,TWO:TOUCH.NONE},this.saveState=function(){i.target0.copy(i.target),i.position0.copy(i.object.position),i.zoom0=i.object.zoom},this.reset=function(){i.target.copy(i.target0),i.object.position.copy(i.position0),i.object.zoom=i.zoom0,i.object.updateProjectionMatrix(),i.dispatchEvent(n),i.update(),s=o.NONE},this.update=(t=null,function(){if(void 0!==i.object&&void 0!==i.object.style){c.x>i.object.leftLimit?c.x=i.object.leftLimit:c.x<i.object.rightLimit&&(c.x=i.object.rightLimit),c.y<i.object.bottomLimit?c.y=i.object.bottomLimit:c.y>i.object.topLimit&&(c.y=i.object.topLimit),i.object.panOffsetX=c.x,i.object.panOffsetY=c.y,i.object.style.left=i.object.baseLeft+c.x+"px",i.object.style.top=i.object.baseTop+c.y+"px";for(var e=0;e<i.linkObjectsBottom.length;e++)(t=i.linkObjectsBottom[e]).style.left=t.baseLeft+c.x+"px";for(e=0;e<i.linkObjectsTop.length;e++)(t=i.linkObjectsTop[e]).style.left=t.baseLeft+c.x+"px";for(e=0;e<i.linkObjectsLeft.length;e++)(t=i.linkObjectsLeft[e]).style.top=t.baseTop+c.y+"px";for(e=0;e<i.linkObjectsRight.length;e++)(t=i.linkObjectsRight[e]).style.top=t.baseTop+c.y+"px";i.dispatchEvent(n)}}),this.dispose=function(){i.domElement.removeEventListener("contextmenu",W,!1),i.domElement.removeEventListener("pointerdown",R,!1),i.domElement.removeEventListener("wheel",j,!1),i.domElement.removeEventListener("touchstart",F,!1),i.domElement.removeEventListener("touchend",H,!1),i.domElement.removeEventListener("touchmove",U,!1),i.domElement.ownerDocument.removeEventListener("pointermove",I,!1),i.domElement.ownerDocument.removeEventListener("pointerup",N,!1),i.domElement.removeEventListener("keydown",D,!1)};var i=this,n={type:"change"},a={type:"start"},r={type:"end"},o={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},s=o.NONE,l=new Spherical,c=new Vector3,h=new Vector2,d=new Vector2,p=new Vector2,u=new Vector2,f=new Vector2,m=new Vector2,v=new Vector2,g=new Vector2,y=new Vector2;function b(){return Math.pow(.95,i.zoomSpeed)}function x(e){l.theta+=e}function w(e){l.phi+=e}new Vector3(1,0,0),function(){var e=new Vector3(0,1,0)}();var S=(new Vector3,function(e,t){c.x+=e,c.y+=t});function _(e){i.object.isPerspectiveCamera||(i.object.isOrthographicCamera?(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom*e)),i.object.updateProjectionMatrix(),zoomChanged=!0):(console.warn("WARNING: AVS.Three.PanInteractor encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1))}function E(e){i.object.isPerspectiveCamera||(i.object.isOrthographicCamera?(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/e)),i.object.updateProjectionMatrix(),zoomChanged=!0):(console.warn("WARNING: AVS.Three.PanInteractor encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1))}function T(e){h.set(e.clientX,e.clientY)}function L(e){u.set(e.clientX,e.clientY)}function M(e){if(1==e.touches.length)h.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),i=.5*(e.touches[0].pageY+e.touches[1].pageY);h.set(t,i)}}function C(e){if(1==e.touches.length)u.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),i=.5*(e.touches[0].pageY+e.touches[1].pageY);u.set(t,i)}}function k(e){var t=e.touches[0].pageX-e.touches[1].pageX,i=e.touches[0].pageY-e.touches[1].pageY,n=Math.sqrt(t*t+i*i);v.set(0,n)}function P(e){if(1==e.touches.length)d.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY);d.set(t,n)}p.subVectors(d,h).multiplyScalar(i.rotateSpeed);var a=i.domElement;x(2*Math.PI*p.x/a.clientHeight),w(2*Math.PI*p.y/a.clientHeight),h.copy(d)}function O(e){if(1==e.touches.length)f.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY);f.set(t,n)}m.subVectors(f,u).multiplyScalar(i.panSpeed),S(m.x,m.y),u.copy(f)}function A(e){var t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,a=Math.sqrt(t*t+n*n);g.set(0,a),y.set(0,Math.pow(g.y/v.y,i.zoomSpeed)),_(y.y),v.copy(g)}function R(e){if(!1!==i.enabled)switch(e.pointerType){case"mouse":case"pen":!function(e){var t;switch(e.preventDefault(),i.domElement.focus?i.domElement.focus():window.focus(),e.button){case 0:t=i.mouseButtons.LEFT;break;case 1:t=i.mouseButtons.MIDDLE;break;case 2:t=i.mouseButtons.RIGHT;break;default:t=-1}switch(t){case MOUSE.DOLLY:if(!1===i.enableZoom)return;!function(e){v.set(e.clientX,e.clientY)}(e),s=o.DOLLY;break;case MOUSE.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===i.enablePan)return;L(e),s=o.PAN}else{if(!1===i.enableRotate)return;T(e),s=o.ROTATE}break;case MOUSE.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===i.enableRotate)return;T(e),s=o.ROTATE}else{if(!1===i.enablePan)return;L(e),s=o.PAN,i.domElement.ownerDocument.body.style.cursor="move"}break;default:s=o.NONE}s!==o.NONE&&(i.domElement.ownerDocument.addEventListener("pointermove",I,!1),i.domElement.ownerDocument.addEventListener("pointerup",N,!1),i.dispatchEvent(a))}(e)}}function I(e){if(!1!==i.enabled)switch(e.pointerType){case"mouse":case"pen":!function(e){if(!1===i.enabled)return;switch(e.preventDefault(),s){case o.ROTATE:if(!1===i.enableRotate)return;!function(e){d.set(e.clientX,e.clientY),p.subVectors(d,h).multiplyScalar(i.rotateSpeed);var t=i.domElement;x(2*Math.PI*p.x/t.clientHeight),w(2*Math.PI*p.y/t.clientHeight),h.copy(d),i.update()}(e);break;case o.DOLLY:if(!1===i.enableZoom)return;!function(e){g.set(e.clientX,e.clientY),y.subVectors(g,v),y.y>0?_(b()):y.y<0&&E(b()),v.copy(g),i.update()}(e);break;case o.PAN:if(!1===i.enablePan)return;!function(e){f.set(e.clientX,e.clientY),m.subVectors(f,u).multiplyScalar(i.panSpeed),S(m.x,m.y),u.copy(f),i.update()}(e)}}(e)}}function N(e){if(!1!==i.enabled)switch(e.pointerType){case"mouse":case"pen":!function(e){if(!1===i.enabled)return;i.domElement.ownerDocument.removeEventListener("pointermove",I,!1),i.domElement.ownerDocument.removeEventListener("pointerup",N,!1),i.domElement.ownerDocument.body.style.cursor="default",i.dispatchEvent(r),s=o.NONE}()}}function j(e){!1===i.enabled||!1===i.enableZoom||s!==o.NONE&&s!==o.ROTATE||(e.preventDefault(),e.stopPropagation(),i.dispatchEvent(a),function(e){e.deltaY<0?E(b()):e.deltaY>0&&_(b()),i.update()}(e),i.dispatchEvent(r))}function D(e){!1!==i.enabled&&!1!==i.enableKeys&&!1!==i.enablePan&&function(e){var t=!1;switch(e.keyCode){case i.keys.UP:S(0,i.keyPanSpeed),t=!0;break;case i.keys.BOTTOM:S(0,-i.keyPanSpeed),t=!0;break;case i.keys.LEFT:S(i.keyPanSpeed,0),t=!0;break;case i.keys.RIGHT:S(-i.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),i.update())}(e)}function F(e){if(!1!==i.enabled){switch(e.preventDefault(),e.touches.length){case 1:switch(i.touches.ONE){case TOUCH.ROTATE:if(!1===i.enableRotate)return;M(e),s=o.TOUCH_ROTATE;break;case TOUCH.PAN:if(!1===i.enablePan)return;C(e),s=o.TOUCH_PAN;break;default:s=o.NONE}break;case 2:switch(i.touches.TWO){case TOUCH.DOLLY_PAN:if(!1===i.enableZoom&&!1===i.enablePan)return;!function(e){i.enableZoom&&k(e),i.enablePan&&C(e)}(e),s=o.TOUCH_DOLLY_PAN;break;case TOUCH.DOLLY_ROTATE:if(!1===i.enableZoom&&!1===i.enableRotate)return;!function(e){i.enableZoom&&k(e),i.enableRotate&&M(e)}(e),s=o.TOUCH_DOLLY_ROTATE;break;default:s=o.NONE}break;default:s=o.NONE}s!==o.NONE&&i.dispatchEvent(a)}}function U(e){if(!1!==i.enabled)switch(e.preventDefault(),e.stopPropagation(),s){case o.TOUCH_ROTATE:if(!1===i.enableRotate)return;P(e),i.update();break;case o.TOUCH_PAN:if(!1===i.enablePan)return;O(e),i.update();break;case o.TOUCH_DOLLY_PAN:if(!1===i.enableZoom&&!1===i.enablePan)return;!function(e){i.enableZoom&&A(e),i.enablePan&&O(e)}(e),i.update();break;case o.TOUCH_DOLLY_ROTATE:if(!1===i.enableZoom&&!1===i.enableRotate)return;!function(e){i.enableZoom&&A(e),i.enableRotate&&P(e)}(e),i.update();break;default:s=o.NONE}}function H(e){!1!==i.enabled&&(i.dispatchEvent(r),s=o.NONE)}function W(e){!1!==i.enabled&&e.preventDefault()}i.domElement.addEventListener("contextmenu",W,!1),i.domElement.addEventListener("pointerdown",R,!1),i.domElement.addEventListener("wheel",j,!1),i.domElement.addEventListener("touchstart",F,!1),i.domElement.addEventListener("touchend",H,!1),i.domElement.addEventListener("touchmove",U,!1),i.domElement.addEventListener("keydown",D,!1),-1===i.domElement.tabIndex&&(i.domElement.tabIndex=0),this.update()}TransformInteractor.prototype.isTransformInteractor=!0,PanInteractor.prototype=Object.create(EventDispatcher.prototype),PanInteractor.prototype.constructor=PanInteractor,PanInteractor.prototype.isPanInteractor=!0;const _changeEvent$1={type:"change"},_startEvent$1={type:"start"},_endEvent$1={type:"end"};class ZoomRectangleInteractor extends EventDispatcher{constructor(e){super(),void 0===e&&console.warn('AVS.Three.ZoomRectangleInteractor: The first parameter "domElement" is now mandatory.'),e===document&&console.error('AVS.Three.ZoomRectangleInteractor: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.domElement=e,this.domElement.style.touchAction="none",this.object=new Object3D,this.scene=null,this.enabled=!0,this.position=this.object.position.clone(),this.scale=this.object.scale.clone(),this.clientOnly=!1,this.fullReset=!1,this.scale0=this.object.scale.clone(),this.position0=this.object.position.clone(),this.setObjectScene=function(e,i,r){switch(t.object=e,t.scene=i,t.pixelRatio=void 0!==r?r:window.devicePixelRatio,this.fullReset||e.internalData.zoomRectangleFullReset?(t.scale.copy(t.object.scale),t.position.copy(t.object.position),t.scale0.copy(t.object.scale),t.position0.copy(t.object.position),this.fullReset=!1):t.clientOnly&&(t.object.scale.copy(t.scale),t.object.position.copy(t.position)),e.internalData.zoomRectangleTriggers&&(o=JSON.parse(e.internalData.zoomRectangleTriggers)),n=e.internalData.zoomInMaxLimit,a=e.internalData.zoomOutMaxLimit,p=void 0!==e.internalData.zoomRectangleColor?"#"+e.internalData.zoomRectangleColor.toString(16).padStart(6,"0"):null,u=e.internalData.zoomRectangleWidth?e.internalData.zoomRectangleWidth:null,e.internalData.zoomRectanglePattern){case 0:f=[];break;case 1:f=[4,4];break;case 2:f=[1,3];break;case 3:f=[5,1,1,1];break;default:f=null}const s=document.createElement("canvas");s.style.position="absolute",s.style.width="100%",s.style.height="100%",s.id=t.scene.name+"RectCanvas",s.width=t.scene.viewportPixelWidth,s.height=t.scene.viewportPixelHeight,t.scene.viewportDiv.appendChild(s),t.scene.rectCanvas=s,t.scene.rectCtx=s.getContext("2d")},this.reset=function(){t.scale.copy(t.scale0),t.position.copy(t.position0),t.object.scale.copy(t.scale0),t.object.position.copy(t.position0),t.dispatchEvent(_changeEvent$1),r=i.NONE},this.dispose=function(){t.domElement.removeEventListener("contextmenu",M),t.domElement.removeEventListener("pointerdown",_),t.domElement.removeEventListener("pointercancel",L),t.domElement.removeEventListener("pointermove",E),t.domElement.removeEventListener("pointerup",T)};const t=this,i={NONE:-1,ZOOM_IN:0,ZOOM_OUT:1};let n,a,r=i.NONE,o=[{buttons:1,modifiers:0,param:"ZOOM_IN"},{buttons:1,modifiers:1,param:"ZOOM_OUT"}],s=0;const l=25,c="#ff0000",h=1,d=[];let p=null,u=null,f=null;const m=new Vector2,v=new Vector2,g=[],y={};function b(e){return Math.max(0,Math.min(e.clientX-t.scene.viewportDiv.getBoundingClientRect().left,t.scene.viewportWidth))}function x(e){return Math.max(0,Math.min(e.clientY-t.scene.viewportDiv.getBoundingClientRect().top,t.scene.viewportHeight))}const w=function(){const e=new Matrix4,o=new Matrix4,s=new Vector4,l=new Vector4,c=new Vector3,h=new Vector4,d=new Vector3;return function(p,u,f,m){const v=t.scene.viewportPixelWidth/(u-p),g=t.scene.viewportPixelHeight/(m-f);e.multiplyMatrices(t.scene.camera.matrixWorldInverse,t.object.parent.matrixWorld),e.premultiply(t.scene.camera.projectionMatrix),s.set(0,0,0,1).applyMatrix4(e),o.copy(e).invert();let y=1;if(r===i.ZOOM_IN){if(y=g<v?g:v,void 0!==n){const e=Math.max(Math.max(t.object.scale.x,t.object.scale.y),t.object.scale.z);y*e>n&&(y=n/e)}const e=(p+u)/t.scene.viewportPixelWidth-1,i=1-(f+m)/t.scene.viewportPixelHeight;l.set(e,i,s.z/s.w,1).applyMatrix4(o),c.set(l.x/l.w,l.y/l.w,l.z/l.w),h.set(0,0,s.z/s.w,1).applyMatrix4(o),d.set(h.x/h.w,h.y/h.w,h.z/h.w),c.sub(t.object.position),d.sub(t.object.position),c.multiplyScalar(y).sub(d),t.object.position.sub(c)}else if(r===i.ZOOM_OUT){if(y=g>v?1/g:1/v,void 0!==a){const e=Math.max(Math.max(t.object.scale.x,t.object.scale.y),t.object.scale.z);y*e<1/a&&(y=1/a/e)}l.set(0,0,s.z/s.w,1).applyMatrix4(o),c.set(l.x/l.w,l.y/l.w,l.z/l.w),c.sub(t.object.position),d.copy(c),c.multiplyScalar(y).sub(d),t.object.position.sub(c)}return t.object.scale.multiplyScalar(y),!0}}();function S(e){m.set(b(e),x(e));const i=window.getComputedStyle(t.scene.rectCanvas);let n=c;const a=i.getPropertyValue("--avs-drag-rectangle-stroke-style").trim();null!==p?n=p:null!==a&&a.length>0&&(n=a),t.scene.rectCtx.strokeStyle=n;let r=h;const o=i.getPropertyValue("--avs-drag-rectangle-line-width").trim();null!==u?r=u:null!==o&&o.length>0&&(r=o),t.scene.rectCtx.lineWidth=r;let l=d;const v=i.getPropertyValue("--avs-drag-rectangle-line-dash").trim();null!==f?l=f:null!==v&&v.length>0&&(l=JSON.parse(v)),t.scene.rectCtx.setLineDash(l),s=1}function _(e){!1!==t.enabled&&(0===g.length&&(t.domElement.setPointerCapture(e.pointerId),t.domElement.addEventListener("pointermove",E),t.domElement.addEventListener("pointerup",T)),function(e){g.push(e)}(e),function(e){let n=0;n+=e.shiftKey?1:0,n+=e.ctrlKey?2:0,n+=e.metaKey?4:0;let a=0;switch(e.button){case 0:a=1;break;case 1:a=2;break;case 2:a=4}for(let s=0,l=o.length;s<l;s++)if(n===o[s].modifiers&&a&o[s].buttons){switch(o[s].param){case 1:case"ZOOM_IN":S(e),r=i.ZOOM_IN,t.domElement.ownerDocument.body.style.cursor="zoom-in";break;case 2:case"ZOOM_OUT":S(e),r=i.ZOOM_OUT,t.domElement.ownerDocument.body.style.cursor="zoom-out";break;default:r=i.NONE}r!==i.NONE&&t.dispatchEvent(_startEvent$1);break}}(e))}function E(e){!1!==t.enabled&&function(e){if(!1===t.enabled)return;!function(e){if(s<1)return;if(v.set(b(e),x(e)),t.scene.rectCtx.clearRect(0,0,t.scene.viewportPixelWidth,t.scene.viewportPixelHeight),1==s){const e=Math.abs(m.x-v.x),t=Math.abs(m.y-v.y);if(e*e+t*t<l)return;s=2}const i=Math.min(m.x,v.x)*t.pixelRatio,n=Math.max(m.x,v.x)*t.pixelRatio,a=Math.min(m.y,v.y)*t.pixelRatio,r=Math.max(m.y,v.y)*t.pixelRatio;t.scene.rectCtx.strokeRect(i+.5,a+.5,n-i,r-a)}(e)}(e)}function T(e){!1!==t.enabled&&(!function(e){(function(e){if(s<2)return;v.set(b(e),x(e)),t.scene.rectCtx.clearRect(0,0,t.scene.viewportPixelWidth,t.scene.viewportPixelHeight);const i=Math.min(m.x,v.x)*t.pixelRatio,n=Math.max(m.x,v.x)*t.pixelRatio,a=Math.min(m.y,v.y)*t.pixelRatio,r=Math.max(m.y,v.y)*t.pixelRatio;w(i,n,a,r)&&(t.scale.copy(t.object.scale),t.position.copy(t.object.position),t.dispatchEvent(_changeEvent$1)),s=0})(e),t.domElement.ownerDocument.body.style.cursor="default",t.dispatchEvent(_endEvent$1),r=i.NONE}(e),C(e),0===g.length&&(t.domElement.releasePointerCapture(e.pointerId),t.domElement.removeEventListener("pointermove",E),t.domElement.removeEventListener("pointerup",T)))}function L(e){C(e)}function M(e){!1!==t.enabled&&e.preventDefault()}function C(e){delete y[e.pointerId];for(let t=0;t<g.length;t++)if(g[t].pointerId==e.pointerId)return void g.splice(t,1)}t.domElement.addEventListener("contextmenu",M),t.domElement.addEventListener("pointerdown",_),t.domElement.addEventListener("pointercancel",L)}}ZoomRectangleInteractor.prototype.isZoomRectangleInteractor=!0;const _changeEvent={type:"change"},_startEvent={type:"start"},_endEvent={type:"end"};class Animator extends EventDispatcher{constructor(e){super(),this.hasStyleAnimations=!1,this.hasObjectAnimations=!1,this.createAnimationLibrary(),this.createStyleAnimationClips(e),this.clock=new Clock,this.animating=0,this.mixers=[]}createAnimationLibrary(){const e=[0,2],t=new NumberKeyframeTrack(".material.opacityFactor",e,[0,1]),i=new BooleanKeyframeTrack(".material.transparent",e,[!0,!1]);this.fadeInClip=new AnimationClip("fade-in",-1,[t,i]),this.fadeInClip.setOnChildren=!0;const n=new NumberKeyframeTrack(".material.opacityFactor",e,[1,0]),a=new BooleanKeyframeTrack(".material.transparent",e,[!0,!0]);this.fadeOutClip=new AnimationClip("fade-out",-1,[n,a]),this.fadeOutClip.setOnChildren=!0;const r=new NumberKeyframeTrack(".scaleFactorX",e,[0,1]);this.growXClip=new AnimationClip("grow-x",-1,[r]);const o=new NumberKeyframeTrack(".scaleFactorY",e,[0,1]);this.growYClip=new AnimationClip("grow-y",-1,[o]);const s=new NumberKeyframeTrack(".scaleFactorZ",e,[0,1]);this.growZClip=new AnimationClip("grow-z",-1,[s]);const l=new NumberKeyframeTrack(".material.scaleFactorX",e,[0,1]);this.growXGlyphClip=new AnimationClip("grow-x-glyph",-1,[l]),this.growXGlyphClip.setOnChildren=!0;const c=new NumberKeyframeTrack(".material.scaleFactorY",e,[0,1]);this.growYGlyphClip=new AnimationClip("grow-y-glyph",-1,[c]),this.growYGlyphClip.setOnChildren=!0;const h=new NumberKeyframeTrack(".material.scaleFactorZ",e,[0,1]);this.growZGlyphClip=new AnimationClip("grow-z-glyph",-1,[h]),this.growZGlyphClip.setOnChildren=!0;const d=new BooleanKeyframeTrack(".visible",e,[!1,!0]);this.enterAfterClip=new AnimationClip("enter-after",-1,[d]),this.enterAfterClip.setOnChildren=!0}createStyleAnimationClips(e){if(void 0===e)return;const t=["scene","sceneTitle","chart","chartTitle","axis","legend","legendTitle","glyph"];this.styleAnimationClips={};for(let i=0,n=t.length;i<n;i++){const n=t[i];void 0!==e[n]&&(this.styleAnimationClips[n]=this.fillStyleClipsArray(e[n].split(","),"glyph"===n))}}fillStyleClipsArray(e,t){const i=[];for(let n=0,a=e.length;n<a;n++){const a=e[n].trim();"fade-in"===a?(i.push(this.fadeInClip),this.hasStyleAnimations=!0):"fade-out"===a?(i.push(this.fadeOutClip),this.hasStyleAnimations=!0):"grow-x"===a?(i.push(t?this.growXGlyphClip:this.growXClip),this.hasStyleAnimations=!0):"grow-y"===a?(i.push(t?this.growYGlyphClip:this.growYClip),this.hasStyleAnimations=!0):"grow-z"===a?(i.push(t?this.growZGlyphClip:this.growZClip),this.hasStyleAnimations=!0):"enter-after"===a&&(i.push(this.enterAfterClip),this.hasStyleAnimations=!0)}return i}fillObjectClipsArray(e,t){const i=[];return 0!=(1&e)&&(i.push(this.fadeInClip),this.hasObjectAnimations=!0),0!=(2&e)&&(i.push(this.fadeOutClip),this.hasObjectAnimations=!0),0!=(4&e)&&(i.push(t?this.growXGlyphClip:this.growXClip),this.hasObjectAnimations=!0),0!=(8&e)&&(i.push(t?this.growYGlyphClip:this.growYClip),this.hasObjectAnimations=!0),0!=(16&e)&&(i.push(t?this.growZGlyphClip:this.growZClip),this.hasObjectAnimations=!0),0!=(32&e)&&(i.push(this.enterAfterClip),this.hasObjectAnimations=!0),i}hasAnimations(){return this.hasStyleAnimations||this.hasObjectAnimations}clear(){this.mixers=[],this.hasObjectAnimations=!1}attach(e){const t=this,i=this.createMixers.bind(this);this.createMixers(e,this.styleAnimationClips.scene),e.traverse(function(e){if(e.internalData.animations){const n=t.fillObjectClipsArray(e.internalData.animations,"GLYPH"===e.internalData.visualizationGroup);i(e,n)}else"SCENE_TITLE"===e.internalData.visualizationGroup?i(e,t.styleAnimationClips.sceneTitle):"CHART"===e.internalData.visualizationGroup?i(e,t.styleAnimationClips.chart):"CHART_TITLE"===e.internalData.visualizationGroup?i(e,t.styleAnimationClips.chartTitle):"AXIS"===e.internalData.visualizationGroup?i(e,t.styleAnimationClips.axis):"LEGEND"===e.internalData.visualizationGroup?i(e,t.styleAnimationClips.legend):"LEGEND_TITLE"===e.internalData.visualizationGroup?i(e,t.styleAnimationClips.legendTitle):"GLYPH"===e.internalData.visualizationGroup&&i(e,t.styleAnimationClips.glyph)})}createMixers(e,t){if(void 0!==t)for(let i=0,n=t.length;i<n;i++){let n;if(t[i].type,t[i].setOnChildren?e.traverse(function(e){e.material&&(void 0===n&&(n=new AnimationObjectGroup),n.add(e))}):n=e,void 0!==n){const e=new AnimationMixer(n);e.clip=t[i],this.mixers.push(e)}}}play(){this.mixers.length<=0&&(this.dispatchEvent(_startEvent),this.dispatchEvent(_changeEvent),this.dispatchEvent(_endEvent)),this.animating=0,this.finishedFunc=this.animationFinished.bind(this);for(let e=0,t=this.mixers.length;e<t;e++){const t=this.mixers[e];t.addEventListener("finished",this.finishedFunc);const i=t.clipAction(t.clip);t.action=i,i.repetitions=1,i.clampWhenFinished=!0,i.play(),this.animating++}this.dispatchEvent(_startEvent),this.animate()}animationFinished(e){e.target.removeEventListener("finished",this.finishedFunc),this.animating--}animate(){if(this.animating<=0)return void this.dispatchEvent(_endEvent);requestAnimationFrame(this.animate.bind(this));const e=this.clock.getDelta();for(let t=0,i=this.mixers.length;t<i;t++)this.mixers[t].action.isRunning()&&this.mixers[t].update(e);this.dispatchEvent(_changeEvent)}}export{Animator,CellTypeEnum,DEFAULT_VIEWER_HEIGHT,DEFAULT_VIEWER_WIDTH,PanInteractor,PickDepthEnum,PickLevelEnum,PickTypeEnum,RAYCASTER_LINE_PRECISION,REVISION,TransformInteractor,Viewer,ZoomRectangleInteractor};

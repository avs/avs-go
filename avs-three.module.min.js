// @license Licensed by Advanced Visual Systems Inc. to You under the Apache License, Version 2.0.
import{Group as Group$1,Matrix4,Vector3,Points as Points$1,LineSegments as LineSegments$1,Mesh as Mesh$1,PointLight as PointLight$1,DirectionalLight as DirectionalLight$1,AmbientLight as AmbientLight$1,OrthographicCamera as OrthographicCamera$1,PerspectiveCamera as PerspectiveCamera$1,Scene as Scene$1,Vector2,Color,UniformsUtils,UniformsLib as UniformsLib$1,ShaderMaterial,Material,LessEqualDepth,AlwaysStencilFunc,KeepStencilOp,Loader,FileLoader,Matrix3,Vector4,Plane,Float32BufferAttribute,InstancedBufferGeometry,InstancedInterleavedBuffer,InterleavedBufferAttribute,Box3,Sphere,Ray,Object3D,LoaderUtils,BufferGeometryLoader,SphereBufferGeometry,LoadingManager,ImageLoader,CubeTexture,Texture,Fog,FogExp2,UVMapping,CubeReflectionMapping,CubeRefractionMapping,EquirectangularReflectionMapping,EquirectangularRefractionMapping,CubeUVReflectionMapping,CubeUVRefractionMapping,RepeatWrapping,ClampToEdgeWrapping,MirroredRepeatWrapping,NearestFilter,NearestMipmapNearestFilter,NearestMipmapLinearFilter,LinearFilter,LinearMipmapNearestFilter,LinearMipmapLinearFilter,Raycaster,WebGLRenderTarget,InstancedBufferAttribute,BufferGeometry,MOUSE,TOUCH,Quaternion,Euler,Spherical,EventDispatcher}from"three";var REVISION="1",DEFAULT_VIEWER_WIDTH=400,DEFAULT_VIEWER_HEIGHT=400,RAYCASTER_LINE_PRECISION=.03,PickDepthEnum={All:0,Closest:1},PickTypeEnum={Ray:0,Rectangle:1},PickLevelEnum={Cell:0,CellSet:1,SceneNode:2},CellTypeEnum={Points:1,Lines:2,Triangles:3,Quads:4};function Group(){Group$1.call(this)}Group.prototype=Object.assign(Object.create(Group$1.prototype),{constructor:Group,toJSON:function(e){const t=Group$1.prototype.toJSON.call(this,e);return t.metadata=void 0,1===this.layers.mask&&(t.object.layers=void 0),this.matrix.equals(new Matrix4)&&(t.object.matrix=void 0),t}});const _position=new Vector3;function Points(e,t){Points$1.call(this,e,t)}function LineSegments(e,t){LineSegments$1.call(this,e,t)}function Mesh(e,t){Mesh$1.call(this,e,t)}function PointLight(e,t,i,n){PointLight$1.call(this,e,t,i,n)}function DirectionalLight(e,t){DirectionalLight$1.call(this,e,t)}function AmbientLight(e,t){AmbientLight$1.call(this,e,t)}function OrthographicCamera(e,t,i,n,r,a){OrthographicCamera$1.call(this,e,t,i,n,r,a)}function PerspectiveCamera(e,t,i,n){PerspectiveCamera$1.call(this,e,t,i,n)}Points.prototype=Object.assign(Object.create(Points$1.prototype),{constructor:Points,toJSON:function(e){const t=Points$1.prototype.toJSON.call(this,e);return t.metadata=void 0,1===this.layers.mask&&(t.object.layers=void 0),this.matrix.equals(new Matrix4)&&(t.object.matrix=void 0),t},raycast:function(e,t){const i=this.geometry.attributes,n=i.position.array;let r,a,o,s,l,c,h=.5;void 0===this.material.vertexSizes&&(h=this.material.size/2);for(let p=0,d=n.length/3;p<d;p++)_position.fromArray(n,3*p),_position.applyMatrix4(this.matrixWorld),_position.project(e.camera),r=(_position.x+1)/2*e.scene.width,a=(1-(_position.y+1)/2)*e.scene.height,this.material.vertexSizes&&(h=i.vsize.array[p]/2),o=r-h,s=r+h,l=a-h,c=a+h,e.x>=o&&e.x<=s&&e.y>=l&&e.y<=c&&t.push({distance:null,distanceToRay:null,point:null,index:p,face:null,object:this})}}),LineSegments.prototype=Object.assign(Object.create(LineSegments$1.prototype),{constructor:LineSegments,toJSON:function(e){const t=LineSegments$1.prototype.toJSON.call(this,e);return t.metadata=void 0,1===this.layers.mask&&(t.object.layers=void 0),this.matrix.equals(new Matrix4)&&(t.object.matrix=void 0),t}}),Mesh.prototype=Object.assign(Object.create(Mesh$1.prototype),{constructor:Mesh,toJSON:function(e){const t=Mesh$1.prototype.toJSON.call(this,e);return t.metadata=void 0,1===this.layers.mask&&(t.object.layers=void 0),this.matrix.equals(new Matrix4)&&(t.object.matrix=void 0),t}}),PointLight.prototype=Object.assign(Object.create(PointLight$1.prototype),{constructor:PointLight,toJSON:function(e){const t=PointLight$1.prototype.toJSON.call(this,e);return t.metadata=void 0,1===this.layers.mask&&(t.object.layers=void 0),this.matrix.equals(new Matrix4)&&(t.object.matrix=void 0),16777215===this.color.getHex()&&(t.object.color=void 0),1===this.intensity&&(t.object.intensity=void 0),t.object.shadow=void 0,t}}),DirectionalLight.prototype=Object.assign(Object.create(DirectionalLight$1.prototype),{constructor:DirectionalLight,toJSON:function(e){const t=DirectionalLight$1.prototype.toJSON.call(this,e);return t.metadata=void 0,1===this.layers.mask&&(t.object.layers=void 0),this.matrix.equals(new Matrix4)&&(t.object.matrix=void 0),16777215===this.color.getHex()&&(t.object.color=void 0),1===this.intensity&&(t.object.intensity=void 0),t.object.shadow=void 0,t}}),AmbientLight.prototype=Object.assign(Object.create(AmbientLight$1.prototype),{constructor:AmbientLight,toJSON:function(e){const t=AmbientLight$1.prototype.toJSON.call(this,e);return t.metadata=void 0,1===this.layers.mask&&(t.object.layers=void 0),this.matrix.equals(new Matrix4)&&(t.object.matrix=void 0),16777215===this.color.getHex()&&(t.object.color=void 0),1===this.intensity&&(t.object.intensity=void 0),t}}),OrthographicCamera.prototype=Object.assign(Object.create(OrthographicCamera$1.prototype),{constructor:OrthographicCamera,toJSON:function(e){const t=OrthographicCamera$1.prototype.toJSON.call(this,e);return t.metadata=void 0,1===this.layers.mask&&(t.object.layers=void 0),this.matrix.equals(new Matrix4)&&(t.object.matrix=void 0),1===this.zoom&&(t.object.zoom=void 0),-1===this.left&&(t.object.left=void 0),1===this.right&&(t.object.right=void 0),1===this.top&&(t.object.top=void 0),-1===this.bottom&&(t.object.bottom=void 0),.1===this.near&&(t.object.near=void 0),2e3===this.far&&(t.object.far=void 0),t}}),PerspectiveCamera.prototype=Object.assign(Object.create(PerspectiveCamera$1.prototype),{constructor:PerspectiveCamera,toJSON:function(e){const t=PerspectiveCamera$1.prototype.toJSON.call(this,e);return t.metadata=void 0,1===this.layers.mask&&(t.object.layers=void 0),this.matrix.equals(new Matrix4)&&(t.object.matrix=void 0),50===this.fov&&(t.object.fov=void 0),1===this.zoom&&(t.object.zoom=void 0),.1===this.near&&(t.object.near=void 0),2e3===this.far&&(t.object.far=void 0),10===this.focus&&(t.object.focus=void 0),1===this.aspect&&(t.object.aspect=void 0),35===this.filmGauge&&(t.object.filmGauge=void 0),0===this.filmOffset&&(t.object.filmOffset=void 0),t}});class Scene extends Scene$1{toJSON(e){const t=super.toJSON(e);return t.metadata=void 0,1===this.layers.mask&&(t.object.layers=void 0),this.matrix.equals(new Matrix4)&&(t.object.matrix=void 0),t}}const UniformsLib={pick:{pickState:{value:new Float32Array(1)},startCell:{value:0}},line:{linePattern:{value:65535},resolution:{value:new Vector2(1,1)}},thick:{linewidth:{value:1}},mesh:{stipple:{value:0},stippleColor:{value:new Color(0)},stipplePattern:{value:new Float32Array(64)}}};var points_frag="uniform vec3 diffuse;\nuniform float opacity;\nuniform float pickState[ 1 ];\nvarying vec3 pickColor;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( pickState[ 0 ] > 0.5 ) {\n\t\tgl_FragColor = vec4( pickColor, 1.0 );\n\t} else {\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t}\n}",points_vert="attribute float vsize;\nattribute float cellCount;\nuniform float size;\nuniform float pickState[ 1 ];\nuniform float startCell;\nvarying vec3 pickColor;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tif ( pickState[ 0 ] > 0.5 ) {\n\t\tfloat cellNum = startCell + cellCount;\n\t\t\n\t\tfloat red = fract( cellNum / (255.0*255.0*255.0) );\n\t\tif ( pickState[ 0 ] > 1.5 ) {\n\t\n\t\t\tfloat red2 = fract( cellNum / (255.0*255.0*255.0*255.0*255.0*255.0) );\n\t\t\tfloat green2 = fract( cellNum / (255.0*255.0*255.0*255.0*255.0) );\n\t\t\tfloat blue2 = fract( cellNum / (255.0*255.0*255.0*255.0) );\n\t\n\t\t\tred2 -= green2 / 255.0;\n\t\t\tgreen2 -= blue2 / 255.0;\n\t\t\tblue2 -= red / 255.0;\n\t\t\tpickColor = vec3( red2, green2, blue2 );\n\t\t} else {\n\t\t\tfloat green = fract( cellNum / (255.0*255.0) );\n\t\t\tfloat blue = fract( cellNum / 255.0 );\n\t\t\tred -= green / 255.0;\n\t\t\tgreen -= blue / 255.0;\n\t\t\tpickColor = vec3( red, green, blue );\n\t\t}\n\t}\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n#ifdef USE_SIZE\n\tgl_PointSize = vsize;\n#else\n\tgl_PointSize = size;\n#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",line_frag="uniform vec3 diffuse;\nuniform float opacity;\nuniform float linePattern;\nuniform float pickState[ 1 ];\nvarying vec3 pickColor;\n#ifdef USE_PATTERN\nvarying float vPattern;\n#endif\nvarying float vDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( pickState[ 0 ] > 0.5 ) {\n\t\tgl_FragColor = vec4( pickColor, 1.0 );\n\t} else {\n\tfloat pattern;\n#ifdef USE_PATTERN\n\tpattern = floor( vPattern );\n#else\n\tpattern = linePattern;\n#endif\n\tfloat shift = pow( 2.0, floor( mod( vDistance, 16.0 ) ) );\n\tif( mod( floor( pattern / shift ), 2.0 ) < 0.5 ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t}\n}",line_vert="attribute vec3 otherPosition;\nattribute float pattern;\nattribute float cellCount;\nuniform float pickState[ 1 ];\nuniform float startCell;\nuniform vec2 resolution;\n#ifdef USE_PATTERN\nvarying float vPattern;\n#endif\nvarying float vDistance;\nvarying vec3 pickColor;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tif ( pickState[ 0 ] > 0.5 ) {\n\t\tfloat cellNum = startCell + cellCount;\n\t\t\n\t\tfloat red = fract( cellNum / (255.0*255.0*255.0) );\n\t\tif ( pickState[ 0 ] > 1.5 ) {\n\t\n\t\t\tfloat red2 = fract( cellNum / (255.0*255.0*255.0*255.0*255.0*255.0) );\n\t\t\tfloat green2 = fract( cellNum / (255.0*255.0*255.0*255.0*255.0) );\n\t\t\tfloat blue2 = fract( cellNum / (255.0*255.0*255.0*255.0) );\n\t\n\t\t\tred2 -= green2 / 255.0;\n\t\t\tgreen2 -= blue2 / 255.0;\n\t\t\tblue2 -= red / 255.0;\n\t\t\tpickColor = vec3( red2, green2, blue2 );\n\t\t} else {\n\t\t\tfloat green = fract( cellNum / (255.0*255.0) );\n\t\t\tfloat blue = fract( cellNum / 255.0 );\n\t\t\tred -= green / 255.0;\n\t\t\tgreen -= blue / 255.0;\n\t\t\tpickColor = vec3( red, green, blue );\n\t\t}\n\t}\n\t#include <color_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\tvec2 ndcPos1 = gl_Position.xy / gl_Position.w;\n\tvec4 other_Position = projectionMatrix * modelViewMatrix * vec4( otherPosition, 1.0 );\n\tvec2 ndcPos2 = other_Position.xy / other_Position.w;\n\tfloat aspect = resolution.x / resolution.y;\n\tvec2 dir = ndcPos2 - ndcPos1;\n\tdir.x *= aspect;\n\tbool end = false;\n\tif ( dir.y < -EPSILON ) {\n\t\tend = true;\n\t}\n\telse if ( dir.y > EPSILON ) {\n\t\tend = false;\n\t}\n\telse if ( dir.x < -EPSILON ) {\n\t\tend = true;\n\t}\n\tvDistance = end ? 0.0 : length( dir * resolution ) / 2.0;\n#ifdef USE_PATTERN\n\tvPattern = pattern + 0.5;\n#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",thickline_vert="attribute vec3 positionStart;\nattribute vec3 positionEnd;\nattribute vec3 colorStart;\nattribute vec3 colorEnd;\nattribute float pattern;\nattribute float linewidthStart;\nattribute float linewidthEnd;\nattribute float cellCount;\nattribute float cellOffset;\nuniform float pickState[ 1 ];\nuniform float startCell;\nuniform float linewidth;\nuniform vec2 resolution;\n#ifdef USE_PATTERN\nvarying float vPattern;\n#endif\nvarying float vDistance;\nvarying vec3 pickColor;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tif ( pickState[ 0 ] > 0.5 ) {\n\t\tfloat cellNum = startCell + cellCount + cellOffset;\n\t\t\n\t\tfloat red = fract( cellNum / (255.0*255.0*255.0) );\n\t\tif ( pickState[ 0 ] > 1.5 ) {\n\t\n\t\t\tfloat red2 = fract( cellNum / (255.0*255.0*255.0*255.0*255.0*255.0) );\n\t\t\tfloat green2 = fract( cellNum / (255.0*255.0*255.0*255.0*255.0) );\n\t\t\tfloat blue2 = fract( cellNum / (255.0*255.0*255.0*255.0) );\n\t\n\t\t\tred2 -= green2 / 255.0;\n\t\t\tgreen2 -= blue2 / 255.0;\n\t\t\tblue2 -= red / 255.0;\n\t\t\tpickColor = vec3( red2, green2, blue2 );\n\t\t} else {\n\t\t\tfloat green = fract( cellNum / (255.0*255.0) );\n\t\t\tfloat blue = fract( cellNum / 255.0 );\n\t\t\tred -= green / 255.0;\n\t\t\tgreen -= blue / 255.0;\n\t\t\tpickColor = vec3( red, green, blue );\n\t\t}\n\t}\n#ifdef USE_COLOR\n\tvColor.xyz = ( position.y < 0.5 ) ? colorStart.xyz : colorEnd.xyz;\n#endif\n#ifdef USE_PATTERN\n\tvPattern = pattern + 0.5;\n#endif\n\tfloat aspect = resolution.x / resolution.y;\n\tvec4 start = modelViewMatrix * vec4( positionStart, 1.0 );\n\tvec4 end = modelViewMatrix * vec4( positionEnd, 1.0 );\n\tvec4 clipStart = projectionMatrix * start;\n\tvec4 clipEnd = projectionMatrix * end;\n\tvec2 ndcStart = clipStart.xy / clipStart.w;\n\tvec2 ndcEnd = clipEnd.xy / clipEnd.w;\n\tvec2 dir = ndcEnd - ndcStart;\n\tvec2 dirOrig = dir;\n\tdir.x *= aspect;\n\tdir = normalize( dir );\n\tvec2 offset = vec2( dir.y, -dir.x );\n\tdir.x /= aspect;\n\toffset.x /= aspect;\n\tif ( position.x < 0.5 ) offset *= -1.0;\n\toffset += ( position.y < 0.5 ) ? -dir : dir;\n\tfloat widthFactor, avgWidthFactor;\n#ifdef USE_LINEWIDTH\n\twidthFactor = ( position.y < 0.5 ) ? linewidthStart : linewidthEnd;\n\tavgWidthFactor = ( linewidthStart + linewidthEnd ) / 2.0;\n#else\n\twidthFactor = avgWidthFactor = linewidth;\n#endif\n\toffset *= widthFactor;\n\tdir *= widthFactor;\n\toffset /= resolution.y;\n\tdir /= resolution.y;\n\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\toffset *= clip.w;\n\tclip.xy += offset;\n\tif ( clip.z > -1.0 ) {\n\t\tclip.z -= 5.0e-4;\n\t\tif ( clip.z < -1.0 ) clip.z = -1.0;\n\t}\n\tgl_Position = clip;\n\tvDistance = ( position.y < 0.5) ? 0.0 : ( length( dirOrig * resolution ) + 2.0 * length( dir * resolution ) ) / avgWidthFactor / 2.0;\n\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag="uniform float stipple;\nuniform vec3 stippleColor;\nuniform vec4 stipplePattern[ 16 ];\nuniform vec3 diffuse;\nuniform float opacity;\nuniform float pickState[ 1 ];\nvarying vec3 pickColor;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( pickState[ 0 ] > 0.5 ) {\n\t\tgl_FragColor = vec4( pickColor, 1.0 );\n\t} else {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tif ( stipple > 0.5 ) {\n\t\tvec2 coord = floor( mod( gl_FragCoord.xy, 32.0 ) );\n\t\tint index = int( floor( coord.x / 64.0 ) + ( coord.y / 2.0 ) );\n\t\tint comp = int( floor( coord.x / 16.0 ) + mod( coord.y , 2.0 ) * 2.0 );\n\t\tfor ( int i = 0; i < 16; i ++ ) {\n\t\t\tif ( i == index ) {\n\t\t\t\tfloat shift = pow( 2.0, floor( mod( gl_FragCoord.x, 16.0 ) ) );\n\t\t\t\tfloat shortPattern;\n\t\t\t\tif ( comp == 0 ) {\n\t\t\t\t\tshortPattern = stipplePattern[ i ].x;\n\t\t\t\t} else if ( comp == 1 ) {\n\t\t\t\t\tshortPattern = stipplePattern[ i ].y;\n\t\t\t\t} else if ( comp == 2 ) {\n\t\t\t\t\tshortPattern = stipplePattern[ i ].z;\n\t\t\t\t} else {\n\t\t\t\t\tshortPattern = stipplePattern[ i ].w;\n\t\t\t\t}\n\t\t\t\tif ( mod( floor( shortPattern / shift ), 2.0 ) > 0.5 ) {\n\t\t\t\t\tdiffuseColor = vec4( stippleColor, opacity );\n\t\t\t\t} else if ( stipple < 1.5 ) {\n\t\t\t\t\tdiscard;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\t}\n}",meshbasic_vert="attribute float cellCount;\nuniform float pickState[ 1 ];\nuniform float startCell;\nvarying vec3 pickColor;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tif ( pickState[ 0 ] > 0.5 ) {\n\t\tfloat cellNum = startCell + cellCount;\n\t\t\n\t\tfloat red = fract( cellNum / (255.0*255.0*255.0) );\n\t\tif ( pickState[ 0 ] > 1.5 ) {\n\t\n\t\t\tfloat red2 = fract( cellNum / (255.0*255.0*255.0*255.0*255.0*255.0) );\n\t\t\tfloat green2 = fract( cellNum / (255.0*255.0*255.0*255.0*255.0) );\n\t\t\tfloat blue2 = fract( cellNum / (255.0*255.0*255.0*255.0) );\n\t\n\t\t\tred2 -= green2 / 255.0;\n\t\t\tgreen2 -= blue2 / 255.0;\n\t\t\tblue2 -= red / 255.0;\n\t\t\tpickColor = vec3( red2, green2, blue2 );\n\t\t} else {\n\t\t\tfloat green = fract( cellNum / (255.0*255.0) );\n\t\t\tfloat blue = fract( cellNum / 255.0 );\n\t\t\tred -= green / 255.0;\n\t\t\tgreen -= blue / 255.0;\n\t\t\tpickColor = vec3( red, green, blue );\n\t\t}\n\t}\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag="uniform float ambientIntensity;\nuniform float diffuseIntensity;\nuniform float stipple;\nuniform vec3 stippleColor;\nuniform vec4 stipplePattern[ 16 ];\nuniform float pickState[ 1 ];\nvarying vec3 pickColor;\n#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( pickState[ 0 ] > 0.5 ) {\n\t\tgl_FragColor = vec4( pickColor, 1.0 );\n\t} else {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\tif ( stipple > 0.5 ) {\n\t\tvec2 coord = floor( mod( gl_FragCoord.xy, 32.0 ) );\n\t\tint index = int( floor( coord.x / 64.0 ) + ( coord.y / 2.0 ) );\n\t\tint comp = int( floor( coord.x / 16.0 ) + mod( coord.y , 2.0 ) * 2.0 );\n\t\tfor ( int i = 0; i < 16; i ++ ) {\n\t\t\tif ( i == index ) {\n\t\t\t\tfloat shift = pow( 2.0, floor( mod( gl_FragCoord.x, 16.0 ) ) );\n\t\t\t\tfloat shortPattern;\n\t\t\t\tif ( comp == 0 ) {\n\t\t\t\t\tshortPattern = stipplePattern[ i ].x;\n\t\t\t\t} else if ( comp == 1 ) {\n\t\t\t\t\tshortPattern = stipplePattern[ i ].y;\n\t\t\t\t} else if ( comp == 2 ) {\n\t\t\t\t\tshortPattern = stipplePattern[ i ].z;\n\t\t\t\t} else {\n\t\t\t\t\tshortPattern = stipplePattern[ i ].w;\n\t\t\t\t}\n\t\t\t\tif ( mod( floor( shortPattern / shift ), 2.0 ) > 0.5 ) {\n\t\t\t\t\tdiffuseColor = vec4( stippleColor, opacity );\n\t\t\t\t} else if ( stipple < 1.5 ) {\n\t\t\t\t\tdiscard;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\tvec3 outgoingLight = ( reflectedLight.directDiffuse * diffuseIntensity ) + ( reflectedLight.indirectDiffuse * ambientIntensity ) + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\t}\n}",meshphong_vert="attribute float cellCount;\nuniform float pickState[ 1 ];\nuniform float startCell;\nvarying vec3 pickColor;\n#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tif ( pickState[ 0 ] > 0.5 ) {\n\t\tfloat cellNum = startCell + cellCount;\n\t\t\n\t\tfloat red = fract( cellNum / (255.0*255.0*255.0) );\n\t\tif ( pickState[ 0 ] > 1.5 ) {\n\t\n\t\t\tfloat red2 = fract( cellNum / (255.0*255.0*255.0*255.0*255.0*255.0) );\n\t\t\tfloat green2 = fract( cellNum / (255.0*255.0*255.0*255.0*255.0) );\n\t\t\tfloat blue2 = fract( cellNum / (255.0*255.0*255.0*255.0) );\n\t\n\t\t\tred2 -= green2 / 255.0;\n\t\t\tgreen2 -= blue2 / 255.0;\n\t\t\tblue2 -= red / 255.0;\n\t\t\tpickColor = vec3( red2, green2, blue2 );\n\t\t} else {\n\t\t\tfloat green = fract( cellNum / (255.0*255.0) );\n\t\t\tfloat blue = fract( cellNum / 255.0 );\n\t\t\tred -= green / 255.0;\n\t\t\tgreen -= blue / 255.0;\n\t\t\tpickColor = vec3( red, green, blue );\n\t\t}\n\t}\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";const ShaderChunk={points_frag:points_frag,points_vert:points_vert,line_frag:line_frag,line_vert:line_vert,thickline_vert:thickline_vert,meshbasic_frag:meshbasic_frag,meshbasic_vert:meshbasic_vert,meshphong_frag:meshphong_frag,meshphong_vert:meshphong_vert},ShaderLib={points:{uniforms:UniformsUtils.merge([UniformsLib$1.points,UniformsLib$1.fog,UniformsLib.pick]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},line:{uniforms:UniformsUtils.merge([UniformsLib$1.common,UniformsLib$1.fog,UniformsLib.pick,UniformsLib.line]),vertexShader:ShaderChunk.line_vert,fragmentShader:ShaderChunk.line_frag},thick:{uniforms:UniformsUtils.merge([UniformsLib$1.common,UniformsLib$1.fog,UniformsLib.pick,UniformsLib.line,{linewidth:{value:1}}]),vertexShader:ShaderChunk.thickline_vert,fragmentShader:ShaderChunk.line_frag},basic:{uniforms:UniformsUtils.merge([UniformsLib$1.common,UniformsLib$1.fog,UniformsLib.pick,UniformsLib.mesh]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},phong:{uniforms:UniformsUtils.merge([UniformsLib$1.common,UniformsLib$1.fog,UniformsLib$1.lights,UniformsLib.pick,UniformsLib.mesh,{ambientIntensity:{value:.31},diffuseIntensity:{value:.7},emissive:{value:new Color(0)},specular:{value:new Color(2039583)},shininess:{value:63.8386159788056}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag}};function PickMaterial(e){ShaderMaterial.call(this),Object.defineProperties(this,{pickState:{get:function(){return this.uniforms.pickState.value},set:function(e){this.uniforms.pickState.value=e}},startCell:{get:function(){return this.uniforms.startCell.value},set:function(e){this.uniforms.startCell.value=e}}}),this.setValues(e)}function PointsMaterial(e){PickMaterial.call(this,{uniforms:UniformsUtils.clone(ShaderLib.points.uniforms),vertexShader:ShaderLib.points.vertexShader,fragmentShader:ShaderLib.points.fragmentShader}),this.color=new Color(16777215),this.map=null,this.size=1,this.fog=!0,Object.defineProperties(this,{vertexSizes:{get:function(){return this.defines.USE_SIZE},set:function(e){this.defines.USE_SIZE=e}}}),this.setValues(e)}function MeshBasicMaterial(e){PickMaterial.call(this,{uniforms:UniformsUtils.clone(ShaderLib.basic.uniforms),vertexShader:ShaderLib.basic.vertexShader,fragmentShader:ShaderLib.basic.fragmentShader}),this.color=new Color(16777215),this.map=null,this.fog=!0,Object.defineProperties(this,{stipple:{get:function(){return this.uniforms.stipple.value},set:function(e){this.uniforms.stipple.value=e}},stippleColor:{get:function(){return this.uniforms.stippleColor.value},set:function(e){this.uniforms.stippleColor.value=e}},stipplePattern:{get:function(){return this.uniforms.stipplePattern.value},set:function(e){this.uniforms.stipplePattern.value=e}}}),this.setValues(e)}function MeshPhongMaterial(e){MeshBasicMaterial.call(this,{uniforms:UniformsUtils.clone(ShaderLib.phong.uniforms),vertexShader:ShaderLib.phong.vertexShader,fragmentShader:ShaderLib.phong.fragmentShader}),this.specular=new Color(2039583),this.shininess=63.8386159788056,this.emissive=new Color(0),this.emissiveIntensity=1,this.lights=!0,Object.defineProperties(this,{ambientIntensity:{get:function(){return this.uniforms.ambientIntensity.value},set:function(e){this.uniforms.ambientIntensity.value=e}},diffuseIntensity:{get:function(){return this.uniforms.diffuseIntensity.value},set:function(e){this.uniforms.diffuseIntensity.value=e}}}),this.setValues(e)}function LineMaterial(e){PickMaterial.call(this,{uniforms:UniformsUtils.clone(ShaderLib.line.uniforms),vertexShader:ShaderLib.line.vertexShader,fragmentShader:ShaderLib.line.fragmentShader}),this.color=new Color(16777215),this.fog=!0,Object.defineProperties(this,{pattern:{get:function(){return this.uniforms.linePattern.value},set:function(e){this.uniforms.linePattern.value=e}},vertexPatterns:{get:function(){return this.defines.USE_PATTERN},set:function(e){this.defines.USE_PATTERN=e}},resolution:{get:function(){return this.uniforms.resolution.value},set:function(e){this.uniforms.resolution.value=e}}}),this.setValues(e)}function ThickLineMaterial(e){LineMaterial.call(this,{uniforms:UniformsUtils.clone(ShaderLib.thick.uniforms),vertexShader:ShaderLib.thick.vertexShader,fragmentShader:ShaderLib.thick.fragmentShader}),Object.defineProperties(this,{linewidth:{get:function(){return this.uniforms.linewidth.value},set:function(e){this.uniforms.linewidth.value=e}},vertexLinewidths:{get:function(){return this.defines.USE_LINEWIDTH},set:function(e){this.defines.USE_LINEWIDTH=e}}}),this.setValues(e)}PickMaterial.prototype=Object.create(ShaderMaterial.prototype),PickMaterial.prototype.constructor=PickMaterial,PickMaterial.prototype.toJSON=function(e){const t=Material.prototype.toJSON.call(this,e);return this.depthFunc===LessEqualDepth&&(t.depthFunc=void 0),!0===this.depthTest&&(t.depthTest=void 0),!0===this.depthWrite&&(t.depthWrite=void 0),!1===this.stencilWrite&&(t.stencilWrite=void 0),255===this.stencilWriteMask&&(t.stencilWriteMask=void 0),this.stencilFunc===AlwaysStencilFunc&&(t.stencilFunc=void 0),0===this.stencilRef&&(t.stencilRef=void 0),255===this.stencilFuncMask&&(t.stencilFuncMask=void 0),this.stencilFail===KeepStencilOp&&(t.stencilFail=void 0),this.stencilZFail===KeepStencilOp&&(t.stencilZFail=void 0),this.stencilZPass===KeepStencilOp&&(t.stencilZPass=void 0),t},PickMaterial.prototype.equals=function(e){return e.opacity===this.opacity&&(e.transparent===this.transparent&&(e.side===this.side&&e.vertexColors===this.vertexColors))},PointsMaterial.prototype=Object.create(PickMaterial.prototype),PointsMaterial.prototype.constructor=PointsMaterial,PointsMaterial.prototype.isPointsMaterial=!0,PointsMaterial.prototype.copy=function(e){return PickMaterial.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.size=e.size,this},PointsMaterial.prototype.toJSON=function(e){const t=PickMaterial.prototype.toJSON.call(this,e);return t.type="PointsMaterial",this.vertexSizes&&(t.vertexSizes=!0),t},PointsMaterial.prototype.equals=function(e){return!1!==PickMaterial.prototype.equals.call(this,e)&&(!!e.isPointsMaterial&&e.color.getHex()===this.color.getHex())},MeshBasicMaterial.prototype=Object.create(PickMaterial.prototype),MeshBasicMaterial.prototype.constructor=MeshBasicMaterial,MeshBasicMaterial.prototype.isMeshBasicMaterial=!0,MeshBasicMaterial.prototype.copy=function(e){return PickMaterial.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this},MeshBasicMaterial.prototype.toJSON=function(e){const t=PickMaterial.prototype.toJSON.call(this,e);return t.type="MeshBasicMaterial",0!==this.stipple&&(t.stipple=this.stipple),0!==this.stippleColor.getHex()&&(t.stippleColor=this.stippleColor.getHex()),JSON.stringify(this.stipplePattern)!==JSON.stringify(new Float32Array(64))&&(t.stipplePattern=Array.prototype.slice.call(this.stipplePattern)),t},MeshBasicMaterial.prototype.equals=function(e){return!1!==PickMaterial.prototype.equals.call(this,e)&&(!(!e.isMeshBasicMaterial&&!e.isMeshPhongMaterial)&&e.color.getHex()===this.color.getHex())},MeshPhongMaterial.prototype=Object.create(MeshBasicMaterial.prototype),MeshPhongMaterial.prototype.constructor=MeshPhongMaterial,MeshPhongMaterial.prototype.isMeshPhongMaterial=!0,MeshPhongMaterial.prototype.isMeshBasicMaterial=!1,MeshPhongMaterial.prototype.copy=function(e){return MeshBasicMaterial.prototype.copy.call(this,e),this.specular.copy(e.specular),this.shininess=e.shininess,this},MeshPhongMaterial.prototype.toJSON=function(e){const t=MeshBasicMaterial.prototype.toJSON.call(this,e);return t.type="MeshPhongMaterial",.31!==this.ambientIntensity&&(t.ambientIntensity=this.ambientIntensity),.7!==this.diffuseIntensity&&(t.diffuseIntensity=this.diffuseIntensity),2039583===this.specular.getHex()&&(t.specular=void 0),63.8386159788056===this.shininess&&(t.shininess=void 0),t},MeshPhongMaterial.prototype.equals=function(e){return!1!==MeshBasicMaterial.prototype.equals.call(this,e)&&(!!e.isMeshPhongMaterial&&(e.ambientIntensity===this.ambientIntensity&&(e.diffuseIntensity===this.diffuseIntensity&&(e.specular.getHex()===this.specular.getHex()&&e.shininess===this.shininess))))},LineMaterial.prototype=Object.create(PickMaterial.prototype),LineMaterial.prototype.constructor=LineMaterial,LineMaterial.prototype.isLineBasicMaterial=!0,LineMaterial.prototype.copy=function(e){return PickMaterial.prototype.copy.call(this,e),this.color.copy(e.color),this},LineMaterial.prototype.toJSON=function(e){const t=PickMaterial.prototype.toJSON.call(this,e);return t.type="LineMaterial",65535!==this.pattern&&(t.pattern=this.pattern),this.vertexPatterns&&(t.vertexPatterns=!0),t},LineMaterial.prototype.equals=function(e){return!1!==PickMaterial.prototype.equals.call(this,e)&&(!!e.isLineBasicMaterial&&e.color.getHex()===this.color.getHex())},ThickLineMaterial.prototype=Object.create(LineMaterial.prototype),ThickLineMaterial.prototype.constructor=ThickLineMaterial,ThickLineMaterial.prototype.isThickLineMaterial=!0,ThickLineMaterial.prototype.toJSON=function(e){const t=LineMaterial.prototype.toJSON.call(this,e);return t.type="ThickLineMaterial",this.vertexLinewidths&&(t.vertexLinewidths=!0),t},ThickLineMaterial.prototype.equals=function(e){return!1!==LineMaterial.prototype.equals.call(this,e)&&(!!e.isThickLineMaterial&&e.vertexLinewidths===this.vertexLinewidths)};var Materials=Object.freeze({__proto__:null,PointsMaterial:PointsMaterial,MeshPhongMaterial:MeshPhongMaterial,MeshBasicMaterial:MeshBasicMaterial,LineMaterial:LineMaterial,ThickLineMaterial:ThickLineMaterial});function MaterialLoader(e){Loader.call(this,e),this.textures={}}function LinePatternBufferGeometryLoader(e){this.bufferGeometryLoader=e}function ThickLineSegmentsBufferGeometry(){InstancedBufferGeometry.call(this),this.type="ThickLineSegmentsBufferGeometry";this.setAttribute("position",new Float32BufferAttribute([0,0,0,1,1,0,0,1,0,0,0,0,1,0,0,1,1,0],3));this.setAttribute("cellOffset",new Float32BufferAttribute([0,0,0,1,1,1],1))}function ThickLineBufferGeometryLoader(){}function ThickLineSegments(e,t){Mesh.call(this,e,t),this.type="ThickLineSegments"}function BillboardText(){Object3D.call(this),this.type="BillboardText",this.text="Label",this.fontSize=16,this.fontStyle="normal",this.fontWeight="normal",this.textDecoration="",this.fontFamily="sans-serif",this.color=new Color(0),this.textAlign="",this.transform="",this.transformOrigin="",this.div=document.createElement("div"),this.div.style.position="absolute",this.div.style.whiteSpace="nowrap",this.scene=null,this.updateStyle()}function ObjectLoader(e){Loader.call(this,e)}MaterialLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:MaterialLoader,load:function(e,t,i,n){const r=this,a=new FileLoader(r.manager);a.setPath(r.path),a.setRequestHeader(this.requestHeader),a.load(e,function(i){try{t(r.parse(JSON.parse(i)))}catch(t){n?n(t):console.error(t),r.manager.itemError(e)}},i,n)},parse:function(e){const t=this.textures;function i(e){return void 0===t[e]&&console.warn("AVS.Three.MaterialLoader: Undefined texture",e),t[e]}const n=new Materials[e.type];if(void 0!==e.uuid&&(n.uuid=e.uuid),void 0!==e.name&&(n.name=e.name),void 0!==e.color&&n.color.setHex(e.color),void 0!==e.roughness&&(n.roughness=e.roughness),void 0!==e.metalness&&(n.metalness=e.metalness),void 0!==e.sheen&&(n.sheen=(new Color).setHex(e.sheen)),void 0!==e.emissive&&n.emissive.setHex(e.emissive),void 0!==e.specular&&n.specular.setHex(e.specular),void 0!==e.shininess&&(n.shininess=e.shininess),void 0!==e.clearcoat&&(n.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(n.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.fog&&(n.fog=e.fog),void 0!==e.flatShading&&(n.flatShading=e.flatShading),void 0!==e.blending&&(n.blending=e.blending),void 0!==e.combine&&(n.combine=e.combine),void 0!==e.side&&(n.side=e.side),void 0!==e.opacity&&(n.opacity=e.opacity),void 0!==e.transparent&&(n.transparent=e.transparent),void 0!==e.alphaTest&&(n.alphaTest=e.alphaTest),void 0!==e.depthTest&&(n.depthTest=e.depthTest),void 0!==e.depthWrite&&(n.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(n.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(n.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(n.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(n.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(n.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(n.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(n.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(n.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(n.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(n.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(n.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(n.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(n.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(n.rotation=e.rotation),1!==e.linewidth&&(n.linewidth=e.linewidth),void 0!==e.dashSize&&(n.dashSize=e.dashSize),void 0!==e.gapSize&&(n.gapSize=e.gapSize),void 0!==e.scale&&(n.scale=e.scale),void 0!==e.polygonOffset&&(n.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(n.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(n.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.skinning&&(n.skinning=e.skinning),void 0!==e.morphTargets&&(n.morphTargets=e.morphTargets),void 0!==e.morphNormals&&(n.morphNormals=e.morphNormals),void 0!==e.dithering&&(n.dithering=e.dithering),void 0!==e.vertexTangents&&(n.vertexTangents=e.vertexTangents),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.toneMapped&&(n.toneMapped=e.toneMapped),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?n.vertexColors=e.vertexColors>0:n.vertexColors=e.vertexColors),void 0!==e.uniforms)for(const t in e.uniforms){const r=e.uniforms[t];switch(n.uniforms[t]={},r.type){case"t":n.uniforms[t].value=i(r.value);break;case"c":n.uniforms[t].value=(new Color).setHex(r.value);break;case"v2":n.uniforms[t].value=(new Vector2).fromArray(r.value);break;case"v3":n.uniforms[t].value=(new Vector3).fromArray(r.value);break;case"v4":n.uniforms[t].value=(new Vector4).fromArray(r.value);break;case"m3":n.uniforms[t].value=(new Matrix3).fromArray(r.value);break;case"m4":n.uniforms[t].value=(new Matrix4).fromArray(r.value);break;default:n.uniforms[t].value=r.value}}if(void 0!==e.defines&&(n.defines=e.defines),void 0!==e.vertexShader&&(n.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(n.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(const t in e.extensions)n.extensions[t]=e.extensions[t];if(void 0!==e.shading&&(n.flatShading=1===e.shading),void 0!==e.size&&(n.size=e.size),void 0!==e.sizeAttenuation&&(n.sizeAttenuation=e.sizeAttenuation),void 0!==e.vertexSizes&&(n.vertexSizes=e.vertexSizes),void 0!==e.pattern&&(n.pattern=e.pattern),void 0!==e.vertexPatterns&&(n.vertexPatterns=e.vertexPatterns),void 0!==e.vertexLinewidths&&(n.vertexLinewidths=e.vertexLinewidths),void 0!==e.stipple&&(n.stipple=e.stipple),void 0!==e.stippleColor&&n.stippleColor.setHex(e.stippleColor),void 0!==e.stipplePattern&&(n.stipplePattern=e.stipplePattern),void 0!==e.ambientIntensity&&(n.ambientIntensity=e.ambientIntensity),void 0!==e.diffuseIntensity&&(n.diffuseIntensity=e.diffuseIntensity),void 0!==e.map&&(n.map=i(e.map)),void 0!==e.matcap&&(n.matcap=i(e.matcap)),void 0!==e.alphaMap&&(n.alphaMap=i(e.alphaMap)),void 0!==e.bumpMap&&(n.bumpMap=i(e.bumpMap)),void 0!==e.bumpScale&&(n.bumpScale=e.bumpScale),void 0!==e.normalMap&&(n.normalMap=i(e.normalMap)),void 0!==e.normalMapType&&(n.normalMapType=e.normalMapType),void 0!==e.normalScale){let t=e.normalScale;!1===Array.isArray(t)&&(t=[t,t]),n.normalScale=(new Vector2).fromArray(t)}if(void 0!==e.displacementMap&&(n.displacementMap=i(e.displacementMap)),void 0!==e.displacementScale&&(n.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(n.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(n.roughnessMap=i(e.roughnessMap)),void 0!==e.metalnessMap&&(n.metalnessMap=i(e.metalnessMap)),void 0!==e.emissiveMap&&(n.emissiveMap=i(e.emissiveMap)),void 0!==e.emissiveIntensity&&(n.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(n.specularMap=i(e.specularMap)),void 0!==e.envMap&&(n.envMap=i(e.envMap)),void 0!==e.envMapIntensity&&(n.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(n.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(n.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(n.lightMap=i(e.lightMap)),void 0!==e.lightMapIntensity&&(n.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(n.aoMap=i(e.aoMap)),void 0!==e.aoMapIntensity&&(n.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(n.gradientMap=i(e.gradientMap)),void 0!==e.clearcoatMap&&(n.clearcoatMap=i(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(n.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(n.clearcoatNormalMap=i(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(n.clearcoatNormalScale=(new Vector2).fromArray(e.clearcoatNormalScale)),void 0!==e.transmission&&(n.transmission=e.transmission),void 0!==e.transmissionMap&&(n.transmissionMap=i(e.transmissionMap)),void 0!==e.clippingPlanes){n.clippingPlanes=[];for(let t=0,i=e.clippingPlanes.length;t<i;t++){const i=e.clippingPlanes[t],r=new Plane(new Vector3(i.normal[0],i.normal[1],i.normal[2]),i.constant);n.clippingPlanes.push(r)}}return n},setTextures:function(e){return this.textures=e,this}}),Object.assign(LinePatternBufferGeometryLoader.prototype,{parse:function(e){const t=this.bufferGeometryLoader.parse(e),i=t.attributes.position;if(void 0!==i){const e=new Float32BufferAttribute(i.array.length,3);for(let t=0,n=i.array.length/6;t<n;t++)e.array[6*t+0]=i.array[6*t+3],e.array[6*t+1]=i.array[6*t+4],e.array[6*t+2]=i.array[6*t+5],e.array[6*t+3]=i.array[6*t+0],e.array[6*t+4]=i.array[6*t+1],e.array[6*t+5]=i.array[6*t+2];t.setAttribute("otherPosition",e)}return t}}),ThickLineSegmentsBufferGeometry.prototype=Object.assign(Object.create(InstancedBufferGeometry.prototype),{constructor:ThickLineSegmentsBufferGeometry,isThickLineSegmentsBufferGeometry:!0,applyMatrix:function(e){const t=this.attributes.positionStart,i=this.attributes.positionEnd;return void 0!==t&&(e.applyToBufferAttribute(t),e.applyToBufferAttribute(i),t.data.needsUpdate=!0,i.data.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},setPositions:function(e){const t=new InstancedInterleavedBuffer(new Float32Array(e),6,1);this.setAttribute("positionStart",new InterleavedBufferAttribute(t,3,0)),this.setAttribute("positionEnd",new InterleavedBufferAttribute(t,3,3)),this.computeBoundingBox(),this.computeBoundingSphere()},setColors:function(e){const t=new InstancedInterleavedBuffer(new Float32Array(e),6,1);this.setAttribute("colorStart",new InterleavedBufferAttribute(t,3,0)),this.setAttribute("colorEnd",new InterleavedBufferAttribute(t,3,3))},setPatterns:function(e){const t=new InstancedInterleavedBuffer(new Float32Array(e),2,1);this.setAttribute("pattern",new InterleavedBufferAttribute(t,1,0))},setLinewidths:function(e){const t=new InstancedInterleavedBuffer(new Float32Array(e),2,1);this.setAttribute("linewidthStart",new InterleavedBufferAttribute(t,1,0)),this.setAttribute("linewidthEnd",new InterleavedBufferAttribute(t,1,1))},computeBoundingBox:function(){const e=new Box3;return function(){null===this.boundingBox&&(this.boundingBox=new Box3);const t=this.attributes.positionStart,i=this.attributes.positionEnd;void 0!==t&&void 0!==i&&(this.boundingBox.setFromBufferAttribute(t),e.setFromBufferAttribute(i),this.boundingBox.union(e))}}(),computeBoundingSphere:function(){const e=new Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new Sphere),null===this.boundingBox&&this.computeBoundingBox();const t=this.attributes.positionStart,i=this.attributes.positionEnd;if(void 0!==t&&void 0!==i){const n=this.boundingSphere.center;this.boundingBox.getCenter(n);let r=0;for(let a=0,o=t.count;a<o;a++)e.fromBufferAttribute(t,a),r=Math.max(r,n.distanceToSquared(e)),e.fromBufferAttribute(i,a),r=Math.max(r,n.distanceToSquared(e));this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error("AVS.Three.ThickLineSegmentsBufferGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}}()}),ThickLineBufferGeometryLoader.prototype={parse:function(e){const t=new ThickLineSegmentsBufferGeometry,i=e.data.attributes;return void 0!==i.position&&t.setPositions(i.position.array),void 0!==i.color&&t.setColors(i.color.array),void 0!==i.pattern&&t.setPatterns(i.pattern.array),void 0!==i.linewidth&&t.setLinewidths(i.linewidth.array),t}},ThickLineSegments.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:ThickLineSegments,isThickLineSegments:!0,raycast:function(){const e=new Matrix4,t=new Ray,i=new Sphere;return function(n,r){const a=this.geometry,o=this.matrixWorld,s=n.params.Line.threshold;if(null===a.boundingSphere&&a.computeBoundingSphere(),i.copy(a.boundingSphere),i.applyMatrix4(o),i.radius+=s,!1===n.ray.intersectsSphere(i))return;e.getInverse(o),t.copy(n.ray).applyMatrix4(e);const l=s/((this.scale.x+this.scale.y+this.scale.z)/3),c=l*l,h=new Vector3,p=new Vector3,d=new Vector3,u=new Vector3,f=a.attributes.positionStart.array;for(let e=0,i=f.length/3-1;e<i;e+=2){if(h.fromArray(f,3*e),p.fromArray(f,3*e+3),t.distanceSqToSegment(h,p,u,d)>c)continue;u.applyMatrix4(this.matrixWorld);const i=n.ray.origin.distanceTo(u);i<n.near||i>n.far||r.push({distance:i,point:d.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this})}}}()}),BillboardText.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:BillboardText,isBillboardText:!0,addToScene:function(e){null===this.scene&&(this.scene=e,e.labels.push(this),e.div.appendChild(this.div),this.updateStyle())},updateStyle:function(){this.div.innerHTML=this.text,this.div.style.fontSize=this.fontSize+"pt",this.div.style.fontStyle=this.fontStyle,this.div.style.fontWeight=this.fontWeight,this.div.style.textDecoration=this.textDecoration,this.div.style.color="#"+this.color.getHexString(),this.div.style.textAlign=this.textAlign,this.div.style.transform=this.transform,this.div.style.transformOrigin=this.transformOrigin,/\s/.test(this.fontFamily)?this.div.style.fontFamily="'"+this.fontFamily+"'":this.div.style.fontFamily=this.fontFamily},updatePosition:function(){this.updateMatrixWorld();const e=(new Vector3).setFromMatrixPosition(this.matrixWorld);e.project(this.scene.camera),e.x=(e.x+1)/2*this.scene.width,e.y=(1-(e.y+1)/2)*this.scene.height,this.x=e.x,this.y=e.y,this.div.style.left=e.x+"px",this.div.style.top=e.y+"px"}}),ObjectLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ObjectLoader,load:function(e,t,i,n){const r=this,a=""===this.path?LoaderUtils.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;const o=new FileLoader(r.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.load(e,function(i){let a=null;try{a=JSON.parse(i)}catch(t){return void 0!==n&&n(t),void console.error("AVS.Three.ObjectLoader: Can't parse "+e+".",t.message)}const o=a.metadata;void 0!==o&&void 0!==o.type&&"geometry"!==o.type.toLowerCase()?r.parse(a,t):console.error("AVS.Three.ObjectLoader: Can't load "+e)},i,n)},parse:function(e,t,i,n,r,a,o){const s=this.parseGeometries(e.geometries,a),l=this.parseImages(e.images,function(){void 0!==t&&t(p)},i),c=this.parseTextures(e.textures,l,n),h=this.parseMaterials(e.materials,c,r),p=this.parseObject(e.object,s,h);return void 0!==o&&(o.add(p),p.saveVisible=p.visible,p.visible=!1),void 0!==e.images&&0!==e.images.length||void 0!==t&&t(p),p},parseGeometries:function(e,t){let i={};if(void 0!==t&&(i=t),void 0!==e){const t=new BufferGeometryLoader,n=new LinePatternBufferGeometryLoader(t),r=new ThickLineBufferGeometryLoader;for(let a=0,o=e.length;a<o;a++){let o;const s=e[a];switch(s.type){case"SphereBufferGeometry":o=new SphereBufferGeometry(s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"BufferGeometry":case"InstancedBufferGeometry":o=t.parse(s);break;case"LinePatternBufferGeometry":o=n.parse(s);break;case"ThickLineBufferGeometry":o=r.parse(s);break;default:console.warn('AVS.Three.ObjectLoader: Unsupported geometry type "'+s.type+'"');continue}o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),!0===o.isBufferGeometry&&void 0!==s.userData&&(o.userData=s.userData),i[s.uuid]=o}}return i},parseMaterials:function(e,t,i){const n={};let r={};if(void 0!==i&&(r=i),void 0!==e){const i=new MaterialLoader;i.setTextures(t);for(let t=0,a=e.length;t<a;t++){const a=e[t];if("MultiMaterial"===a.type){const e=[];for(let t=0;t<a.materials.length;t++){const r=a.materials[t];void 0===n[r.uuid]&&(n[r.uuid]=i.parse(r)),e.push(n[r.uuid])}r[a.uuid]=e}else void 0===n[a.uuid]&&(n[a.uuid]=i.parse(a)),r[a.uuid]=n[a.uuid]}}return r},parseImages:function(e,t,i){const n=this;let r,a={};function o(e){return n.manager.itemStart(e),r.load(e,function(){n.manager.itemEnd(e)},void 0,function(){n.manager.itemError(e),n.manager.itemEnd(e)})}if(void 0!==i&&(a=i),void 0!==e&&e.length>0){const i=new LoadingManager(t);(r=new ImageLoader(i)).setCrossOrigin(this.crossOrigin);for(let t=0,i=e.length;t<i;t++){const i=e[t],r=i.url;if(Array.isArray(r)){a[i.uuid]=[];for(let e=0,t=r.length;e<t;e++){const t=r[e],s=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:n.resourcePath+t;a[i.uuid].push(o(s))}}else{const e=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(i.url)?i.url:n.resourcePath+i.url;a[i.uuid]=o(e)}}}return a},parseTextures:function(e,t,i){function n(e,t){return"number"==typeof e?e:(console.warn("AVS.Three.ObjectLoader.parseTextures: Constant should be in numeric form.",e),t[e])}let r={};if(void 0!==i&&(r=i),void 0!==e)for(let i=0,a=e.length;i<a;i++){const a=e[i];let o;void 0===a.image&&console.warn('AVS.Three.ObjectLoader: No "image" specified for',a.uuid),void 0===t[a.image]&&console.warn("AVS.Three.ObjectLoader: Undefined image",a.image),(o=Array.isArray(t[a.image])?new CubeTexture(t[a.image]):new Texture(t[a.image])).needsUpdate=!0,o.uuid=a.uuid,void 0!==a.name&&(o.name=a.name),void 0!==a.mapping&&(o.mapping=n(a.mapping,TEXTURE_MAPPING)),void 0!==a.offset&&o.offset.fromArray(a.offset),void 0!==a.repeat&&o.repeat.fromArray(a.repeat),void 0!==a.center&&o.center.fromArray(a.center),void 0!==a.rotation&&(o.rotation=a.rotation),void 0!==a.wrap&&(o.wrapS=n(a.wrap[0],TEXTURE_WRAPPING),o.wrapT=n(a.wrap[1],TEXTURE_WRAPPING)),void 0!==a.format&&(o.format=a.format),void 0!==a.type&&(o.type=a.type),void 0!==a.encoding&&(o.encoding=a.encoding),void 0!==a.minFilter&&(o.minFilter=n(a.minFilter,TEXTURE_FILTER)),void 0!==a.magFilter&&(o.magFilter=n(a.magFilter,TEXTURE_FILTER)),void 0!==a.anisotropy&&(o.anisotropy=a.anisotropy),void 0!==a.flipY&&(o.flipY=a.flipY),void 0!==a.premultiplyAlpha&&(o.premultiplyAlpha=a.premultiplyAlpha),void 0!==a.unpackAlignment&&(o.unpackAlignment=a.unpackAlignment),r[a.uuid]=o}return r},parseObject:function(e,t,i){let n,r,a;function o(e){return void 0===t[e]&&console.warn("AVS.Three.ObjectLoader: Undefined geometry",e),t[e]}function s(e){if(void 0!==e){if(Array.isArray(e)){const t=[];for(let n=0,r=e.length;n<r;n++){const r=e[n];void 0===i[r]&&console.warn("AVS.Three.ObjectLoader: Undefined material",r),t.push(i[r])}return t}return void 0===i[e]&&console.warn("AVS.Three.ObjectLoader: Undefined material",e),i[e]}}switch(e.type){case"Scene":n=new Scene,void 0!==e.background&&Number.isInteger(e.background)&&(n.background=new Color(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?n.fog=new Fog(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(n.fog=new FogExp2(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":n=new PerspectiveCamera(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(n.focus=e.focus),void 0!==e.zoom&&(n.zoom=e.zoom),void 0!==e.filmGauge&&(n.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(n.filmOffset=e.filmOffset),void 0!==e.view&&(n.view=Object.assign({},e.view));break;case"OrthographicCamera":n=new OrthographicCamera(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(n.zoom=e.zoom),void 0!==e.view&&(n.view=Object.assign({},e.view));break;case"AmbientLight":n=new AmbientLight(e.color,e.intensity);break;case"DirectionalLight":n=new DirectionalLight(e.color,e.intensity);break;case"PointLight":n=new PointLight(e.color,e.intensity,e.distance,e.decay);break;case"Mesh":case"Quads":(n=new Mesh(r=o(e.geometry),a=s(e.material))).cellType="Quads"===e.type?CellTypeEnum.Quads:CellTypeEnum.Triangles;break;case"LineSegments":(n=new LineSegments(o(e.geometry),s(e.material))).cellType=CellTypeEnum.Lines;break;case"ThickLineSegments":(n=new ThickLineSegments(o(e.geometry),s(e.material))).cellType=CellTypeEnum.Quads;break;case"PointCloud":case"Points":(n=new Points(o(e.geometry),s(e.material))).cellType=CellTypeEnum.Points;break;case"Group":n=new Group;break;case"BillboardText":n=new BillboardText,void 0!==e.text&&(n.text=e.text),void 0!==e.fontSize&&(n.fontSize=e.fontSize),void 0!==e.fontStyle&&(n.fontStyle=e.fontStyle),void 0!==e.fontWeight&&(n.fontWeight=e.fontWeight),void 0!==e.fontFamily&&(n.fontFamily=e.fontFamily),void 0!==e.textDecoration&&(n.textDecoration=e.textDecoration),void 0!==e.color&&n.color.setHex(e.color),void 0!==e.textAlign&&(n.textAlign=e.textAlign),void 0!==e.transform&&(n.transform=e.transform),void 0!==e.transformOrigin&&(n.transformOrigin=e.transformOrigin);break;default:n=new Object3D}if(n.uuid=e.uuid,void 0!==e.name&&(n.name=e.name),void 0!==e.matrix?(n.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(n.matrixAutoUpdate=e.matrixAutoUpdate),n.matrixAutoUpdate&&n.matrix.decompose(n.position,n.quaternion,n.scale)):(void 0!==e.position&&n.position.fromArray(e.position),void 0!==e.rotation&&n.rotation.fromArray(e.rotation),void 0!==e.quaternion&&n.quaternion.fromArray(e.quaternion),void 0!==e.scale&&n.scale.fromArray(e.scale)),void 0!==e.castShadow&&(n.castShadow=e.castShadow),void 0!==e.receiveShadow&&(n.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(n.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(n.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(n.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&n.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(n.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.frustumCulled&&(n.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(n.renderOrder=e.renderOrder),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.layers&&(n.layers.mask=e.layers),void 0!==e.children){const r=e.children;for(let e=0;e<r.length;e++)n.add(this.parseObject(r[e],t,i))}return n}});const TEXTURE_MAPPING={UVMapping:UVMapping,CubeReflectionMapping:CubeReflectionMapping,CubeRefractionMapping:CubeRefractionMapping,EquirectangularReflectionMapping:EquirectangularReflectionMapping,EquirectangularRefractionMapping:EquirectangularRefractionMapping,CubeUVReflectionMapping:CubeUVReflectionMapping,CubeUVRefractionMapping:CubeUVRefractionMapping},TEXTURE_WRAPPING={RepeatWrapping:RepeatWrapping,ClampToEdgeWrapping:ClampToEdgeWrapping,MirroredRepeatWrapping:MirroredRepeatWrapping},TEXTURE_FILTER={NearestFilter:NearestFilter,NearestMipmapNearestFilter:NearestMipmapNearestFilter,NearestMipmapLinearFilter:NearestMipmapLinearFilter,LinearFilter:LinearFilter,LinearMipmapNearestFilter:LinearMipmapNearestFilter,LinearMipmapLinearFilter:LinearMipmapLinearFilter};function Viewer(e,t){var i=e;this.getID=function(){return i},this.pixelRatio=void 0!==t?t:window.devicePixelRatio,this.container=document.createElement("div"),this.container.style.position="relative",this.container.style.outline="none",this.container.style.overflow="hidden",this.container.style.width="100%",this.container.style.height="100%",this.container.id="avsthreeDiv",this.domElement=this.container,this.scenes=[],this.currentScene=null,this.objectLoader=new ObjectLoader,this.startCell=1,this.interactors=[],this.raycaster=new Raycaster,this.raycaster.params.Line.threshold=.001,this.validPick=!1,this.pickType=PickTypeEnum.Ray,this.pickDepth=PickDepthEnum.Closest,this.pickRayX=0,this.pickRayY=0,this.pickRectangleLeft=0,this.pickRectangleTop=0,this.pickRectangleRight=1,this.pickRectangleBottom=1,this.selectionListeners=[],this.intersects=[],this.highlightList=[],this.updateHighlight=!1,this.highlightColor=new Color(16711680),this.updatePicking=!1,this.pickState=new Float32Array(1),this.resolution=new Vector2,this.loading=!1,this.cancelLoad=!1,this.firstChunk=!1}function TransformInteractor(e){void 0===e&&console.warn('AVS.Three.TransformInteractor: The first parameter "domElement" is now mandatory.'),e===document&&console.error('AVS.Three.TransformInteractor: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=new Object3D,this.camera=null,this.domElement=e,this.enabled=!0,this.target=new Vector3,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:MOUSE.ROTATE,MIDDLE:MOUSE.DOLLY,RIGHT:MOUSE.PAN},this.touches={ONE:TOUCH.ROTATE,TWO:TOUCH.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.saveState=function(){t.target0.copy(t.target),t.position0.copy(t.object.position),t.zoom0=t.object.zoom},this.reset=function(){t.target.copy(t.target0),t.object.position.copy(t.position0),t.object.zoom=t.zoom0,t.object.updateProjectionMatrix(),t.dispatchEvent(i),t.update(),o=a.NONE},this.update=function(){var e=t.object.quaternion.clone().inverse();c.applyQuaternion(e),t.object.position.add(c);var n=(new Quaternion).setFromEuler(new Euler(s.phi,s.theta,0,"XYZ"));t.object.quaternion.premultiply(n),t.object.scale.multiplyScalar(l),s.set(0,0,0),l=1,c.set(0,0,0),t.dispatchEvent(i)},this.dispose=function(){t.domElement.removeEventListener("contextmenu",Y,!1),t.domElement.removeEventListener("pointerdown",D,!1),t.domElement.removeEventListener("wheel",H,!1),t.domElement.removeEventListener("touchstart",V,!1),t.domElement.removeEventListener("touchend",z,!1),t.domElement.removeEventListener("touchmove",W,!1),t.domElement.ownerDocument.removeEventListener("pointermove",U,!1),t.domElement.ownerDocument.removeEventListener("pointerup",B,!1),t.domElement.removeEventListener("keydown",F,!1)};var t=this,i={type:"change"},n={type:"start"},r={type:"end"},a={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},o=a.NONE,s=new Spherical,l=1,c=new Vector3,h=new Vector2,p=new Vector2,d=new Vector2,u=new Vector2,f=new Vector2,m=new Vector2,g=new Vector2,v=new Vector2,b=new Vector2;function y(){return Math.pow(.95,t.zoomSpeed)}function x(e){s.theta+=e}function S(e){s.phi+=e}var w,L,k=(w=new Vector3,function(e,t){w.setFromMatrixColumn(t,0),w.multiplyScalar(e),c.add(w)}),P=function(){var e=new Vector3;return function(i,n){!0===t.screenSpacePanning?e.setFromMatrixColumn(n,1):(e.setFromMatrixColumn(n,0),e.crossVectors(t.object.up,e)),e.multiplyScalar(-i),c.add(e)}}(),M=(L=new Vector3,function(e,i){var n=t.domElement;if(t.camera.isPerspectiveCamera){var r=t.camera.position;L.copy(r).sub(t.target);var a=L.length();a*=Math.tan(t.camera.fov/2*Math.PI/180),k(2*e*a/n.clientHeight,t.object.matrix),P(2*i*a/n.clientHeight,t.object.matrix)}else t.camera.isOrthographicCamera?(k(e*(t.camera.right-t.camera.left)/t.camera.zoom/n.clientWidth,t.object.matrix),P(i*(t.camera.top-t.camera.bottom)/t.camera.zoom/n.clientHeight,t.object.matrix)):(console.warn("WARNING: AVS.Three.TransformInteractor encountered an unknown camera type - pan disabled."),t.enablePan=!1)});function _(e){l*=e}function T(e){l/=e}function E(e){h.set(e.clientX,e.clientY)}function O(e){u.set(e.clientX,e.clientY)}function C(e){if(1==e.touches.length)h.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),i=.5*(e.touches[0].pageY+e.touches[1].pageY);h.set(t,i)}}function R(e){if(1==e.touches.length)u.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),i=.5*(e.touches[0].pageY+e.touches[1].pageY);u.set(t,i)}}function I(e){var t=e.touches[0].pageX-e.touches[1].pageX,i=e.touches[0].pageY-e.touches[1].pageY,n=Math.sqrt(t*t+i*i);g.set(0,n)}function A(e){if(1==e.touches.length)p.set(e.touches[0].pageX,e.touches[0].pageY);else{var i=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY);p.set(i,n)}d.subVectors(p,h).multiplyScalar(t.rotateSpeed);var r=t.domElement;x(2*Math.PI*d.x/r.clientHeight),S(2*Math.PI*d.y/r.clientHeight),h.copy(p)}function N(e){if(1==e.touches.length)f.set(e.touches[0].pageX,e.touches[0].pageY);else{var i=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY);f.set(i,n)}m.subVectors(f,u).multiplyScalar(t.panSpeed),M(m.x,m.y),u.copy(f)}function j(e){var i=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,r=Math.sqrt(i*i+n*n);v.set(0,r),b.set(0,Math.pow(v.y/g.y,t.zoomSpeed)),_(b.y),g.copy(v)}function D(e){if(!1!==t.enabled)switch(e.pointerType){case"mouse":!function(e){var i;switch(e.preventDefault(),t.domElement.focus?t.domElement.focus():window.focus(),e.button){case 0:i=t.mouseButtons.LEFT;break;case 1:i=t.mouseButtons.MIDDLE;break;case 2:i=t.mouseButtons.RIGHT;break;default:i=-1}switch(i){case MOUSE.DOLLY:if(!1===t.enableZoom)return;!function(e){g.set(e.clientX,e.clientY)}(e),o=a.DOLLY;break;case MOUSE.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===t.enablePan)return;O(e),o=a.PAN}else{if(!1===t.enableRotate)return;E(e),o=a.ROTATE}break;case MOUSE.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===t.enableRotate)return;E(e),o=a.ROTATE}else{if(!1===t.enablePan)return;O(e),o=a.PAN}break;default:o=a.NONE}o!==a.NONE&&(t.domElement.ownerDocument.addEventListener("pointermove",U,!1),t.domElement.ownerDocument.addEventListener("pointerup",B,!1),t.dispatchEvent(n))}(e)}}function U(e){if(!1!==t.enabled)switch(e.pointerType){case"mouse":!function(e){if(!1===t.enabled)return;switch(e.preventDefault(),o){case a.ROTATE:if(!1===t.enableRotate)return;!function(e){p.set(e.clientX,e.clientY),d.subVectors(p,h).multiplyScalar(t.rotateSpeed);var i=t.domElement;x(2*Math.PI*d.x/i.clientHeight),S(2*Math.PI*d.y/i.clientHeight),h.copy(p),t.update()}(e);break;case a.DOLLY:if(!1===t.enableZoom)return;!function(e){v.set(e.clientX,e.clientY),b.subVectors(v,g),b.y>0?_(y()):b.y<0&&T(y()),g.copy(v),t.update()}(e);break;case a.PAN:if(!1===t.enablePan)return;!function(e){f.set(e.clientX,e.clientY),m.subVectors(f,u).multiplyScalar(t.panSpeed),M(m.x,m.y),u.copy(f),t.update()}(e)}}(e)}}function B(e){if(!1!==t.enabled)switch(e.pointerType){case"mouse":!function(e){if(!1===t.enabled)return;t.domElement.ownerDocument.removeEventListener("pointermove",U,!1),t.domElement.ownerDocument.removeEventListener("pointerup",B,!1),t.dispatchEvent(r),o=a.NONE}()}}function H(e){!1===t.enabled||!1===t.enableZoom||o!==a.NONE&&o!==a.ROTATE||(e.preventDefault(),e.stopPropagation(),t.dispatchEvent(n),function(e){e.deltaY<0?T(y()):e.deltaY>0&&_(y()),t.update()}(e),t.dispatchEvent(r))}function F(e){!1!==t.enabled&&!1!==t.enableKeys&&!1!==t.enablePan&&function(e){var i=!1;switch(e.keyCode){case t.keys.UP:M(0,t.keyPanSpeed),i=!0;break;case t.keys.BOTTOM:M(0,-t.keyPanSpeed),i=!0;break;case t.keys.LEFT:M(t.keyPanSpeed,0),i=!0;break;case t.keys.RIGHT:M(-t.keyPanSpeed,0),i=!0}i&&(e.preventDefault(),t.update())}(e)}function V(e){if(!1!==t.enabled){switch(e.preventDefault(),e.touches.length){case 1:switch(t.touches.ONE){case TOUCH.ROTATE:if(!1===t.enableRotate)return;C(e),o=a.TOUCH_ROTATE;break;case TOUCH.PAN:if(!1===t.enablePan)return;R(e),o=a.TOUCH_PAN;break;default:o=a.NONE}break;case 2:switch(t.touches.TWO){case TOUCH.DOLLY_PAN:if(!1===t.enableZoom&&!1===t.enablePan)return;!function(e){t.enableZoom&&I(e),t.enablePan&&R(e)}(e),o=a.TOUCH_DOLLY_PAN;break;case TOUCH.DOLLY_ROTATE:if(!1===t.enableZoom&&!1===t.enableRotate)return;!function(e){t.enableZoom&&I(e),t.enableRotate&&C(e)}(e),o=a.TOUCH_DOLLY_ROTATE;break;default:o=a.NONE}break;default:o=a.NONE}o!==a.NONE&&t.dispatchEvent(n)}}function W(e){if(!1!==t.enabled)switch(e.preventDefault(),e.stopPropagation(),o){case a.TOUCH_ROTATE:if(!1===t.enableRotate)return;A(e),t.update();break;case a.TOUCH_PAN:if(!1===t.enablePan)return;N(e),t.update();break;case a.TOUCH_DOLLY_PAN:if(!1===t.enableZoom&&!1===t.enablePan)return;!function(e){t.enableZoom&&j(e),t.enablePan&&N(e)}(e),t.update();break;case a.TOUCH_DOLLY_ROTATE:if(!1===t.enableZoom&&!1===t.enableRotate)return;!function(e){t.enableZoom&&j(e),t.enableRotate&&A(e)}(e),t.update();break;default:o=a.NONE}}function z(e){!1!==t.enabled&&(t.dispatchEvent(r),o=a.NONE)}function Y(e){!1!==t.enabled&&e.preventDefault()}t.domElement.addEventListener("contextmenu",Y,!1),t.domElement.addEventListener("pointerdown",D,!1),t.domElement.addEventListener("wheel",H,!1),t.domElement.addEventListener("touchstart",V,!1),t.domElement.addEventListener("touchend",z,!1),t.domElement.addEventListener("touchmove",W,!1),t.domElement.addEventListener("keydown",F,!1),-1===t.domElement.tabIndex&&(t.domElement.tabIndex=0),this.update()}function PanInteractor(e){var t;void 0===e&&console.warn('AVS.Three.PanInteractor: The first parameter "domElement" is now mandatory.'),e===document&&console.error('AVS.Three.PanInteractor: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.linkObjectsBottom=[],this.linkObjectsTop=[],this.linkObjectsLeft=[],this.linkObjectsRight=[],this.domElement=e,this.enabled=!0,this.target=new Vector3,this.enableZoom=!1,this.zoomSpeed=1,this.enableRotate=!1,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:MOUSE.PAN,MIDDLE:MOUSE.NONE,RIGHT:MOUSE.NONE},this.touches={ONE:TOUCH.PAN,TWO:TOUCH.NONE},this.saveState=function(){i.target0.copy(i.target),i.position0.copy(i.object.position),i.zoom0=i.object.zoom},this.reset=function(){i.target.copy(i.target0),i.object.position.copy(i.position0),i.object.zoom=i.zoom0,i.object.updateProjectionMatrix(),i.dispatchEvent(n),i.update(),s=o.NONE},this.update=(t=null,function(){if(void 0!==i.object&&void 0!==i.object.style){c.x>i.object.leftLimit?c.x=i.object.leftLimit:c.x<i.object.rightLimit&&(c.x=i.object.rightLimit),c.y<i.object.bottomLimit?c.y=i.object.bottomLimit:c.y>i.object.topLimit&&(c.y=i.object.topLimit),i.object.panOffsetX=c.x,i.object.panOffsetY=c.y,i.object.style.left=i.object.baseLeft+c.x+"px",i.object.style.top=i.object.baseTop+c.y+"px";for(var e=0;e<i.linkObjectsBottom.length;e++)(t=i.linkObjectsBottom[e]).style.left=t.baseLeft+c.x+"px";for(e=0;e<i.linkObjectsTop.length;e++)(t=i.linkObjectsTop[e]).style.left=t.baseLeft+c.x+"px";for(e=0;e<i.linkObjectsLeft.length;e++)(t=i.linkObjectsLeft[e]).style.top=t.baseTop+c.y+"px";for(e=0;e<i.linkObjectsRight.length;e++)(t=i.linkObjectsRight[e]).style.top=t.baseTop+c.y+"px";i.dispatchEvent(n)}}),this.dispose=function(){i.domElement.removeEventListener("contextmenu",V,!1),i.domElement.removeEventListener("pointerdown",A,!1),i.domElement.removeEventListener("wheel",D,!1),i.domElement.removeEventListener("touchstart",B,!1),i.domElement.removeEventListener("touchend",F,!1),i.domElement.removeEventListener("touchmove",H,!1),i.domElement.ownerDocument.removeEventListener("pointermove",N,!1),i.domElement.ownerDocument.removeEventListener("pointerup",j,!1),i.domElement.removeEventListener("keydown",U,!1)};var i=this,n={type:"change"},r={type:"start"},a={type:"end"},o={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},s=o.NONE,l=new Spherical,c=new Vector3,h=new Vector2,p=new Vector2,d=new Vector2,u=new Vector2,f=new Vector2,m=new Vector2,g=new Vector2,v=new Vector2,b=new Vector2;function y(){return Math.pow(.95,i.zoomSpeed)}function x(e){l.theta+=e}function S(e){l.phi+=e}w=new Vector3(1,0,0),function(){var e=new Vector3(0,1,0)}();var w,L=function(){new Vector3;return function(e,t){c.x+=e,c.y+=t}}();function k(e){i.object.isPerspectiveCamera||(i.object.isOrthographicCamera?(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom*e)),i.object.updateProjectionMatrix(),zoomChanged=!0):(console.warn("WARNING: AVS.Three.PanInteractor encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1))}function P(e){i.object.isPerspectiveCamera||(i.object.isOrthographicCamera?(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/e)),i.object.updateProjectionMatrix(),zoomChanged=!0):(console.warn("WARNING: AVS.Three.PanInteractor encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1))}function M(e){h.set(e.clientX,e.clientY)}function _(e){u.set(e.clientX,e.clientY)}function T(e){if(1==e.touches.length)h.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),i=.5*(e.touches[0].pageY+e.touches[1].pageY);h.set(t,i)}}function E(e){if(1==e.touches.length)u.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),i=.5*(e.touches[0].pageY+e.touches[1].pageY);u.set(t,i)}}function O(e){var t=e.touches[0].pageX-e.touches[1].pageX,i=e.touches[0].pageY-e.touches[1].pageY,n=Math.sqrt(t*t+i*i);g.set(0,n)}function C(e){if(1==e.touches.length)p.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY);p.set(t,n)}d.subVectors(p,h).multiplyScalar(i.rotateSpeed);var r=i.domElement;x(2*Math.PI*d.x/r.clientHeight),S(2*Math.PI*d.y/r.clientHeight),h.copy(p)}function R(e){if(1==e.touches.length)f.set(e.touches[0].pageX,e.touches[0].pageY);else{var t=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY);f.set(t,n)}m.subVectors(f,u).multiplyScalar(i.panSpeed),L(m.x,m.y),u.copy(f)}function I(e){var t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,r=Math.sqrt(t*t+n*n);v.set(0,r),b.set(0,Math.pow(v.y/g.y,i.zoomSpeed)),k(b.y),g.copy(v)}function A(e){if(!1!==i.enabled)switch(e.pointerType){case"mouse":!function(e){var t;switch(e.preventDefault(),i.domElement.focus?i.domElement.focus():window.focus(),e.button){case 0:t=i.mouseButtons.LEFT;break;case 1:t=i.mouseButtons.MIDDLE;break;case 2:t=i.mouseButtons.RIGHT;break;default:t=-1}switch(t){case MOUSE.DOLLY:if(!1===i.enableZoom)return;!function(e){g.set(e.clientX,e.clientY)}(e),s=o.DOLLY;break;case MOUSE.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===i.enablePan)return;_(e),s=o.PAN}else{if(!1===i.enableRotate)return;M(e),s=o.ROTATE}break;case MOUSE.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===i.enableRotate)return;M(e),s=o.ROTATE}else{if(!1===i.enablePan)return;_(e),s=o.PAN}break;default:s=o.NONE}s!==o.NONE&&(i.domElement.ownerDocument.addEventListener("pointermove",N,!1),i.domElement.ownerDocument.addEventListener("pointerup",j,!1),i.dispatchEvent(r))}(e)}}function N(e){if(!1!==i.enabled)switch(e.pointerType){case"mouse":!function(e){if(!1===i.enabled)return;switch(e.preventDefault(),s){case o.ROTATE:if(!1===i.enableRotate)return;!function(e){p.set(e.clientX,e.clientY),d.subVectors(p,h).multiplyScalar(i.rotateSpeed);var t=i.domElement;x(2*Math.PI*d.x/t.clientHeight),S(2*Math.PI*d.y/t.clientHeight),h.copy(p),i.update()}(e);break;case o.DOLLY:if(!1===i.enableZoom)return;!function(e){v.set(e.clientX,e.clientY),b.subVectors(v,g),b.y>0?k(y()):b.y<0&&P(y()),g.copy(v),i.update()}(e);break;case o.PAN:if(!1===i.enablePan)return;!function(e){f.set(e.clientX,e.clientY),m.subVectors(f,u).multiplyScalar(i.panSpeed),L(m.x,m.y),u.copy(f),i.update()}(e)}}(e)}}function j(e){if(!1!==i.enabled)switch(e.pointerType){case"mouse":!function(e){if(!1===i.enabled)return;i.domElement.ownerDocument.removeEventListener("pointermove",N,!1),i.domElement.ownerDocument.removeEventListener("pointerup",j,!1),i.dispatchEvent(a),s=o.NONE}()}}function D(e){!1===i.enabled||!1===i.enableZoom||s!==o.NONE&&s!==o.ROTATE||(e.preventDefault(),e.stopPropagation(),i.dispatchEvent(r),function(e){e.deltaY<0?P(y()):e.deltaY>0&&k(y()),i.update()}(e),i.dispatchEvent(a))}function U(e){!1!==i.enabled&&!1!==i.enableKeys&&!1!==i.enablePan&&function(e){var t=!1;switch(e.keyCode){case i.keys.UP:L(0,i.keyPanSpeed),t=!0;break;case i.keys.BOTTOM:L(0,-i.keyPanSpeed),t=!0;break;case i.keys.LEFT:L(i.keyPanSpeed,0),t=!0;break;case i.keys.RIGHT:L(-i.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),i.update())}(e)}function B(e){if(!1!==i.enabled){switch(e.preventDefault(),e.touches.length){case 1:switch(i.touches.ONE){case TOUCH.ROTATE:if(!1===i.enableRotate)return;T(e),s=o.TOUCH_ROTATE;break;case TOUCH.PAN:if(!1===i.enablePan)return;E(e),s=o.TOUCH_PAN;break;default:s=o.NONE}break;case 2:switch(i.touches.TWO){case TOUCH.DOLLY_PAN:if(!1===i.enableZoom&&!1===i.enablePan)return;!function(e){i.enableZoom&&O(e),i.enablePan&&E(e)}(e),s=o.TOUCH_DOLLY_PAN;break;case TOUCH.DOLLY_ROTATE:if(!1===i.enableZoom&&!1===i.enableRotate)return;!function(e){i.enableZoom&&O(e),i.enableRotate&&T(e)}(e),s=o.TOUCH_DOLLY_ROTATE;break;default:s=o.NONE}break;default:s=o.NONE}s!==o.NONE&&i.dispatchEvent(r)}}function H(e){if(!1!==i.enabled)switch(e.preventDefault(),e.stopPropagation(),s){case o.TOUCH_ROTATE:if(!1===i.enableRotate)return;C(e),i.update();break;case o.TOUCH_PAN:if(!1===i.enablePan)return;R(e),i.update();break;case o.TOUCH_DOLLY_PAN:if(!1===i.enableZoom&&!1===i.enablePan)return;!function(e){i.enableZoom&&I(e),i.enablePan&&R(e)}(e),i.update();break;case o.TOUCH_DOLLY_ROTATE:if(!1===i.enableZoom&&!1===i.enableRotate)return;!function(e){i.enableZoom&&I(e),i.enableRotate&&C(e)}(e),i.update();break;default:s=o.NONE}}function F(e){!1!==i.enabled&&(i.dispatchEvent(a),s=o.NONE)}function V(e){!1!==i.enabled&&e.preventDefault()}i.domElement.addEventListener("contextmenu",V,!1),i.domElement.addEventListener("pointerdown",A,!1),i.domElement.addEventListener("wheel",D,!1),i.domElement.addEventListener("touchstart",B,!1),i.domElement.addEventListener("touchend",F,!1),i.domElement.addEventListener("touchmove",H,!1),i.domElement.addEventListener("keydown",U,!1),-1===i.domElement.tabIndex&&(i.domElement.tabIndex=0),this.update()}Viewer.prototype={constructor:Viewer,setWebGLRenderer:function(e){this.renderer=e,this.renderer.autoClear=!1,this.renderer.setPixelRatio(this.pixelRatio),this.renderer.localClippingEnabled=!0,this.renderer.sortObjects=!1},updateSize:function(){var e=this.container.clientWidth,t=this.container.clientHeight;if(e!==this.width||t!==this.height){this.width=e,this.height=t,this.pixelWidth=Math.floor(e*this.pixelRatio),this.pixelHeight=Math.floor(t*this.pixelRatio),this.updateHighlight=!0,this.updatePicking=!0,this.validPick=!1;for(var i=0;i<this.scenes.length;i++)this.updateSceneSize(this.scenes[i]);this.updateInteractors()}},updateSceneSize:function(e){e.x=void 0!==e.userData.x?Math.floor(this.width*e.userData.x):0,e.width=e.origWidth=void 0!==e.userData.width?Math.floor(this.width*e.userData.width):this.width,e.y=void 0!==e.userData.y?Math.floor(this.height*e.userData.y):0,e.height=e.origHeight=void 0!==e.userData.height?Math.floor(this.height*e.userData.height):this.height,e.top=this.height-e.height-e.y,void 0!==e.widthScale&&(e.width*=e.widthScale),void 0!==e.heightScale&&(e.height*=e.heightScale),e.pixelWidth=Math.floor(e.width*this.pixelRatio),e.pixelHeight=Math.floor(e.height*this.pixelRatio),e.camera.isPerspectiveCamera&&(e.camera.aspect=e.pixelWidth/e.pixelHeight,e.camera.updateProjectionMatrix()),e.viewportX=void 0!==e.vpX?Math.floor(this.width*e.vpX):e.x,e.viewportWidth=void 0!==e.vpWidth?Math.floor(this.width*e.vpWidth+.5):e.width,e.viewportY=void 0!==e.vpY?Math.floor(this.height*e.vpY):e.y,e.viewportHeight=void 0!==e.vpHeight?Math.floor(this.height*e.vpHeight+.5):e.height,e.viewportTop=this.height-e.viewportHeight-e.viewportY,e.viewportPixelX=Math.floor(e.viewportX*this.pixelRatio),e.viewportPixelWidth=Math.floor(e.viewportWidth*this.pixelRatio),e.viewportPixelY=Math.floor(e.viewportY*this.pixelRatio),e.viewportPixelHeight=Math.floor(e.viewportHeight*this.pixelRatio),e.viewportPixelTop=this.pixelHeight-e.viewportPixelHeight-e.viewportY;var t=e.viewportDiv;t.style.left=e.viewportX+"px",t.style.width=e.viewportWidth+"px",t.style.top=e.viewportTop+"px",t.style.height=e.viewportHeight+"px";var i=e.div;i.style.width=e.width+"px",i.style.height=e.height+"px",i.baseLeft=e.x-e.viewportX,i.baseTop=e.top-e.viewportTop,i.style.left=i.baseLeft+"px",i.style.top=i.baseTop+"px";var n=e.canvas;n.width=e.pixelWidth,n.height=e.pixelHeight,(n=e.highlightCanvas).width=e.pixelWidth,n.height=e.pixelHeight,e.leftLimit&&(i.leftLimit=Math.floor(-e.leftLimit*e.origWidth*(e.widthScale-1)),i.rightLimit=Math.floor(-e.rightLimit*e.origWidth*(e.widthScale-1)),i.bottomLimit=Math.floor(-e.bottomLimit*e.origHeight*(e.heightScale-1)),i.topLimit=Math.floor(-e.topLimit*e.origHeight*(e.heightScale-1))),e.renderTarget.setSize(e.pixelWidth,e.pixelHeight),e.pixelBuffer=new Uint8Array(4*e.pixelWidth*e.pixelHeight),e.pickingRenderTarget.setSize(e.pixelWidth,e.pixelHeight),e.pickingPixelBuffer=new Uint8Array(4*e.pixelWidth*e.pixelHeight)},clearGeometry:function(){for(;this.container.lastChild;)this.container.removeChild(this.container.lastChild);this.scenes=[],this.currentScene=null,this.startCell=1},setPickDepth:function(e){void 0===e&&(e=PickDepthEnum.Closest),this.pickDepth!==e&&(this.pickDepth=e)},setPickRay:function(e,t){var i=Math.floor(e*this.pixelRatio),n=Math.floor(t*this.pixelRatio);if(i<0||n<0||i>this.pixelWidth||n>this.pixelHeight)return this.validPick=!1,void console.error("AVS.Three.Viewer: pick ray coordinates out of range.");this.pickType=PickTypeEnum.Ray,this.pickRayX=i,this.pickRayY=n,this.validPick=!0},setPickRectangle:function(e,t,i,n){var r=Math.floor(Math.min(e,i)*this.pixelRatio),a=Math.floor(Math.max(e,i)*this.pixelRatio)-r,o=Math.floor(Math.max(t,n)*this.pixelRatio),s=Math.floor(Math.min(t,n)*this.pixelRatio)-o;if(r<0||o<0||a+r>this.pixelWidth||o+s>this.pixelHeight)return this.validPick=!1,void console.error("AVS.Three.Viewer: pick rectangle coordinates out of range.");this.pickType=PickTypeEnum.Rectangle,this.pickRectangleX=r,this.pickRectangleY=o,this.pickRectangleWidth=a,this.pickRectangleHeight=s,this.validPick=!0},interactorUpdate:function(){this.updatePicking=!0,this.render(!0),void 0!==this.stats&&this.stats.update()},addInteractor:function(e){if(e.isTransformInteractor)this.transformInteractor=e,e.addEventListener("change",this.interactorUpdate.bind(this));else{if(!e.isPanInteractor)return;this.panInteractor=e}this.interactors.push(e),e.domElement=this.domElement},removeInteractor:function(e){var t=this.interactors.indexOf(e);t>-1&&(this.interactors.splice(t,1),e.isTransformInteractor?(this.transformInteractor=void 0,e.removeEventListener("change",this.interactorUpdate.bind(this))):e.isPanInteractor&&(this.panInteractor=void 0))},addStats:function(){void 0===this.stats&&(this.stats=new Stats,this.container.appendChild(this.stats.dom))},updateInteractors:function(){for(var e=0;e<this.interactors.length;e++)this.interactors[e].update()},addGeometry:function(e){e.updateMatrixWorld(),void 0!==e.userData.background?this.container.style.backgroundColor="#"+e.userData.background.toString(16).padStart(6,"0"):this.container.style.backgroundColor="transparent";var t=this;e.traverse(function(e){if(e.isScene){for(var i=0;i<e.children.length;i++){var n=e.children[i];if(n.isPerspectiveCamera||n.isOrthographicCamera){e.camera=n,e.remove(n);break}}void 0==e.camera&&null!==e.background&&(e.camera=new OrthographicCamera$1),void 0!==e.camera&&t.addScene(e)}t.attachInteractors(e),t.addLabels(e),t.createPickingInfo(e),t.addMaterialReferences(e)}),t.updateInteractors();for(var i=0;i<this.scenes.length;i++){var n=this.scenes[i];n.parent&&n.parent.remove(n)}},addScene:function(e,t){this.scenes.push(e),this.currentScene=e,void 0===t&&(this.currentRealScene=e),e.labels=[];var i=document.createElement("div");i.style.position="absolute",i.style.overflow="hidden",i.id=e.name+"Viewport";var n=document.createElement("div");n.style.position="absolute",n.style.overflow="hidden",n.id=e.name,i.appendChild(n);var r=document.createElement("canvas");r.style.position="absolute",r.style.width="100%",r.style.height="100%",r.id=e.name+"Canvas",n.appendChild(r),e.canvas=r,e.ctx=r.getContext("2d");var a=document.createElement("canvas");a.style.position="absolute",a.style.width="100%",a.style.height="100%",a.id=e.name+"HighlightCanvas",n.appendChild(a),e.highlightCanvas=a,e.highlightCtx=a.getContext("2d"),e.div=n,e.viewportDiv=i,this.container.appendChild(i),e.renderTarget=new WebGLRenderTarget,e.pickingRenderTarget=new WebGLRenderTarget,this.updateSceneSize(e),e.startCell=this.startCell,e.highlightScene=new Scene$1,e.highlightScene.add(new Group$1);for(var o=0;o<e.children.length;o++)e.children[o].isLight&&e.highlightScene.add(e.children[o].clone())},attachInteractors:function(e){if(e.userData.attachTransformInteractor&&this.transformInteractor)this.transformInteractor.object=e,this.transformInteractor.camera=this.currentScene.camera;else if(e.userData.attachPanInteractor&&this.panInteractor){var t=e.parent;t.matrix.copy(e.matrixWorld),t.matrixAutoUpdate=!1,t.isScene=!0,t.autoUpdate=!0,t.overrideMaterial=null,t.userData.is3D=this.currentScene.userData.is3D,t.userData.x=this.currentScene.userData.x,t.userData.y=this.currentScene.userData.y,t.userData.width=this.currentScene.userData.width,t.userData.height=this.currentScene.userData.height,e.camera=t.camera=this.currentScene.camera;var i=e.camera.right-e.camera.left,n=e.camera.top-e.camera.bottom,r=new Vector3;r.set(-e.userData.xSize/2,-e.userData.ySize/2,0),r.applyMatrix4(t.matrix);var a=new Vector3;a.set(e.userData.xSize/2,e.userData.ySize/2,0),a.applyMatrix4(t.matrix);var o=(r.x-e.camera.left)/i,s=(a.x-e.camera.left)/i,l=(r.y-e.camera.bottom)/n,c=(a.y-e.camera.bottom)/n,h=t.userData.x+o*t.userData.width,p=t.userData.x+s*t.userData.width,d=t.userData.y+l*t.userData.height,u=t.userData.y+c*t.userData.height;"center"===e.userData.attachPanInteractor?(t.vpX=h,t.vpWidth=p-h,t.vpY=d,t.vpHeight=u-d,t.widthScale=this.panInteractor.widthScale,t.heightScale=this.panInteractor.heightScale,t.leftLimit=o,t.rightLimit=s,t.bottomLimit=1-l,t.topLimit=1-c):"bottom"===e.userData.attachPanInteractor?(t.vpX=h,t.vpWidth=p-h,t.vpY=0,t.vpHeight=u,t.widthScale=this.panInteractor.widthScale):"top"===e.userData.attachPanInteractor?(t.vpX=h,t.vpWidth=p-h,t.vpY=d,t.vpHeight=1-d,t.widthScale=this.panInteractor.widthScale):"left"===e.userData.attachPanInteractor?(t.vpX=0,t.vpWidth=p,t.vpY=d,t.vpHeight=u-d,t.heightScale=this.panInteractor.heightScale):"right"===e.userData.attachPanInteractor&&(t.vpX=h,t.vpWidth=1-h,t.vpY=d,t.vpHeight=u-d,t.heightScale=this.panInteractor.heightScale),t.matrix.elements[12]=0,t.matrix.elements[13]=0,this.addScene(t,!0),"center"===e.userData.attachPanInteractor?this.panInteractor.object=t.div:"bottom"===e.userData.attachPanInteractor?this.panInteractor.linkObjectsBottom.push(t.div):"top"===e.userData.attachPanInteractor?this.panInteractor.linkObjectsTop.push(t.div):"left"===e.userData.attachPanInteractor?this.panInteractor.linkObjectsLeft.push(t.div):"right"===e.userData.attachPanInteractor&&this.panInteractor.linkObjectsRight.push(t.div),this.loading&&t.parent&&t.parent.remove(t),this.panInteractor.update()}},createPickingInfo:function(e){if(void 0!==e.geometry){if(void 0===e.geometry.attributes.cellCount){var t,i;if(e.isThickLineSegments){var n=(o=e.geometry.attributes.positionStart.array.length/3)/2;i=o;for(var r=new Float32Array(n),a=0;a<n;a++)r[a]=2*a;t=new InstancedBufferAttribute(r,1)}else{var o,s=1;e.isPoints?s=1:e.isLineSegments?s=2:e.isMesh&&(s=3),i=(o=e.geometry.attributes.position.array.length/3)/s,t=new Float32BufferAttribute(o,1);for(a=0;a<i;a++)for(var l=0;l<s;l++)t.array[a*s+l]=a}e.geometry.setAttribute("cellCount",t),e.geometry.nCells=i}e.nCells=e.geometry.nCells,e.startCell=this.startCell,e.onBeforeRender=function(e,t,i,n,r,a){r.uniforms.startCell.value=this.startCell;var o=e.properties.get(r);if(o.program){var s=e.getContext();s.useProgram(o.program.program),o.program.getUniforms().setValue(s,"startCell",this.startCell)}},this.startCell+=e.nCells,!this.pickingRenderTarget2&&this.startCell>16777215&&(this.pickingRenderTarget2=new WebGLRenderTarget(this.pixelWidth,this.pixelHeight),this.pickingPixelBuffer2=new Uint8Array(4*this.pixelWidth*this.pixelHeight)),this.updatePicking=!0}},addLabels:function(e){e.isBillboardText&&(e.parent.userData.attachPanInteractorStatic?e.addToScene(this.currentRealScene):e.addToScene(this.currentScene))},addMaterialReferences:function(e){void 0!==e.material&&(e.material.pickState=this.pickState,void 0!==e.material.isLineBasicMaterial&&(e.material.resolution=this.resolution))},loadGeometryAsJson:function(e){var t=this;this.objectLoader.parse(e,function(e){t.clearGeometry(),t.updateSize(),t.addGeometry(e),t.render()})},loadGeometryAsEvents:function(e){var t=this,i=0,n=-1,r=0;function a(e){if(r--,e.layers.set(1),e.visible=e.saveVisible,n>0&&0==r)return t.render(),t.loading=!1,void(t.firstChunk=!1)}function o(e){if("Group"===e.type){var n=t.objectLoader.parse(e);null!==t.curGroup&&t.curGroup.add(n),"SceneRoot"===n.name&&(void 0!==n.userData.background?t.container.style.backgroundColor="#"+n.userData.background.toString(16).padStart(6,"0"):t.container.style.backgroundColor="transparent"),n.updateMatrixWorld(!0),t.attachInteractors(n),t.parentStack.push(n),t.curGroup=n}else if("FinishGroup"===e.type){var o=t.parentStack.pop();t.parentStack.length>0?t.curGroup=t.parentStack[t.parentStack.length-1]:t.curGroup=o}else if("Geometry"===e.type){r++;var s=t.objectLoader.parse(e,a,t.images,t.textures,t.materials,t.geometries,t.curGroup);i++,t.addLabels(s),t.createPickingInfo(s),t.addMaterialReferences(s)}else if("Layout"===e.type){for(var l=t.objectLoader.parse(e),c=0;c<l.children.length;c++){var h=l.children[c];if(h.isPerspectiveCamera||h.isOrthographicCamera){l.camera=h,l.remove(h);break}}void 0==l.camera&&null!==l.background&&(l.camera=new OrthographicCamera$1),void 0!==l.camera&&t.addScene(l),t.curGroup=l}else console.log("ERROR: unknown type: "+e.type)}if(!1===this.loading&&(this.clearGeometry(),this.parentStack=[],this.curGroup=null,this.images=[],this.textures=[],this.materials=[],this.geometries=[],this.firstChunk=!0),this.loading=!0,this.updateSize(),void 0!==e&&void 0!==e.events&&0!==e.events.length){for(var s=0;s<e.events.length;s++)o(e.events[s]);!0===e.moreChunks?this.render():(n=i-1,0==r&&(this.render(),this.loading=!1)),this.firstChunk=!1}else console.error("AVS.Three.Viewer.loadGeometryAsEvents: Can't get events")},highlightRender:function(){if(void 0!==this.renderer)for(var e=0;e<this.scenes.length;e++){var t=this.scenes[e];this.resolution.x=t.pixelWidth,this.resolution.y=t.pixelHeight,this.renderer.setSize(t.width,t.height),this.renderer.setClearColor(0,0),this.renderer.clear(),this.renderer.render(t.highlightScene,t.camera),t.highlightCtx.clearRect(0,0,t.pixelWidth,t.pixelHeight),t.highlightCtx.drawImage(this.renderer.domElement,0,0)}else console.error("AVS.Three.Viewer: WebGLRenderer not set.")},pickRender:function(){if(void 0!==this.renderer){for(var e=0;e<this.scenes.length;e++){var t=this.scenes[e];this.resolution.x=t.pixelWidth,this.resolution.y=t.pixelHeight,this.renderer.setRenderTarget(t.pickingRenderTarget),this.pickState[0]=1,this.renderer.setClearColor(0,0),this.renderer.clear(),this.renderer.render(t,t.camera),this.renderer.readRenderTargetPixels(t.pickingRenderTarget,0,0,t.pixelWidth,t.pixelHeight,t.pickingPixelBuffer),t.pickingRenderTarget2&&(this.renderer.setRenderTarget(t.pickingRenderTarget2),this.pickState[0]=2,this.renderer.clear(),this.renderer.render(t,t.camera),this.renderer.readRenderTargetPixels(t.pickingRenderTarget2,0,0,t.pixelWidth,t.pixelHeight,t.pickingPixelBuffer2))}this.pickState[0]=0,this.renderer.setRenderTarget(null)}else console.error("AVS.Three.Viewer: WebGLRenderer not set.")},render:function(e){if(void 0!==this.renderer){this.updateSize();for(var t=this.loading,i=e||!t,n=0;n<this.scenes.length;n++){var r=this.scenes[n];if(this.resolution.x=r.pixelWidth,this.resolution.y=r.pixelHeight,i?this.renderer.setSize(r.width,r.height):this.renderer.setRenderTarget(r.renderTarget),(i||this.firstChunk)&&(r.userData.background?this.renderer.setClearColor(r.userData.background,1):this.renderer.setClearColor(0,0),this.renderer.clear()),!i){r.camera.layers.set(1);for(var a=0;a<r.children.length;a++)r.children[a].isLight&&r.children[a].layers.set(1)}if(this.renderer.render(r,r.camera),i)r.ctx.clearRect(0,0,r.pixelWidth,r.pixelHeight),r.ctx.drawImage(this.renderer.domElement,0,0);else{this.renderer.readRenderTargetPixels(r.renderTarget,0,0,r.pixelWidth,r.pixelHeight,r.pixelBuffer);for(var o,s,l=r.ctx.createImageData(r.pixelWidth,r.pixelHeight),c=4*r.pixelWidth,h=0;h<r.pixelBuffer.length;h++)o=Math.floor(h/c),s=h%c,l.data[(r.pixelHeight-o-1)*c+s]=r.pixelBuffer[h];r.ctx.putImageData(l,0,0),this.renderer.setRenderTarget(null),r.camera.layers.set(0),r.traverse(function(e){e.layers.set(0)})}for(a=0;a<r.labels.length;a++)r.labels[a].updatePosition()}this.updateHighlight&&(this.highlightRender(),this.updateHighlight=!1)}else console.error("AVS.Three.Viewer: WebGLRenderer not set.")},addSelectionListener:function(e){void 0!==e&&this.selectionListeners.push(e)},concatObjectsFromCellNums:function(e,t,i,n){if(void 0!==i&&0!==i.length&&0!==i[0]){for(void 0===n&&(n=t.startCell,i.sort(function(e,t){return e-t}));void 0!==t.nCells&&i[0]>=n&&i[0]<n+t.nCells;)if(t.isMesh?e.push({object:t,faceIndex:i[0]-n}):e.push({object:t,index:(t.isLineSegments?2:1)*(i[0]-n)}),i.splice(0,1),0===i.length)return;void 0!==t.nCells&&(n+=t.nCells);for(var r=0;r<t.children.length&&void 0!==(n=this.concatObjectsFromCellNums(e,t.children[r],i,n));r++);return n}},pick:function(){if(!1!==this.validPick){this.pickDepth===PickDepthEnum.Closest&&this.updatePicking&&(this.pickRender(),this.updatePicking=!1),this.intersects=[];for(var e=0;e<this.scenes.length;e++){var t=this.scenes[e];if(this.pickType===PickTypeEnum.Rectangle){var i=Math.max(this.pickRectangleX,t.viewportPixelX),n=Math.max(this.pickRectangleY,t.viewportPixelTop),r=Math.min(this.pickRectangleX+this.pickRectangleWidth,t.viewportPixelX+t.viewportPixelWidth),a=Math.min(this.pickRectangleY+this.pickRectangleHeight,t.viewportPixelTop+t.viewportPixelHeight);i-=t.viewportPixelX,n-=t.viewportPixelTop,r-=t.viewportPixelX,a-=t.viewportPixelTop,t.div.panOffsetX&&(i-=t.div.panOffsetX+t.div.baseLeft,r-=t.div.panOffsetX+t.div.baseLeft),t.div.panOffsetY&&(n-=t.div.panOffsetY+t.div.baseTop,a-=t.div.panOffsetY+t.div.baseTop);for(var o=[],s=i;s<r;s++)for(var l=a;l<n;l++)if(this.pickDepth===PickDepthEnum.All){var c=s/t.pixelWidth*2-1,h=(t.pixelHeight-l-1)/t.pixelHeight*2-1;this.raycaster.setFromCamera(new Vector2(c,h),t.camera);var p=this.raycaster.intersectObjects(t.children,!0);this.intersects=this.intersects.concat(p)}else{var d=4*(s+(t.pixelHeight-l-1)*t.pixelWidth),u=255*t.pickingPixelBuffer[d]*255+255*t.pickingPixelBuffer[d+1]+t.pickingPixelBuffer[d+2];t.pickingPixelBuffer2&&(u+=255*t.pickingPixelBuffer2[d]*255*255*255*255+255*t.pickingPixelBuffer2[d+1]*255*255*255+255*t.pickingPixelBuffer2[d+2]*255*255),u>0&&-1===o.indexOf(u)&&o.push(u)}this.pickDepth===PickDepthEnum.Closest&&this.concatObjectsFromCellNums(this.intersects,t,o)}else{if(this.pickRayX<t.viewportPixelX||this.pickRayX>t.viewportPixelX+t.viewportPixelWidth||this.pickRayY<t.viewportPixelTop||this.pickRayY>t.viewportPixelTop+t.viewportPixelHeight)continue;var f=this.pickRayX-t.viewportPixelX,m=this.pickRayY-t.viewportPixelTop;if(t.div.panOffsetX&&(f-=t.div.panOffsetX+t.div.baseLeft),t.div.panOffsetY&&(m-=t.div.panOffsetY+t.div.baseTop),this.pickDepth===PickDepthEnum.All){c=f/t.pixelWidth*2-1,h=(t.pixelHeight-m-1)/t.pixelHeight*2-1;this.raycaster.setFromCamera(new Vector2(c,h),t.camera),this.raycaster.scene=t,this.raycaster.x=f,this.raycaster.y=m;p=this.raycaster.intersectObjects(t.children,!0);this.intersects=this.intersects.concat(p)}else{d=4*(f+(t.pixelHeight-m-1)*t.pixelWidth),u=255*t.pickingPixelBuffer[d]*255+255*t.pickingPixelBuffer[d+1]+t.pickingPixelBuffer[d+2];t.pickingPixelBuffer2&&(u+=255*t.pickingPixelBuffer2[d]*255*255*255*255+255*t.pickingPixelBuffer2[d+1]*255*255*255+255*t.pickingPixelBuffer2[d+2]*255*255),this.concatObjectsFromCellNums(this.intersects,t,[u])}}}for(e=0;e<this.selectionListeners.length;e++)this.selectionListeners[e]()}else console.error("AVS.Three.Viewer: invalid pick ray or rectangle.")},getPickedCells:function(){for(var e=[],t=0;t<this.intersects.length;t++){var i=this.intersects[t].object;if(!1!==i.userData.pickable){for(var n=i.isMesh?this.intersects[t].faceIndex:this.intersects[t].index,r=!1,a=0;a<e.length;a++)if(i===e[a].object){r=!0;for(var o=!1,s=0;s<e[a].indices.length;s++)if(n===e[a].indices[s]){o=!0;break}o||e[a].indices.push(n);break}r||e.push({object:i,indices:[n]})}}return e},getPickedCellSets:function(){for(var e=[],t=0;t<this.intersects.length;t++){var i=this.intersects[t].object;if(!1!==i.userData.pickable){for(var n=!1,r=0;r<e.length;r++)if(e[r].object===i){n=!0;break}n||e.push({object:i})}}return e},getPickedSceneNodes:function(){for(var e=[],t=0;t<this.intersects.length;t++){var i=this.intersects[t].object;if(!1!==i.userData.pickable){for(var n=i.parent,r=!1,a=0;a<e.length;a++)if(e[a].object===n){r=!0;break}r||e.push({object:n})}}return e},getSelectionInfo:function(e){for(var t=[],i=0;i<e.length;i++){var n=e[i].object,r=e[i].indices;if(void 0!==r)for(var a=0;a<r.length;a++)t.push(o(n,{},r[a]));else t.push(o(n,{}))}function o(e,t,i){var n=!1;return void 0===t.seriesIndex&&(void 0!==e.userData.seriesIndex?t.seriesIndex=e.userData.seriesIndex:n=!0),void 0===t.itemIndex&&(void 0!==e.userData.itemIndex?void 0!==i&&Array.isArray(e.userData.itemIndex)?t.itemIndex=e.userData.itemIndex[i]:t.itemIndex=e.userData.itemIndex:n=!0),void 0===t.componentInfo&&(void 0!==e.userData.componentInfo?void 0!==i&&Array.isArray(e.userData.componentInfo)?t.componentInfo=decodeURIComponent(e.userData.componentInfo[i]):Array.isArray(e.userData.componentInfo)?t.componentInfo=decodeURIComponent("["+e.userData.componentInfo+"]"):t.componentInfo=decodeURIComponent(e.userData.componentInfo):n=!0),n&&e.parent?o(e.parent,t):t}return t},highlightObjects:function(e,t){for(var i=!1,n=0;n<this.highlightList.length;n++){void 0!==(o=this.highlightList[n]).saveMaterial&&(o.material=o.saveMaterial,o.saveMaterial=void 0,i=!0),void 0!==o.saveGeometry&&(o.geometry=o.saveGeometry,o.saveGeometry=void 0,i=!0)}for(n=0;n<this.scenes.length;n++){var r=this.scenes[n].highlightScene.children[0].children;r.length>0&&(r.length=0,this.updateHighlight=!0)}this.highlightList.length=0;var a=this;for(n=0;n<e.length;n++){var o;s(o=e[n].object,e[n].indices)}function s(e,n){if(e.isMesh||e.isLineSegments||e.isPoints){a.highlightList.push(e);var r,o=e.material.clone();if(o.opacity=1,void 0!==n){var l=e.geometry;if(o.vertexColors=!0,o.color=new Color(16777215),e.isThickLineSegments){r=new InstancedBufferGeometry;var c,h=l.attributes.colorStart;if(void 0===h){c=new InstancedInterleavedBuffer(new Float32Array(l.attributes.positionStart.array.length),6,1);for(var p=0,d=0;d<c.array.length/3;d++)c.array[p++]=e.material.color.r,c.array[p++]=e.material.color.g,c.array[p++]=e.material.color.b}else c=h.data.clone();p=null;var u=null;for(d=0;d<n.length;d++){p=6*Math.floor(n[d]/6),u=2;for(var f=0;f<u;f++)c.array[p++]=a.highlightColor.r,c.array[p++]=a.highlightColor.g,c.array[p++]=a.highlightColor.b}for(var m in r.setAttribute("colorStart",new InterleavedBufferAttribute(c,3,0)),r.setAttribute("colorEnd",new InterleavedBufferAttribute(c,3,3)),l.attributes)"colorStart"!==m&&"colorEnd"!==m&&r.setAttribute(m,l.attributes[m])}else{r=new BufferGeometry;var g=l.attributes.color,v=null;if(void 0===g){v=new Float32BufferAttribute(l.attributes.position.array.length,3);for(p=0,d=0;d<v.array.length/3;d++)v.array[p++]=e.material.color.r,v.array[p++]=e.material.color.g,v.array[p++]=e.material.color.b}else v=g.clone();for(p=null,u=null,d=0;d<n.length;d++){e.cellType===CellTypeEnum.Points?(p=3*n[d],u=1):e.cellType===CellTypeEnum.Lines?(p=3*n[d],u=2):e.cellType===CellTypeEnum.Triangles?(p=9*n[d],u=3):(p=18*Math.floor(n[d]/2),u=6);for(f=0;f<u;f++)v.array[p++]=a.highlightColor.r,v.array[p++]=a.highlightColor.g,v.array[p++]=a.highlightColor.b}for(var m in r.setAttribute("color",v),l.attributes)"color"!==m&&r.setAttribute(m,l.attributes[m])}}else o.vertexColors=!1,o.color=a.highlightColor,r=e.geometry;var b=a.getObjectScene(e);if(void 0!==b.userData.is3D&&!1===b.userData.is3D&&void 0!==t&&!0===t){var y=e.clone();y.material=o,y.geometry=r,y.matrixAutoUpdate=!1,y.matrix.copy(e.matrixWorld),b.highlightScene.children[0].add(y),a.updateHighlight=!0}else e.saveMaterial=e.material,e.material=o,e.saveGeometry=e.geometry,e.geometry=r,i=!0}for(var x=0;x<e.children.length;x++)s(e.children[x])}i?this.render(!0):this.updateHighlight&&(this.highlightRender(),this.updateHighlight=!1)},getObjectScene:function(e){return e.isScene?e:this.getObjectScene(e.parent)}},TransformInteractor.prototype=Object.create(EventDispatcher.prototype),TransformInteractor.prototype.constructor=TransformInteractor,TransformInteractor.prototype.isTransformInteractor=!0,PanInteractor.prototype=Object.create(EventDispatcher.prototype),PanInteractor.prototype.constructor=PanInteractor,PanInteractor.prototype.isPanInteractor=!0;export{CellTypeEnum,DEFAULT_VIEWER_HEIGHT,DEFAULT_VIEWER_WIDTH,PanInteractor,PickDepthEnum,PickLevelEnum,PickTypeEnum,RAYCASTER_LINE_PRECISION,REVISION,TransformInteractor,Viewer};
